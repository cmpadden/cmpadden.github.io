[{"data":1,"prerenderedAt":366},["Reactive",2],{"page-data":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"draft":6,"date":10,"tags":11,"categories":15,"excerpt":16,"body":27,"_type":361,"_id":362,"_source":363,"_file":364,"_extension":365},"/articles/fennel-initial-exploration","articles",false,"","Initial Exploration of Fennel: Extending Hammerspoon","My first impressions of Fennel for configuring Hammerspoon","2023-10-22",[12,13,14],"lisp","hammerspoon","fennel",[12],{"type":17,"children":18},"root",[19],{"type":20,"tag":21,"props":22,"children":23},"element","p",{},[24],{"type":25,"value":26},"text","A while back I read an introductory book on Lisp programming titled, \"The Little\nSchemer\". This book opened my mind to new (to me) programming paradigms, and left me\nwith a strong desire to find a way to incorporate Lisp programming into my every day\nlife. It took some time, but I believe I've found what I've been looking for: Fennel.",{"type":17,"children":28,"toc":354},[29,33,67,83,90,104,110,139,171,183,209,221,227,255,264,274,287,296,306,318,324,329,343],{"type":20,"tag":21,"props":30,"children":31},{},[32],{"type":25,"value":26},{"type":20,"tag":21,"props":34,"children":35},{},[36,38,47,49,56,58,65],{"type":25,"value":37},"The ",{"type":20,"tag":39,"props":40,"children":44},"a",{"href":41,"rel":42},"https://fennel-lang.org/",[43],"nofollow",[45],{"type":25,"value":46},"Fennel",{"type":25,"value":48}," programming language is a dialect of Lisp that boasts compatibility with\nLua, and it just so happens that two of my favorite applications are configured with\nexactly that language: ",{"type":20,"tag":39,"props":50,"children":53},{"href":51,"rel":52},"https://www.hammerspoon.org/",[43],[54],{"type":25,"value":55},"Hammerspoon",{"type":25,"value":57},", and ",{"type":20,"tag":39,"props":59,"children":62},{"href":60,"rel":61},"https://neovim.io/",[43],[63],{"type":25,"value":64},"Neovim",{"type":25,"value":66},".",{"type":20,"tag":68,"props":69,"children":70},"div",{},[71,73],{"type":25,"value":72},"\n  ",{"type":20,"tag":74,"props":75,"children":82},"img",{"className":76,"src":80,"alt":81},[77,78,79],"h-48","rounded-lg","shadow-md","/images/dall-e-fennel-hammer.jpeg","Dall-E Generated Image of Fennel and a Hammer",[],{"type":20,"tag":84,"props":85,"children":87},"h2",{"id":86},"initial-observations",[88],{"type":25,"value":89},"Initial Observations",{"type":20,"tag":21,"props":91,"children":92},{},[93,95,102],{"type":25,"value":94},"To initially explore Fennel, I wanted to start small. My Hammerspoon configuration\nconsists of 7 ",{"type":20,"tag":39,"props":96,"children":99},{"href":97,"rel":98},"https://github.com/cmpadden/dotfiles/tree/795749fa17e1310bb001bb7deaa22be8689f0027/hammerspoon/.hammerspoon/modules",[43],[100],{"type":25,"value":101},"modules",{"type":25,"value":103}," that I use for operations such as: launching applications,\nmanaging windows, keeping my computer from going to sleep, and general operating system\nautomation. So the plan is to translate these modules into Fennel, while maintaining\nwithout breaking the existing functionality. However, at this point, I wasn't even sure\nhow to embed Fennel into my project...",{"type":20,"tag":84,"props":105,"children":107},{"id":106},"integrating-fennel-with-hammerspoon",[108],{"type":25,"value":109},"Integrating Fennel with Hammerspoon",{"type":20,"tag":21,"props":111,"children":112},{},[113,115,122,124,130,132,137],{"type":25,"value":114},"While official documentation exists describing how to ",{"type":20,"tag":39,"props":116,"children":119},{"href":117,"rel":118},"https://fennel-lang.org/setup#embedding-fennel",[43],[120],{"type":25,"value":121},"embed fennel",{"type":25,"value":123}," into your\nproject; it didn't provide me with enough clarity to know my next steps on integrating\nit with Hammerspoon. I found a few resources online demonstrating how to extend the\n",{"type":20,"tag":125,"props":126,"children":127},"code",{},[128],{"type":25,"value":129},"package.path",{"type":25,"value":131}," and ",{"type":20,"tag":125,"props":133,"children":134},{},[135],{"type":25,"value":136},"package.cpath",{"type":25,"value":138}," properties in Lua, but I was unable to get this to\nwork.",{"type":20,"tag":140,"props":141,"children":142},"ul",{},[143,153,162],{"type":20,"tag":144,"props":145,"children":146},"li",{},[147],{"type":20,"tag":39,"props":148,"children":151},{"href":149,"rel":150},"https://blog.exupero.org/hammerspoon-with-fennel/",[43],[152],{"type":25,"value":149},{"type":20,"tag":144,"props":154,"children":155},{},[156],{"type":20,"tag":39,"props":157,"children":160},{"href":158,"rel":159},"https://github.com/Hammerspoon/hammerspoon/issues/2377#issuecomment-636331435",[43],[161],{"type":25,"value":158},{"type":20,"tag":144,"props":163,"children":164},{},[165],{"type":20,"tag":39,"props":166,"children":169},{"href":167,"rel":168},"https://github.com/agzam/spacehammer/blob/master/init.lua",[43],[170],{"type":25,"value":167},{"type":20,"tag":21,"props":172,"children":173},{},[174,176,181],{"type":25,"value":175},"Ultimately, I opted to include the ",{"type":20,"tag":125,"props":177,"children":178},{},[179],{"type":25,"value":180},"fennel.lua",{"type":25,"value":182}," file to my Hammerspoon configuration,\nand while not ideal, it does make the configuration nicely self-contained. I'll leave it\nas a future task to include the module installed with LuaRocks.",{"type":20,"tag":21,"props":184,"children":185},{},[186,188,193,195,200,202,207],{"type":25,"value":187},"With Fennel now included in my Hammerspoon configuration, all I need to do is configure\nthe ",{"type":20,"tag":125,"props":189,"children":190},{},[191],{"type":25,"value":192},"fennel.path",{"type":25,"value":194}," to point to the ",{"type":20,"tag":125,"props":196,"children":197},{},[198],{"type":25,"value":199},"*.fnl",{"type":25,"value":201}," files in the ",{"type":20,"tag":125,"props":203,"children":204},{},[205],{"type":25,"value":206},".hammerspoon/",{"type":25,"value":208}," directory, and\nttranslating these modules can begin!",{"type":20,"tag":210,"props":211,"children":216},"pre",{"className":212,"code":214,"language":215,"meta":7},[213],"language-lua","-- init.lua\n\nlocal fennel = require('fennel')\n\nfennel.path = package.path .. \";\" .. os.getenv(\"HOME\") .. \"/.hammerspoon/?.fnl\"\n\ntable.insert(package.loaders or package.searchers, fennel.searcher)\n\nrequire 'main'\n","lua",[217],{"type":20,"tag":125,"props":218,"children":219},{"__ignoreMap":7},[220],{"type":25,"value":214},{"type":20,"tag":84,"props":222,"children":224},{"id":223},"translating-lua-to-fennel",[225],{"type":25,"value":226},"Translating Lua to Fennel",{"type":20,"tag":21,"props":228,"children":229},{},[230,232,239,241,246,248,253],{"type":25,"value":231},"As a Fennel novice, I was happy to see that the Fennel project provides an online\ncross-compiler for Lua and Fennel called ",{"type":20,"tag":39,"props":233,"children":236},{"href":234,"rel":235},"https://fennel-lang.org/see",[43],[237],{"type":25,"value":238},"anti-fennel",{"type":25,"value":240},", and while it can generate some\nstrange-looking Fennel code, it was an extremely useful tool for me to get\nup-and-running right away. For example, by pasting the simple ",{"type":20,"tag":125,"props":242,"children":243},{},[244],{"type":25,"value":245},"sleep",{"type":25,"value":247}," function\nfrom the ",{"type":20,"tag":125,"props":249,"children":250},{},[251],{"type":25,"value":252},"helpers",{"type":25,"value":254}," module into the compiler:",{"type":20,"tag":210,"props":256,"children":259},{"className":257,"code":258,"language":215,"meta":7},[213],"function sleep(ms)\n    os.execute(\"sleep \" .. tonumber(ms) / 1000)\nend\n",[260],{"type":20,"tag":125,"props":261,"children":262},{"__ignoreMap":7},[263],{"type":25,"value":258},{"type":20,"tag":210,"props":265,"children":269},{"className":266,"code":268,"language":14,"meta":7},[267],"language-fennel","(fn sleep [ms]\n  (os.execute (.. \"sleep \" (/ (tonumber ms) 1000))))\n",[270],{"type":20,"tag":125,"props":271,"children":272},{"__ignoreMap":7},[273],{"type":25,"value":268},{"type":20,"tag":21,"props":275,"children":276},{},[277,279,285],{"type":25,"value":278},"As another example, here is the output for my ",{"type":20,"tag":280,"props":281,"children":282},"em",{},[283],{"type":25,"value":284},"caffeine",{"type":25,"value":286}," toggle:",{"type":20,"tag":210,"props":288,"children":291},{"className":289,"code":290,"language":215,"meta":7},[213],"hs.hotkey.bind(HYPER, \"0\", function()\n  hs.caffeinate.toggle(\"displayIdle\")\n  if hs.caffeinate.get(\"displayIdle\") then\n    helpers:show(\"Caffeine Enabled\", nil, helpers.styles.success, helpers.assets.check)\n  else\n    helpers:show(\"Caffeine Disabled\", nil, helpers.styles.error, helpers.assets.ban)\n  end\nend)\n",[292],{"type":20,"tag":125,"props":293,"children":294},{"__ignoreMap":7},[295],{"type":25,"value":290},{"type":20,"tag":210,"props":297,"children":301},{"className":298,"code":300,"language":12,"meta":7},[299],"language-lisp","(hs.hotkey.bind HYPER :0\n  (fn [] (hs.caffeinate.toggle :displayIdle)\n    (if (hs.caffeinate.get :displayIdle)\n      (helpers:show \"Caffeine Enabled\" nil helpers.styles.success helpers.assets.check)\n      (helpers:show \"Caffeine Disabled\" nil helpers.styles.error helpers.assets.ban)))) \n",[302],{"type":20,"tag":125,"props":303,"children":304},{"__ignoreMap":7},[305],{"type":25,"value":300},{"type":20,"tag":21,"props":307,"children":308},{},[309,311,316],{"type":25,"value":310},"This was especially helpful for more gnarly modules like the ",{"type":20,"tag":125,"props":312,"children":313},{},[314],{"type":25,"value":315},"window",{"type":25,"value":317}," module used for\nwindow management, and seeing the Lua and Fennel code side-by-side was a kick starter in\nlearning the language!",{"type":20,"tag":84,"props":319,"children":321},{"id":320},"next-steps",[322],{"type":25,"value":323},"Next Steps",{"type":20,"tag":21,"props":325,"children":326},{},[327],{"type":25,"value":328},"While my Fennel Hammerspoon configuration now works with parity to its Lua counterpart,\nI have not yet added new features or modules. I look forward to writing new Fennel code,\nand deepen my understanding of Lisp and the Fennel programming language.",{"type":20,"tag":21,"props":330,"children":331},{},[332,334,341],{"type":25,"value":333},"Additionally, before beginning this endeavor, I was already aware of projects like\n",{"type":20,"tag":39,"props":335,"children":338},{"href":336,"rel":337},"https://github.com/agzam/spacehammer",[43],[339],{"type":25,"value":340},"spacehammer",{"type":25,"value":342},"; a wildly impressive Hammerspoon configuration written in Fennel, but,\nI wanted to start small and learn the integration myself. However, with the basics out\nof the way, I hope to explore this project further, and seek lessons-learned for the\nconfiguration of my own.",{"type":20,"tag":21,"props":344,"children":345},{},[346,348],{"type":25,"value":347},"The full pull-request for translating my Lua Hammerspoon configuration to Fennel can be\nfound here: ",{"type":20,"tag":39,"props":349,"children":352},{"href":350,"rel":351},"https://github.com/cmpadden/dotfiles/pull/19/files",[43],[353],{"type":25,"value":350},{"title":7,"searchDepth":355,"depth":355,"links":356},2,[357,358,359,360],{"id":86,"depth":355,"text":89},{"id":106,"depth":355,"text":109},{"id":223,"depth":355,"text":226},{"id":320,"depth":355,"text":323},"markdown","content:articles:fennel-initial-exploration.md","content","articles/fennel-initial-exploration.md","md",1698008529973]