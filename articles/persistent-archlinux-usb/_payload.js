export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al){return {data:{"page-data":{_path:"\u002Farticles\u002Fpersistent-archlinux-usb",_dir:"articles",_draft:n,_partial:n,_locale:"en",_empty:n,title:"Create a Persistent Arch Linux Bootable USB with Vagrant",description:r,excerpt:{type:u,children:[{type:a,tag:g,props:{},children:[{type:b,value:r}]}]},date:"2020-01-09",draft:n,tags:["vagrant","archlinux"],categories:["linux"],body:{type:u,children:[{type:a,tag:g,props:{},children:[{type:b,value:r}]},{type:a,tag:v,props:{id:"preface"},children:[{type:b,value:"Preface"}]},{type:a,tag:g,props:{},children:[{type:b,value:"The original intention was to use Docker for this process -- leveraging the\n"},{type:a,tag:i,props:{},children:[{type:b,value:"--device"}]},{type:b,value:" flag and mounting the target USB device in the Docker container,\nbut the underlying hypervisor in Docker Desktop for Mac does not support this.\n"},{type:a,tag:l,props:{},children:[{type:a,tag:d,props:{href:w,rel:[e]},children:[{type:b,value:"1"}]},{type:b,value:s},{type:a,tag:d,props:{href:x,rel:[e]},children:[{type:b,value:"2"}]},{type:b,value:s},{type:a,tag:d,props:{href:y,rel:[e]},children:[{type:b,value:"3"}]}]},{type:b,value:" While there are workarounds using Docker\nMachine, Vagrant felt like the path of least resistance."}]},{type:a,tag:v,props:{id:"instructions"},children:[{type:b,value:"Instructions"}]},{type:a,tag:o,props:{id:z},children:[{type:b,value:A}]},{type:a,tag:g,props:{},children:[{type:b,value:"Get the latest Arch Linux image "},{type:a,tag:l,props:{},children:[{type:a,tag:d,props:{href:B,rel:[e]},children:[{type:b,value:"4"}]}]},{type:b,value:" from the Vagrant Cloud Box\nCatalog."}]},{type:a,tag:c,props:{code:C,language:k},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:C}]}]}]},{type:a,tag:g,props:{},children:[{type:b,value:"Determine the USB vendor information for the thumb-drive that we will\npass-through to the virtual machine. Using the "},{type:a,tag:i,props:{},children:[{type:b,value:D}]},{type:b,value:" utility that comes\nwith Virtual Box, list the devices, and make note of the Vendor and Product ID."}]},{type:a,tag:c,props:{code:E,language:k},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:E}]}]}]},{type:a,tag:g,props:{},children:[{type:b,value:"Create a "},{type:a,tag:i,props:{},children:[{type:b,value:"Vagrantfile"}]},{type:b,value:" with "},{type:a,tag:i,props:{},children:[{type:b,value:"archlinx\u002Farchlinux"}]},{type:b,value:" as the target box, and the USB\ndevice information that is passed through. "},{type:a,tag:l,props:{},children:[{type:a,tag:d,props:{href:F,rel:[e]},children:[{type:b,value:"5"}]},{type:b,value:s},{type:a,tag:d,props:{href:G,rel:[e]},children:[{type:b,value:"6"}]}]},{type:b,value:" Vagrant\noffers a handy customization parameter "},{type:a,tag:i,props:{},children:[{type:b,value:H}]},{type:b,value:" that calls the\n"},{type:a,tag:i,props:{},children:[{type:b,value:D}]},{type:b,value:" command under-the-hood, allowing one to enable the guest machine\nto access the host machine's USB devices."}]},{type:a,tag:c,props:{code:I,language:t},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:I}]}]}]},{type:a,tag:g,props:{},children:[{type:b,value:"When virtual machine is brought up, the "},{type:a,tag:i,props:{},children:[{type:b,value:"usbfilter"}]},{type:b,value:" is applied, and the guest\nis able to access to the host machine's USB device that was specified in the\nfilter."}]},{type:a,tag:g,props:{},children:[{type:b,value:"Start the machine, "},{type:a,tag:i,props:{},children:[{type:b,value:"ssh"}]},{type:b,value:" into the guest, and list the devices to confirm that\nthe USB device is available (see: "},{type:a,tag:i,props:{},children:[{type:b,value:"\u002Fdev\u002Fsdb"}]},{type:b,value:")."}]},{type:a,tag:c,props:{code:J,language:k},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:J}]}]}]},{type:a,tag:o,props:{id:K},children:[{type:b,value:L}]},{type:a,tag:g,props:{},children:[{type:b,value:"The "},{type:a,tag:d,props:{href:M,rel:[e]},children:[{type:b,value:"Arch Linux Installation Guide"}]},{type:b,value:" outlines the installation procedure in\ngreat detail -- the following steps follow this closely with a few alteration\ndue to installing onto removable media."}]},{type:a,tag:p,props:{id:N},children:[{type:b,value:O}]},{type:a,tag:c,props:{code:P,language:k},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:P}]}]}]},{type:a,tag:c,props:{code:Q,language:t},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:Q}]}]}]},{type:a,tag:p,props:{id:R},children:[{type:b,value:S}]},{type:a,tag:g,props:{},children:[{type:b,value:"The UEFI specification mandates support for FAT file-systems, and FAT32 is\nrecommended for removable media. "},{type:a,tag:l,props:{},children:[{type:a,tag:d,props:{href:T,rel:[e]},children:[{type:b,value:"7"}]}]}]},{type:a,tag:c,props:{code:U,language:k},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:U}]}]}]},{type:a,tag:g,props:{},children:[{type:b,value:"As for the root partition, it is recommended to use "},{type:a,tag:i,props:{},children:[{type:b,value:"ext4"}]},{type:b,value:" without a journal to\nreduce the reads and writes to the file-system as this is detrimental to the\nflash-based USB drive. "},{type:a,tag:l,props:{},children:[{type:a,tag:d,props:{href:V,rel:[e]},children:[{type:b,value:"8"}]}]}]},{type:a,tag:c,props:{code:W,language:k},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:W}]}]}]},{type:a,tag:p,props:{id:X},children:[{type:b,value:Y}]},{type:a,tag:c,props:{code:Z,language:k},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:Z}]}]}]},{type:a,tag:c,props:{code:_,language:k},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:_}]}]}]},{type:a,tag:p,props:{id:$},children:[{type:b,value:aa}]},{type:a,tag:c,props:{code:ab},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:ab}]}]}]},{type:a,tag:c,props:{code:ac},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:ac}]}]}]},{type:a,tag:c,props:{code:ad},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:ad}]}]}]},{type:a,tag:g,props:{},children:[{type:b,value:"Note, one difference here from a standard installation is that the\n"},{type:a,tag:i,props:{},children:[{type:b,value:"--removable"}]},{type:b,value:" flag is specified when installing the GRUB bootloader.\n"},{type:a,tag:l,props:{},children:[{type:a,tag:d,props:{href:ae,rel:[e]},children:[{type:b,value:"10"}]}]}]},{type:a,tag:c,props:{code:af},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:af}]}]}]},{type:a,tag:g,props:{},children:[{type:b,value:"Shutdown the virtual machine, restart the host machine, and boot the newly\ncreated Arch Linux thumb-drive!"}]},{type:a,tag:g,props:{},children:[{type:b,value:"ðŸŽ‰"}]},{type:a,tag:o,props:{id:ag},children:[{type:b,value:ah}]},{type:a,tag:g,props:{},children:[{type:b,value:"It was attempted to use the "},{type:a,tag:i,props:{},children:[{type:b,value:"controlvm usbattach"}]},{type:b,value:" command to pass the USB\ndevice to the guest machine, but this did not work as it expects the virtual\nmachine to already be running, and the "},{type:a,tag:i,props:{},children:[{type:b,value:H}]},{type:b,value:" option runs prior to\nbooting the machine. "},{type:a,tag:l,props:{},children:[{type:a,tag:d,props:{href:ai,rel:[e]},children:[{type:b,value:"11"}]}]}]},{type:a,tag:c,props:{code:aj,language:t},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:f},children:[{type:b,value:aj}]}]}]},{type:a,tag:o,props:{id:ak},children:[{type:b,value:al}]},{type:a,tag:"ol",props:{},children:[{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:w,rel:[e]},children:[{type:b,value:"Docker Desktop on Mac vs. Docker Toolbox"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:x,rel:[e]},children:[{type:b,value:"GitHub - HyperKit"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:y,rel:[e]},children:[{type:b,value:"GitHub - Docker for Mac - Issue #900"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:B,rel:[e]},children:[{type:b,value:"Vagrant Cloud - Arch Linux"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:F,rel:[e]},children:[{type:b,value:"Attaching USB Devices to VirtualBox Guests using VBoxManage"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:G,rel:[e]},children:[{type:b,value:"GitHub Gist - Vagrant USB Filter"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:T,rel:[e]},children:[{type:b,value:"Arch Linux Wiki - EFI System Partition - Format Partitions"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:V,rel:[e]},children:[{type:b,value:"Arch Linux Wiki - Arch Linux on USB - Installation Tweaks"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:M,rel:[e]},children:[{type:b,value:"Arch Linux Wiki - Installation Guide"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:ae,rel:[e]},children:[{type:b,value:"Arch Linux Wiki - GRUB - UEFI Systems"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:ai,rel:[e]},children:[{type:b,value:"Vagrant VBoxManage Customizations "}]}]}]}],toc:{title:f,searchDepth:m,depth:m,links:[{id:z,depth:m,text:A},{id:K,depth:m,text:L,children:[{id:N,depth:q,text:O},{id:R,depth:q,text:S},{id:X,depth:q,text:Y},{id:$,depth:q,text:aa}]},{id:ag,depth:m,text:ah},{id:ak,depth:m,text:al}]}},_type:"markdown",_id:"content:articles:persistent-archlinux-usb.md",_source:"content",_file:"articles\u002Fpersistent-archlinux-usb.md",_extension:"md"}},prerenderedAt:1672496695114}}("element","text","code","a","nofollow","","p","pre","code-inline","li","bash","sup",2,false,"h2","h3",3,"When installing a linux distribution, it is common for the instructions to have\nthe user create a bootable USB, boot from the device, and proceed with the\ninstallation procedure from that live medium. However, this blog post will\noutline an alternative approach where a virtual machine created with Vagrant\nwill be used in favor of the live medium."," ","txt","root","h1","https:\u002F\u002Fdocs.docker.com\u002Fdocker-for-mac\u002Fdocker-toolbox\u002F","https:\u002F\u002Fgithub.com\u002Fmoby\u002Fhyperkit","https:\u002F\u002Fgithub.com\u002Fdocker\u002Ffor-mac\u002Fissues\u002F900","create-an-arch-linux-virtual-machine-with-vagrant","Create an Arch Linux Virtual Machine with Vagrant","https:\u002F\u002Fapp.vagrantup.com\u002Farchlinux\u002Fboxes\u002Farchlinux","vagrant box add archlinux\u002Farchlinux\n","VBoxManage"," VBoxManage list usbhost\n","https:\u002F\u002Fantonyjepson.wordpress.com\u002F2012\u002F01\u002F26\u002Fquickly-attaching-usb-devices-to-virtualbox-guests-using-vboxmanage\u002F","https:\u002F\u002Fgist.github.com\u002Fdscape\u002F7d829c0c116ef419f963","vb.customize","# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"archlinux\u002Farchlinux\"\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.name = \"archlinux\"\n    vb.customize ['modifyvm', :id, '--usb', 'on']\n    vb.customize ['usbfilter', 'add', '1', '--target', :id, '--name', 'SanDisk Ultra Fit', '--vendorid', '0x0781', '--productid', '0x5583']\n  end\nend\n","$ vagrant up\n$ vagrant ssh\n[vagrant@archlinux ~]$ lsblk\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda      8:0    0   20G  0 disk\nâ”œâ”€sda1   8:1    0  1.9G  0 part [SWAP]\nâ””â”€sda2   8:2    0 18.1G  0 part \u002F\nsdb      8:16   1 28.7G  0 disk\nâ””â”€sdb1   8:17   1    8G  0 part\n","install-arch-linux-on-the-usb-drive","Install Arch Linux on the USB Drive","https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FInstallation_guide","partition-the-disk-uefi-with-gpt","Partition the Disk (UEFI with GPT)","[root@archlinux ~]# fdisk \u002Fdev\u002Fsdb\n","Command (m for help): p\nDisk \u002Fdev\u002Fsdb: 28.66 GiB, 30752636928 bytes, 60063744 sectors\nDisk model: Ultra Fit\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical\u002Fphysical): 512 bytes \u002F 512 bytes\nI\u002FO size (minimum\u002Foptimal): 512 bytes \u002F 512 bytes\nDisklabel type: gpt\nDisk identifier: E1D6C445-1B79-AB4D-A442-FA4AD6DF4ECC\n\nDevice       Start      End  Sectors  Size Type\n\u002Fdev\u002Fsdb1     2048  1050623  1048576  512M EFI System\n\u002Fdev\u002Fsdb2  1050624 60063710 59013087 28.1G Linux filesystem\n\nFilesystem\u002FRAID signature on partition 1 will be wiped.\n","format-the-partitions","Format the Partitions","https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FEFI_system_partition#Format_the_partition","[root@archlinux ~]# pacman -Sy dosfstools\n[root@archlinux ~]# mkfs.fat -F32 \u002Fdev\u002Fsdb1\n","https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FInstall_Arch_Linux_on_a_USB_key#Installation_tweaks","[root@archlinux ~]# mkfs.ext4 -O \"^has_journal\" \u002Fdev\u002Fsdb2\n","mount-the-partitions-and-bootstrap-the-environment","Mount the Partitions and Bootstrap the Environment","[root@archlinux ~]# mount \u002Fdev\u002Fsdb2 \u002Fmnt\n[root@archlinux ~]# mkdir -p \u002Fmnt\u002Fboot\u002Fefi\n[root@archlinux ~]# mount \u002Fdev\u002Fsdb1 \u002Fmnt\u002Fboot\u002Fefi\n","[root@archlinux ~]# pacman -S arch-install-scripts\n[root@archlinux ~]# pacstrap \u002Fmnt base linux linux-firmware\n[root@archlinux ~]# genfstab -U \u002Fmnt \u003E\u003E \u002Fmnt\u002Fetc\u002Ffstab\n","configure-the-new-environment","Configure the New Environment","[root@archlinux ~]# arch-chroot \u002Fmnt\n","[root@archlinux \u002F]# ln -sf \u002Fusr\u002Fshare\u002Fzoneinfo\u002FUS\u002FEastern \u002Fetc\u002Flocaltime\n[root@archlinux \u002F]# hwclock --systohc\n[root@archlinux \u002F]# sed -i 's\u002F#en_US.UTF-8\u002Fen_US.UTF-8\u002F' \u002Fetc\u002Flocale.gen\n[root@archlinux \u002F]# locale-gen\n[root@archlinux \u002F]# echo \"LANG=en_US.UTF-8\" \u003E \u002Fetc\u002Flocale.conf\n","[root@archlinux \u002F]# hostnamectl set-hostname usb\n[root@archlinux \u002F]# echo \"127.0.0.1        localhost\" \u003E\u003E \u002Fetc\u002Fhosts\n[root@archlinux \u002F]# echo \"::1              localhost\" \u003E\u003E \u002Fetc\u002Fhosts\n","https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FGRUB#UEFI_systems","[root@archlinux \u002F]# pacman -S grub\n[root@archlinux \u002F]# grub-install --target=x86_64-efi --efi-directory=\u002Fboot\u002Fefi  --removable --recheck\n[root@usb \u002F]# grub-mkconfig -o \u002Fboot\u002Fgrub\u002Fgrub.cfg\n","side-note","Side-note","https:\u002F\u002Fwww.vagrantup.com\u002Fdocs\u002Fvirtualbox\u002Fconfiguration.html#vboxmanage-customizations","Command: [\"controlvm\", \"060a716b-1965-49e2-bc56-12beed5df716\", \"usbattach36fc9e60-c465-11cf-8056-444553540000\"]\n\nStderr: VBoxManage.exe: error: Machine '060a716b-1965-49e2-bc56-12beed5df716' is not currently running.\n","references","References"))