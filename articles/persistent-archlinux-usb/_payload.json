[{"data":1,"prerenderedAt":851},["ShallowReactive",2],{"/articles/persistent-archlinux-usb":3},{"id":4,"title":5,"body":6,"categories":833,"date":835,"description":836,"extension":837,"img":838,"meta":839,"navigation":173,"path":845,"seo":846,"stem":847,"tags":848,"__hash__":850},"content/articles/persistent-archlinux-usb.md","Create a Persistent Arch Linux Bootable USB with Vagrant",{"type":7,"value":8,"toc":822},"minimal",[9,13,18,48,52,57,68,96,103,119,150,223,230,241,400,404,413,418,433,509,513,523,546,560,580,584,616,654,658,666,672,678,692,698,701,704,708,725,744,748,818],[10,11,12],"p",{},"When installing a linux distribution, it is common for the instructions to have\nthe user create a bootable USB, boot from the device, and proceed with the\ninstallation procedure from that live medium. However, this blog post will\noutline an alternative approach where a virtual machine created with Vagrant\nwill be used in favor of the live medium.",[14,15,17],"h1",{"id":16},"preface","Preface",[10,19,20,21,25,26,47],{},"The original intention was to use Docker for this process -- leveraging the\n",[22,23,24],"code",{},"--device"," flag and mounting the target USB device in the Docker container,\nbut the underlying hypervisor in Docker Desktop for Mac does not support this.\n",[27,28,29,36,37,36,42],"sup",{},[30,31,35],"a",{"href":32,"rel":33},"https://docs.docker.com/docker-for-mac/docker-toolbox/",[34],"nofollow","1"," ",[30,38,41],{"href":39,"rel":40},"https://github.com/moby/hyperkit",[34],"2",[30,43,46],{"href":44,"rel":45},"https://github.com/docker/for-mac/issues/900",[34],"3"," While there are workarounds using Docker\nMachine, Vagrant felt like the path of least resistance.",[14,49,51],{"id":50},"instructions","Instructions",[53,54,56],"h2",{"id":55},"create-an-arch-linux-virtual-machine-with-vagrant","Create an Arch Linux Virtual Machine with Vagrant",[10,58,59,60,67],{},"Get the latest Arch Linux image ",[27,61,62],{},[30,63,66],{"href":64,"rel":65},"https://app.vagrantup.com/archlinux/boxes/archlinux",[34],"4"," from the Vagrant Cloud Box\nCatalog.",[69,70,75],"pre",{"className":71,"code":72,"language":73,"meta":74,"style":74},"language-bash shiki shiki-themes github-dark","vagrant box add archlinux/archlinux\n","bash","",[22,76,77],{"__ignoreMap":74},[78,79,82,86,90,93],"span",{"class":80,"line":81},"line",1,[78,83,85],{"class":84},"svObZ","vagrant",[78,87,89],{"class":88},"sU2Wk"," box",[78,91,92],{"class":88}," add",[78,94,95],{"class":88}," archlinux/archlinux\n",[10,97,98,99,102],{},"Determine the USB vendor information for the thumb-drive that we will\npass-through to the virtual machine. Using the ",[22,100,101],{},"VBoxManage"," utility that comes\nwith Virtual Box, list the devices, and make note of the Vendor and Product ID.",[69,104,106],{"className":71,"code":105,"language":73,"meta":74,"style":74}," VBoxManage list usbhost\n",[22,107,108],{"__ignoreMap":74},[78,109,110,113,116],{"class":80,"line":81},[78,111,112],{"class":84}," VBoxManage",[78,114,115],{"class":88}," list",[78,117,118],{"class":88}," usbhost\n",[10,120,121,122,125,126,129,130,142,143,146,147,149],{},"Create a ",[22,123,124],{},"Vagrantfile"," with ",[22,127,128],{},"archlinx/archlinux"," as the target box, and the USB\ndevice information that is passed through. ",[27,131,132,36,137],{},[30,133,136],{"href":134,"rel":135},"https://antonyjepson.wordpress.com/2012/01/26/quickly-attaching-usb-devices-to-virtualbox-guests-using-vboxmanage/",[34],"5",[30,138,141],{"href":139,"rel":140},"https://gist.github.com/dscape/7d829c0c116ef419f963",[34],"6"," Vagrant\noffers a handy customization parameter ",[22,144,145],{},"vb.customize"," that calls the\n",[22,148,101],{}," command under-the-hood, allowing one to enable the guest machine\nto access the host machine's USB devices.",[69,151,155],{"className":152,"code":153,"language":154,"meta":74,"style":74},"language-txt shiki shiki-themes github-dark","# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"archlinux/archlinux\"\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.name = \"archlinux\"\n    vb.customize ['modifyvm', :id, '--usb', 'on']\n    vb.customize ['usbfilter', 'add', '1', '--target', :id, '--name', 'SanDisk Ultra Fit', '--vendorid', '0x0781', '--productid', '0x5583']\n  end\nend\n","txt",[22,156,157,162,168,175,181,187,193,199,205,211,217],{"__ignoreMap":74},[78,158,159],{"class":80,"line":81},[78,160,161],{},"# -*- mode: ruby -*-\n",[78,163,165],{"class":80,"line":164},2,[78,166,167],{},"# vi: set ft=ruby :\n",[78,169,171],{"class":80,"line":170},3,[78,172,174],{"emptyLinePlaceholder":173},true,"\n",[78,176,178],{"class":80,"line":177},4,[78,179,180],{},"Vagrant.configure(\"2\") do |config|\n",[78,182,184],{"class":80,"line":183},5,[78,185,186],{},"  config.vm.box = \"archlinux/archlinux\"\n",[78,188,190],{"class":80,"line":189},6,[78,191,192],{},"  config.vm.provider \"virtualbox\" do |vb|\n",[78,194,196],{"class":80,"line":195},7,[78,197,198],{},"    vb.name = \"archlinux\"\n",[78,200,202],{"class":80,"line":201},8,[78,203,204],{},"    vb.customize ['modifyvm', :id, '--usb', 'on']\n",[78,206,208],{"class":80,"line":207},9,[78,209,210],{},"    vb.customize ['usbfilter', 'add', '1', '--target', :id, '--name', 'SanDisk Ultra Fit', '--vendorid', '0x0781', '--productid', '0x5583']\n",[78,212,214],{"class":80,"line":213},10,[78,215,216],{},"  end\n",[78,218,220],{"class":80,"line":219},11,[78,221,222],{},"end\n",[10,224,225,226,229],{},"When virtual machine is brought up, the ",[22,227,228],{},"usbfilter"," is applied, and the guest\nis able to access to the host machine's USB device that was specified in the\nfilter.",[10,231,232,233,236,237,240],{},"Start the machine, ",[22,234,235],{},"ssh"," into the guest, and list the devices to confirm that\nthe USB device is available (see: ",[22,238,239],{},"/dev/sdb",").",[69,242,244],{"className":71,"code":243,"language":73,"meta":74,"style":74},"$ vagrant up\n$ vagrant ssh\n[vagrant@archlinux ~]$ lsblk\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda      8:0    0   20G  0 disk\n├─sda1   8:1    0  1.9G  0 part [SWAP]\n└─sda2   8:2    0 18.1G  0 part /\nsdb      8:16   1 28.7G  0 disk\n└─sdb1   8:17   1    8G  0 part\n",[22,245,246,257,266,279,302,323,344,364,382],{"__ignoreMap":74},[78,247,248,251,254],{"class":80,"line":81},[78,249,250],{"class":84},"$",[78,252,253],{"class":88}," vagrant",[78,255,256],{"class":88}," up\n",[78,258,259,261,263],{"class":80,"line":164},[78,260,250],{"class":84},[78,262,253],{"class":88},[78,264,265],{"class":88}," ssh\n",[78,267,268,272,276],{"class":80,"line":170},[78,269,271],{"class":270},"s95oV","[vagrant@archlinux ",[78,273,275],{"class":274},"snl16","~",[78,277,278],{"class":270},"]$ lsblk\n",[78,280,281,284,287,290,293,296,299],{"class":80,"line":177},[78,282,283],{"class":84},"NAME",[78,285,286],{"class":88},"   MAJ:MIN",[78,288,289],{"class":88}," RM",[78,291,292],{"class":88},"  SIZE",[78,294,295],{"class":88}," RO",[78,297,298],{"class":88}," TYPE",[78,300,301],{"class":88}," MOUNTPOINT\n",[78,303,304,307,310,314,317,320],{"class":80,"line":183},[78,305,306],{"class":84},"sda",[78,308,309],{"class":88},"      8:0",[78,311,313],{"class":312},"sDLfK","    0",[78,315,316],{"class":88},"   20G",[78,318,319],{"class":312},"  0",[78,321,322],{"class":88}," disk\n",[78,324,325,328,331,333,336,338,341],{"class":80,"line":189},[78,326,327],{"class":84},"├─sda1",[78,329,330],{"class":88},"   8:1",[78,332,313],{"class":312},[78,334,335],{"class":88},"  1.9G",[78,337,319],{"class":312},[78,339,340],{"class":88}," part",[78,342,343],{"class":270}," [SWAP]\n",[78,345,346,349,352,354,357,359,361],{"class":80,"line":195},[78,347,348],{"class":84},"└─sda2",[78,350,351],{"class":88},"   8:2",[78,353,313],{"class":312},[78,355,356],{"class":88}," 18.1G",[78,358,319],{"class":312},[78,360,340],{"class":88},[78,362,363],{"class":88}," /\n",[78,365,366,369,372,375,378,380],{"class":80,"line":201},[78,367,368],{"class":84},"sdb",[78,370,371],{"class":88},"      8:16",[78,373,374],{"class":312},"   1",[78,376,377],{"class":88}," 28.7G",[78,379,319],{"class":312},[78,381,322],{"class":88},[78,383,384,387,390,392,395,397],{"class":80,"line":207},[78,385,386],{"class":84},"└─sdb1",[78,388,389],{"class":88},"   8:17",[78,391,374],{"class":312},[78,393,394],{"class":88},"    8G",[78,396,319],{"class":312},[78,398,399],{"class":88}," part\n",[53,401,403],{"id":402},"install-arch-linux-on-the-usb-drive","Install Arch Linux on the USB Drive",[10,405,406,407,412],{},"The ",[30,408,411],{"href":409,"rel":410},"https://wiki.archlinux.org/index.php/Installation_guide",[34],"Arch Linux Installation Guide"," outlines the installation procedure in\ngreat detail -- the following steps follow this closely with a few alteration\ndue to installing onto removable media.",[414,415,417],"h3",{"id":416},"partition-the-disk-uefi-with-gpt","Partition the Disk (UEFI with GPT)",[69,419,421],{"className":71,"code":420,"language":73,"meta":74,"style":74},"[root@archlinux ~]# fdisk /dev/sdb\n",[22,422,423],{"__ignoreMap":74},[78,424,425,428,430],{"class":80,"line":81},[78,426,427],{"class":270},"[root@archlinux ",[78,429,275],{"class":274},[78,431,432],{"class":270},"]# fdisk /dev/sdb\n",[69,434,436],{"className":152,"code":435,"language":154,"meta":74,"style":74},"Command (m for help): p\nDisk /dev/sdb: 28.66 GiB, 30752636928 bytes, 60063744 sectors\nDisk model: Ultra Fit\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: gpt\nDisk identifier: E1D6C445-1B79-AB4D-A442-FA4AD6DF4ECC\n\nDevice       Start      End  Sectors  Size Type\n/dev/sdb1     2048  1050623  1048576  512M EFI System\n/dev/sdb2  1050624 60063710 59013087 28.1G Linux filesystem\n\nFilesystem/RAID signature on partition 1 will be wiped.\n",[22,437,438,443,448,453,458,463,468,473,478,482,487,492,498,503],{"__ignoreMap":74},[78,439,440],{"class":80,"line":81},[78,441,442],{},"Command (m for help): p\n",[78,444,445],{"class":80,"line":164},[78,446,447],{},"Disk /dev/sdb: 28.66 GiB, 30752636928 bytes, 60063744 sectors\n",[78,449,450],{"class":80,"line":170},[78,451,452],{},"Disk model: Ultra Fit\n",[78,454,455],{"class":80,"line":177},[78,456,457],{},"Units: sectors of 1 * 512 = 512 bytes\n",[78,459,460],{"class":80,"line":183},[78,461,462],{},"Sector size (logical/physical): 512 bytes / 512 bytes\n",[78,464,465],{"class":80,"line":189},[78,466,467],{},"I/O size (minimum/optimal): 512 bytes / 512 bytes\n",[78,469,470],{"class":80,"line":195},[78,471,472],{},"Disklabel type: gpt\n",[78,474,475],{"class":80,"line":201},[78,476,477],{},"Disk identifier: E1D6C445-1B79-AB4D-A442-FA4AD6DF4ECC\n",[78,479,480],{"class":80,"line":207},[78,481,174],{"emptyLinePlaceholder":173},[78,483,484],{"class":80,"line":213},[78,485,486],{},"Device       Start      End  Sectors  Size Type\n",[78,488,489],{"class":80,"line":219},[78,490,491],{},"/dev/sdb1     2048  1050623  1048576  512M EFI System\n",[78,493,495],{"class":80,"line":494},12,[78,496,497],{},"/dev/sdb2  1050624 60063710 59013087 28.1G Linux filesystem\n",[78,499,501],{"class":80,"line":500},13,[78,502,174],{"emptyLinePlaceholder":173},[78,504,506],{"class":80,"line":505},14,[78,507,508],{},"Filesystem/RAID signature on partition 1 will be wiped.\n",[414,510,512],{"id":511},"format-the-partitions","Format the Partitions",[10,514,515,516],{},"The UEFI specification mandates support for FAT file-systems, and FAT32 is\nrecommended for removable media. ",[27,517,518],{},[30,519,522],{"href":520,"rel":521},"https://wiki.archlinux.org/index.php/EFI_system_partition#Format_the_partition",[34],"7",[69,524,526],{"className":71,"code":525,"language":73,"meta":74,"style":74},"[root@archlinux ~]# pacman -Sy dosfstools\n[root@archlinux ~]# mkfs.fat -F32 /dev/sdb1\n",[22,527,528,537],{"__ignoreMap":74},[78,529,530,532,534],{"class":80,"line":81},[78,531,427],{"class":270},[78,533,275],{"class":274},[78,535,536],{"class":270},"]# pacman -Sy dosfstools\n",[78,538,539,541,543],{"class":80,"line":164},[78,540,427],{"class":270},[78,542,275],{"class":274},[78,544,545],{"class":270},"]# mkfs.fat -F32 /dev/sdb1\n",[10,547,548,549,552,553],{},"As for the root partition, it is recommended to use ",[22,550,551],{},"ext4"," without a journal to\nreduce the reads and writes to the file-system as this is detrimental to the\nflash-based USB drive. ",[27,554,555],{},[30,556,559],{"href":557,"rel":558},"https://wiki.archlinux.org/index.php/Install_Arch_Linux_on_a_USB_key#Installation_tweaks",[34],"8",[69,561,563],{"className":71,"code":562,"language":73,"meta":74,"style":74},"[root@archlinux ~]# mkfs.ext4 -O \"^has_journal\" /dev/sdb2\n",[22,564,565],{"__ignoreMap":74},[78,566,567,569,571,574,577],{"class":80,"line":81},[78,568,427],{"class":270},[78,570,275],{"class":274},[78,572,573],{"class":270},"]# mkfs.ext4 -O ",[78,575,576],{"class":88},"\"^has_journal\"",[78,578,579],{"class":270}," /dev/sdb2\n",[414,581,583],{"id":582},"mount-the-partitions-and-bootstrap-the-environment","Mount the Partitions and Bootstrap the Environment",[69,585,587],{"className":71,"code":586,"language":73,"meta":74,"style":74},"[root@archlinux ~]# mount /dev/sdb2 /mnt\n[root@archlinux ~]# mkdir -p /mnt/boot/efi\n[root@archlinux ~]# mount /dev/sdb1 /mnt/boot/efi\n",[22,588,589,598,607],{"__ignoreMap":74},[78,590,591,593,595],{"class":80,"line":81},[78,592,427],{"class":270},[78,594,275],{"class":274},[78,596,597],{"class":270},"]# mount /dev/sdb2 /mnt\n",[78,599,600,602,604],{"class":80,"line":164},[78,601,427],{"class":270},[78,603,275],{"class":274},[78,605,606],{"class":270},"]# mkdir -p /mnt/boot/efi\n",[78,608,609,611,613],{"class":80,"line":170},[78,610,427],{"class":270},[78,612,275],{"class":274},[78,614,615],{"class":270},"]# mount /dev/sdb1 /mnt/boot/efi\n",[69,617,619],{"className":71,"code":618,"language":73,"meta":74,"style":74},"[root@archlinux ~]# pacman -S arch-install-scripts\n[root@archlinux ~]# pacstrap /mnt base linux linux-firmware\n[root@archlinux ~]# genfstab -U /mnt >> /mnt/etc/fstab\n",[22,620,621,630,639],{"__ignoreMap":74},[78,622,623,625,627],{"class":80,"line":81},[78,624,427],{"class":270},[78,626,275],{"class":274},[78,628,629],{"class":270},"]# pacman -S arch-install-scripts\n",[78,631,632,634,636],{"class":80,"line":164},[78,633,427],{"class":270},[78,635,275],{"class":274},[78,637,638],{"class":270},"]# pacstrap /mnt base linux linux-firmware\n",[78,640,641,643,645,648,651],{"class":80,"line":170},[78,642,427],{"class":270},[78,644,275],{"class":274},[78,646,647],{"class":270},"]# genfstab -U /mnt ",[78,649,650],{"class":274},">>",[78,652,653],{"class":270}," /mnt/etc/fstab\n",[414,655,657],{"id":656},"configure-the-new-environment","Configure the New Environment",[69,659,664],{"className":660,"code":662,"language":663},[661],"language-text","[root@archlinux ~]# arch-chroot /mnt\n","text",[22,665,662],{"__ignoreMap":74},[69,667,670],{"className":668,"code":669,"language":663},[661],"[root@archlinux /]# ln -sf /usr/share/zoneinfo/US/Eastern /etc/localtime\n[root@archlinux /]# hwclock --systohc\n[root@archlinux /]# sed -i 's/#en_US.UTF-8/en_US.UTF-8/' /etc/locale.gen\n[root@archlinux /]# locale-gen\n[root@archlinux /]# echo \"LANG=en_US.UTF-8\" > /etc/locale.conf\n",[22,671,669],{"__ignoreMap":74},[69,673,676],{"className":674,"code":675,"language":663},[661],"[root@archlinux /]# hostnamectl set-hostname usb\n[root@archlinux /]# echo \"127.0.0.1        localhost\" >> /etc/hosts\n[root@archlinux /]# echo \"::1              localhost\" >> /etc/hosts\n",[22,677,675],{"__ignoreMap":74},[10,679,680,681,684,685],{},"Note, one difference here from a standard installation is that the\n",[22,682,683],{},"--removable"," flag is specified when installing the GRUB bootloader.\n",[27,686,687],{},[30,688,691],{"href":689,"rel":690},"https://wiki.archlinux.org/index.php/GRUB#UEFI_systems",[34],"10",[69,693,696],{"className":694,"code":695,"language":663},[661],"[root@archlinux /]# pacman -S grub\n[root@archlinux /]# grub-install --target=x86_64-efi --efi-directory=/boot/efi  --removable --recheck\n[root@usb /]# grub-mkconfig -o /boot/grub/grub.cfg\n",[22,697,695],{"__ignoreMap":74},[10,699,700],{},"Shutdown the virtual machine, restart the host machine, and boot the newly\ncreated Arch Linux thumb-drive!",[10,702,703],{},"🎉",[53,705,707],{"id":706},"side-note","Side-note",[10,709,710,711,714,715,717,718],{},"It was attempted to use the ",[22,712,713],{},"controlvm usbattach"," command to pass the USB\ndevice to the guest machine, but this did not work as it expects the virtual\nmachine to already be running, and the ",[22,716,145],{}," option runs prior to\nbooting the machine. ",[27,719,720],{},[30,721,724],{"href":722,"rel":723},"https://www.vagrantup.com/docs/virtualbox/configuration.html#vboxmanage-customizations",[34],"11",[69,726,728],{"className":152,"code":727,"language":154,"meta":74,"style":74},"Command: [\"controlvm\", \"060a716b-1965-49e2-bc56-12beed5df716\", \"usbattach36fc9e60-c465-11cf-8056-444553540000\"]\n\nStderr: VBoxManage.exe: error: Machine '060a716b-1965-49e2-bc56-12beed5df716' is not currently running.\n",[22,729,730,735,739],{"__ignoreMap":74},[78,731,732],{"class":80,"line":81},[78,733,734],{},"Command: [\"controlvm\", \"060a716b-1965-49e2-bc56-12beed5df716\", \"usbattach36fc9e60-c465-11cf-8056-444553540000\"]\n",[78,736,737],{"class":80,"line":164},[78,738,174],{"emptyLinePlaceholder":173},[78,740,741],{"class":80,"line":170},[78,742,743],{},"Stderr: VBoxManage.exe: error: Machine '060a716b-1965-49e2-bc56-12beed5df716' is not currently running.\n",[53,745,747],{"id":746},"references","References",[749,750,751,758,764,770,776,782,788,794,800,806,812],"ol",{},[752,753,754],"li",{},[30,755,757],{"href":32,"rel":756},[34],"Docker Desktop on Mac vs. Docker Toolbox",[752,759,760],{},[30,761,763],{"href":39,"rel":762},[34],"GitHub - HyperKit",[752,765,766],{},[30,767,769],{"href":44,"rel":768},[34],"GitHub - Docker for Mac - Issue #900",[752,771,772],{},[30,773,775],{"href":64,"rel":774},[34],"Vagrant Cloud - Arch Linux",[752,777,778],{},[30,779,781],{"href":134,"rel":780},[34],"Attaching USB Devices to VirtualBox Guests using VBoxManage",[752,783,784],{},[30,785,787],{"href":139,"rel":786},[34],"GitHub Gist - Vagrant USB Filter",[752,789,790],{},[30,791,793],{"href":520,"rel":792},[34],"Arch Linux Wiki - EFI System Partition - Format Partitions",[752,795,796],{},[30,797,799],{"href":557,"rel":798},[34],"Arch Linux Wiki - Arch Linux on USB - Installation Tweaks",[752,801,802],{},[30,803,805],{"href":409,"rel":804},[34],"Arch Linux Wiki - Installation Guide",[752,807,808],{},[30,809,811],{"href":689,"rel":810},[34],"Arch Linux Wiki - GRUB - UEFI Systems",[752,813,814],{},[30,815,817],{"href":722,"rel":816},[34],"Vagrant VBoxManage Customizations ",[819,820,821],"style",{},"html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .snl16, html code.shiki .snl16{--shiki-default:#F97583}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}",{"title":74,"searchDepth":164,"depth":164,"links":823},[824,825,831,832],{"id":55,"depth":164,"text":56},{"id":402,"depth":164,"text":403,"children":826},[827,828,829,830],{"id":416,"depth":170,"text":417},{"id":511,"depth":170,"text":512},{"id":582,"depth":170,"text":583},{"id":656,"depth":170,"text":657},{"id":706,"depth":164,"text":707},{"id":746,"depth":164,"text":747},[834],"linux","2020-01-09T00:00:00.000Z","When installing a linux distribution, it is common for the instructions to have\\nthe user create a bootable USB, boot from the device, and proceed with the\\ninstallation procedure from that live medium. However, this blog post will\\noutline an alternative approach where a virtual machine created with Vagrant\\nwill be used in favor of the live medium.","md",null,{"draft":840,"excerpt":841},false,{"type":7,"value":842},[843],[10,844,12],{},"/articles/persistent-archlinux-usb",{"title":5,"description":12},"articles/persistent-archlinux-usb",[85,849],"archlinux","IgTvkgdpJ1VhIFuRY1CHOtB3hrj_x0uBoCNE32T3R6c",1761275440678]