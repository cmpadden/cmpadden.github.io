[{"data":1,"prerenderedAt":5960},["ShallowReactive",2],{"articles":3},[4,90,886,1190,1368,1794,2777,3408,3812,3891,4006,4121,4479,4861,5650,5781],{"id":5,"title":6,"body":7,"categories":72,"date":74,"description":13,"extension":75,"img":76,"meta":77,"navigation":78,"path":83,"seo":84,"stem":85,"tags":86,"__hash__":89},"content/articles/ai-the-context-engineer.md","An evolution of data engineering",{"type":8,"value":9,"toc":65},"minimal",[10,14,19,22,25,29,32,45,48,52,59,62],[11,12,13],"p",{},"With the advancements of LLM-based tooling, the responsibilities (and maybe even the title!) of data engineers are changing.",[15,16,18],"h2",{"id":17},"origin","Origin",[11,20,21],{},"Before we talk about the changes, let's reflect on the inception of data engineering.",[11,23,24],{},"The practice of data engineering, and the need for dedicated roles, was born out of complexity and the need for someone to manage it.\nWith an explosion in data volumes and an increase in tools to manage it, a domain-specific engineer was born with a specialized set of skills.\nSome of these engineers came from the world of database administration, others from software engineering, and some from analytics.\nAs the domain that they worked in evolved, so did their responsibilities and skill sets.",[15,26,28],{"id":27},"questions","Questions",[11,30,31],{},"While the tools and challenges that these engineers solved changed, the underlying need for their work remained the same: to support the answering of questions.",[33,34,35,39,42],"ul",{},[36,37,38],"li",{},"\"Why do I have no customers?\"",[36,40,41],{},"\"What is the significance of these protein structures?\"",[36,43,44],{},"\"What is the airspeed velocity of an unladen swallow?\"",[11,46,47],{},"The wrangling of data, storage, processing, and everything in between was done out of necessity so that you, or some stakeholder, could make sense of it.",[15,49,51],{"id":50},"context","Context",[11,53,54,55,58],{},"We're reaching another inflection point where the underlying tools are evolving.\nThis time, we're seeing an emergence of systems that can make sense of large volumes of data. However the new \"complexity\" is that these systems rely on carefully managed metadata, or ",[56,57,50],"em",{},".\nThis context can store how data is loaded, transformed, and queried.\nYou no longer have to write the tool-specific code to interface with various APIs, nor the queries to make sense of it.\nYou just have to ensure that the information is present and curated.",[11,60,61],{},"The new responsibility of this kind of engineer is to manage that context.",[11,63,64],{},"Some folks are speculating that we will see the rise of the \"context engineer\", but while it's uncertain what the title will be, it's clear that we are seeing a change in how data engineers operate, and an evolution in the responsibilities that they hold to support the answering of questions.",{"title":66,"searchDepth":67,"depth":67,"links":68},"",2,[69,70,71],{"id":17,"depth":67,"text":18},{"id":27,"depth":67,"text":28},{"id":50,"depth":67,"text":51},[73],"programming","2025-07-18T00:00:00.000Z","md",null,{"draft":78,"excerpt":79},true,{"type":8,"value":80},[81],[11,82,13],{},"/articles/ai-the-context-engineer",{"title":6,"description":13},"articles/ai-the-context-engineer",[87,88],"ai","data","FtxdoM_VJ1ZZDqqqO9bWmBOMCWIm-bwPHwpBTZ4TBpY",{"id":91,"title":92,"body":93,"categories":862,"date":864,"description":865,"extension":75,"img":76,"meta":866,"navigation":78,"path":878,"seo":879,"stem":880,"tags":881,"__hash__":885},"content/articles/nuxt-p5js-3d-models.md","Render three-dimensional models in NuxtContent with p5js",{"type":8,"value":94,"toc":860},[95,115,128,228,235,240,251,259,276,282,853,856],[11,96,97,98,102,103,106,107,114],{},"Three-dimensional models, whether they be of the format ",[99,100,101],"code",{},".obj"," or ",[99,104,105],{},".stl",", can be easily rendered in your Nuxt project by using the ",[108,109,113],"a",{"href":110,"rel":111},"https://p5js.org/",[112],"nofollow","p5js.org"," library.",[11,116,117,118,121,122,127],{},"I've been using p5 for a while now to tinker and explore generative art, some of which can be found in the ",[108,119,120],{"href":120},"/playground"," section of this website. To use it with Nuxt, a ",[108,123,126],{"href":124,"rel":125},"https://github.com/cmpadden/cmpadden.github.io/blob/70ba674acdbe80c4a41b510a9b54edcddb19f489/plugins/p5.client.js",[112],"client-side plugin"," was created like so:",[129,130,134],"pre",{"className":131,"code":132,"language":133,"meta":66,"style":66},"language-js shiki shiki-themes github-dark","// plugins/p5.client.js\nimport p5 from 'p5'\n\nexport default defineNuxtPlugin(() => {\n  return {\n    provide: {\n      p5, p5\n    }\n  }\n})\n","js",[99,135,136,145,162,168,190,198,204,210,216,222],{"__ignoreMap":66},[137,138,141],"span",{"class":139,"line":140},"line",1,[137,142,144],{"class":143},"sAwPA","// plugins/p5.client.js\n",[137,146,147,151,155,158],{"class":139,"line":67},[137,148,150],{"class":149},"snl16","import",[137,152,154],{"class":153},"s95oV"," p5 ",[137,156,157],{"class":149},"from",[137,159,161],{"class":160},"sU2Wk"," 'p5'\n",[137,163,165],{"class":139,"line":164},3,[137,166,167],{"emptyLinePlaceholder":78},"\n",[137,169,171,174,177,181,184,187],{"class":139,"line":170},4,[137,172,173],{"class":149},"export",[137,175,176],{"class":149}," default",[137,178,180],{"class":179},"svObZ"," defineNuxtPlugin",[137,182,183],{"class":153},"(() ",[137,185,186],{"class":149},"=>",[137,188,189],{"class":153}," {\n",[137,191,193,196],{"class":139,"line":192},5,[137,194,195],{"class":149},"  return",[137,197,189],{"class":153},[137,199,201],{"class":139,"line":200},6,[137,202,203],{"class":153},"    provide: {\n",[137,205,207],{"class":139,"line":206},7,[137,208,209],{"class":153},"      p5, p5\n",[137,211,213],{"class":139,"line":212},8,[137,214,215],{"class":153},"    }\n",[137,217,219],{"class":139,"line":218},9,[137,220,221],{"class":153},"  }\n",[137,223,225],{"class":139,"line":224},10,[137,226,227],{"class":153},"})\n",[11,229,230,231,234],{},"As I've been exploring 3d-printing lately, I wanted a way to showcase some of the models I've created directly on this website. So, the ",[99,232,233],{},"ModelPreview"," component was created, which you can see in use below.",[236,237],"model-preview",{":background-color":238,"path":239},"50","/models/eevee.stl",[11,241,242,243,246,247,250],{},"The Vue component was embedded in our markdown using the following syntax is used. The ",[99,244,245],{},"path"," prop with the location of the file we want to render; in this case, that file is served on the website as well in the ",[99,248,249],{},"public/models"," folder.",[129,252,257],{"className":253,"code":255,"language":256},[254],"language-text",":ModelPreview{path=\"/models/eevee.stl\"}\n","text",[99,258,255],{"__ignoreMap":66},[11,260,261,262,265,266,269,270,275],{},"The component was registered globally by using the ",[99,263,264],{},"ModelPreview.global.vue"," filename so that it was accessible in our markdown. Alternatively, this could have been accomplished by placing the component in the ",[99,267,268],{},"components/content"," folder. However, I wanted to use this component in both markdown and Vue files. See the ",[108,271,274],{"href":272,"rel":273},"https://content.nuxt.com/usage/markdown#vue-components",[112],"NuxtContent"," documentation for more details.",[11,277,278,279,281],{},"The full source code for the ",[99,280,233],{}," component at the time of this writing can be found below. Not too bad!",[129,283,285],{"className":131,"code":284,"language":133,"meta":66,"style":66},"\u003Ctemplate>\n    \u003Cdiv id=\"canvas\" class=\"h-64\" />\n\u003C/template>\n\n\u003Cscript setup lang=\"ts\">\nconst { $p5 } = useNuxtApp();\n\nconst { path, backgroundColor = 100 } = defineProps \u003C { path: string, backgroundColor?: Number } > ()\n\nonMounted(() => {\nconsole.log(backgroundColor);\n    const sketch = (s) => {\n        const c = document.getElementById(\"canvas\");\n\n        const WIDTH = c.clientWidth;\n        const HEIGHT = c.clientHeight;\n\n        let model;\n        let angle;\n        let rotate = true;\n\n        s.preload = () => {\n            model = s.loadModel(path, true);\n        };\n\n        s.setup = () => {\n            s.createCanvas(WIDTH, HEIGHT, s.WEBGL);\n        };\n\n        s.mouseClicked = () => {\n            rotate = false; // disable object rotation on click\n        };\n\n        s.draw = () => {\n            s.background(backgroundColor);\n            s.lights();\n\n            if (rotate) {\n                angle = s.frameCount * 0.005;\n            }\n            s.rotateX(angle);\n            s.rotateY(angle);\n            s.orbitControl();\n\n            s.model(model);\n        };\n    };\n\n    new $p5(sketch, \"canvas\");\n});\n\u003C/script>\n",[99,286,287,299,327,336,340,360,365,369,389,393,398,410,436,461,466,479,492,497,506,514,530,535,553,575,581,586,602,630,635,640,656,673,678,683,699,709,720,725,734,753,759,770,780,790,795,806,811,817,822,838,844],{"__ignoreMap":66},[137,288,289,292,296],{"class":139,"line":140},[137,290,291],{"class":153},"\u003C",[137,293,295],{"class":294},"s4JwU","template",[137,297,298],{"class":153},">\n",[137,300,301,304,307,310,313,316,319,321,324],{"class":139,"line":67},[137,302,303],{"class":153},"    \u003C",[137,305,306],{"class":294},"div",[137,308,309],{"class":179}," id",[137,311,312],{"class":149},"=",[137,314,315],{"class":160},"\"canvas\"",[137,317,318],{"class":179}," class",[137,320,312],{"class":149},[137,322,323],{"class":160},"\"h-64\"",[137,325,326],{"class":153}," />\n",[137,328,329,332,334],{"class":139,"line":164},[137,330,331],{"class":153},"\u003C/",[137,333,295],{"class":294},[137,335,298],{"class":153},[137,337,338],{"class":139,"line":170},[137,339,167],{"emptyLinePlaceholder":78},[137,341,342,344,347,350,353,355,358],{"class":139,"line":192},[137,343,291],{"class":153},[137,345,346],{"class":294},"script",[137,348,349],{"class":179}," setup",[137,351,352],{"class":179}," lang",[137,354,312],{"class":149},[137,356,357],{"class":160},"\"ts\"",[137,359,298],{"class":153},[137,361,362],{"class":139,"line":200},[137,363,364],{"class":153},"const { $p5 } = useNuxtApp();\n",[137,366,367],{"class":139,"line":206},[137,368,167],{"emptyLinePlaceholder":78},[137,370,371,374,376,380,383,386],{"class":139,"line":212},[137,372,373],{"class":153},"const { path, backgroundColor ",[137,375,312],{"class":149},[137,377,379],{"class":378},"sDLfK"," 100",[137,381,382],{"class":153}," } = defineProps \u003C { path: string, backgroundColor",[137,384,385],{"class":149},"?:",[137,387,388],{"class":153}," Number } > ()\n",[137,390,391],{"class":139,"line":218},[137,392,167],{"emptyLinePlaceholder":78},[137,394,395],{"class":139,"line":224},[137,396,397],{"class":153},"onMounted(() => {\n",[137,399,401,404,407],{"class":139,"line":400},11,[137,402,403],{"class":153},"console.",[137,405,406],{"class":179},"log",[137,408,409],{"class":153},"(backgroundColor);\n",[137,411,413,416,419,422,425,429,432,434],{"class":139,"line":412},12,[137,414,415],{"class":153},"    const ",[137,417,418],{"class":179},"sketch",[137,420,421],{"class":149}," =",[137,423,424],{"class":153}," (",[137,426,428],{"class":427},"s9osk","s",[137,430,431],{"class":153},") ",[137,433,186],{"class":149},[137,435,189],{"class":153},[137,437,439,442,445,447,450,453,456,458],{"class":139,"line":438},13,[137,440,441],{"class":149},"        const",[137,443,444],{"class":378}," c",[137,446,421],{"class":149},[137,448,449],{"class":153}," document.",[137,451,452],{"class":179},"getElementById",[137,454,455],{"class":153},"(",[137,457,315],{"class":160},[137,459,460],{"class":153},");\n",[137,462,464],{"class":139,"line":463},14,[137,465,167],{"emptyLinePlaceholder":78},[137,467,469,471,474,476],{"class":139,"line":468},15,[137,470,441],{"class":149},[137,472,473],{"class":378}," WIDTH",[137,475,421],{"class":149},[137,477,478],{"class":153}," c.clientWidth;\n",[137,480,482,484,487,489],{"class":139,"line":481},16,[137,483,441],{"class":149},[137,485,486],{"class":378}," HEIGHT",[137,488,421],{"class":149},[137,490,491],{"class":153}," c.clientHeight;\n",[137,493,495],{"class":139,"line":494},17,[137,496,167],{"emptyLinePlaceholder":78},[137,498,500,503],{"class":139,"line":499},18,[137,501,502],{"class":149},"        let",[137,504,505],{"class":153}," model;\n",[137,507,509,511],{"class":139,"line":508},19,[137,510,502],{"class":149},[137,512,513],{"class":153}," angle;\n",[137,515,517,519,522,524,527],{"class":139,"line":516},20,[137,518,502],{"class":149},[137,520,521],{"class":153}," rotate ",[137,523,312],{"class":149},[137,525,526],{"class":378}," true",[137,528,529],{"class":153},";\n",[137,531,533],{"class":139,"line":532},21,[137,534,167],{"emptyLinePlaceholder":78},[137,536,538,541,544,546,549,551],{"class":139,"line":537},22,[137,539,540],{"class":153},"        s.",[137,542,543],{"class":179},"preload",[137,545,421],{"class":149},[137,547,548],{"class":153}," () ",[137,550,186],{"class":149},[137,552,189],{"class":153},[137,554,556,559,561,564,567,570,573],{"class":139,"line":555},23,[137,557,558],{"class":153},"            model ",[137,560,312],{"class":149},[137,562,563],{"class":153}," s.",[137,565,566],{"class":179},"loadModel",[137,568,569],{"class":153},"(path, ",[137,571,572],{"class":378},"true",[137,574,460],{"class":153},[137,576,578],{"class":139,"line":577},24,[137,579,580],{"class":153},"        };\n",[137,582,584],{"class":139,"line":583},25,[137,585,167],{"emptyLinePlaceholder":78},[137,587,589,591,594,596,598,600],{"class":139,"line":588},26,[137,590,540],{"class":153},[137,592,593],{"class":179},"setup",[137,595,421],{"class":149},[137,597,548],{"class":153},[137,599,186],{"class":149},[137,601,189],{"class":153},[137,603,605,608,611,613,616,619,622,625,628],{"class":139,"line":604},27,[137,606,607],{"class":153},"            s.",[137,609,610],{"class":179},"createCanvas",[137,612,455],{"class":153},[137,614,615],{"class":378},"WIDTH",[137,617,618],{"class":153},", ",[137,620,621],{"class":378},"HEIGHT",[137,623,624],{"class":153},", s.",[137,626,627],{"class":378},"WEBGL",[137,629,460],{"class":153},[137,631,633],{"class":139,"line":632},28,[137,634,580],{"class":153},[137,636,638],{"class":139,"line":637},29,[137,639,167],{"emptyLinePlaceholder":78},[137,641,643,645,648,650,652,654],{"class":139,"line":642},30,[137,644,540],{"class":153},[137,646,647],{"class":179},"mouseClicked",[137,649,421],{"class":149},[137,651,548],{"class":153},[137,653,186],{"class":149},[137,655,189],{"class":153},[137,657,659,662,664,667,670],{"class":139,"line":658},31,[137,660,661],{"class":153},"            rotate ",[137,663,312],{"class":149},[137,665,666],{"class":378}," false",[137,668,669],{"class":153},"; ",[137,671,672],{"class":143},"// disable object rotation on click\n",[137,674,676],{"class":139,"line":675},32,[137,677,580],{"class":153},[137,679,681],{"class":139,"line":680},33,[137,682,167],{"emptyLinePlaceholder":78},[137,684,686,688,691,693,695,697],{"class":139,"line":685},34,[137,687,540],{"class":153},[137,689,690],{"class":179},"draw",[137,692,421],{"class":149},[137,694,548],{"class":153},[137,696,186],{"class":149},[137,698,189],{"class":153},[137,700,702,704,707],{"class":139,"line":701},35,[137,703,607],{"class":153},[137,705,706],{"class":179},"background",[137,708,409],{"class":153},[137,710,712,714,717],{"class":139,"line":711},36,[137,713,607],{"class":153},[137,715,716],{"class":179},"lights",[137,718,719],{"class":153},"();\n",[137,721,723],{"class":139,"line":722},37,[137,724,167],{"emptyLinePlaceholder":78},[137,726,728,731],{"class":139,"line":727},38,[137,729,730],{"class":149},"            if",[137,732,733],{"class":153}," (rotate) {\n",[137,735,737,740,742,745,748,751],{"class":139,"line":736},39,[137,738,739],{"class":153},"                angle ",[137,741,312],{"class":149},[137,743,744],{"class":153}," s.frameCount ",[137,746,747],{"class":149},"*",[137,749,750],{"class":378}," 0.005",[137,752,529],{"class":153},[137,754,756],{"class":139,"line":755},40,[137,757,758],{"class":153},"            }\n",[137,760,762,764,767],{"class":139,"line":761},41,[137,763,607],{"class":153},[137,765,766],{"class":179},"rotateX",[137,768,769],{"class":153},"(angle);\n",[137,771,773,775,778],{"class":139,"line":772},42,[137,774,607],{"class":153},[137,776,777],{"class":179},"rotateY",[137,779,769],{"class":153},[137,781,783,785,788],{"class":139,"line":782},43,[137,784,607],{"class":153},[137,786,787],{"class":179},"orbitControl",[137,789,719],{"class":153},[137,791,793],{"class":139,"line":792},44,[137,794,167],{"emptyLinePlaceholder":78},[137,796,798,800,803],{"class":139,"line":797},45,[137,799,607],{"class":153},[137,801,802],{"class":179},"model",[137,804,805],{"class":153},"(model);\n",[137,807,809],{"class":139,"line":808},46,[137,810,580],{"class":153},[137,812,814],{"class":139,"line":813},47,[137,815,816],{"class":153},"    };\n",[137,818,820],{"class":139,"line":819},48,[137,821,167],{"emptyLinePlaceholder":78},[137,823,825,828,831,834,836],{"class":139,"line":824},49,[137,826,827],{"class":149},"    new",[137,829,830],{"class":179}," $p5",[137,832,833],{"class":153},"(sketch, ",[137,835,315],{"class":160},[137,837,460],{"class":153},[137,839,841],{"class":139,"line":840},50,[137,842,843],{"class":153},"});\n",[137,845,847,849,851],{"class":139,"line":846},51,[137,848,331],{"class":153},[137,850,346],{"class":294},[137,852,298],{"class":153},[11,854,855],{},"Looking forward to sharing more models soon!",[857,858,859],"style",{},"html pre.shiki code .sAwPA, html code.shiki .sAwPA{--shiki-default:#6A737D}html pre.shiki code .snl16, html code.shiki .snl16{--shiki-default:#F97583}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .s4JwU, html code.shiki .s4JwU{--shiki-default:#85E89D}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}html pre.shiki code .s9osk, html code.shiki .s9osk{--shiki-default:#FFAB70}",{"title":66,"searchDepth":67,"depth":67,"links":861},[],[863],"examples","2024-12-31T00:00:00.000Z","Three-dimensional models, whether they be of the format .obj or .stl, can be easily rendered in your Nuxt project by using the p5js.org library.",{"excerpt":867},{"type":8,"value":868},[869],[11,870,97,871,102,873,106,875,114],{},[99,872,101],{},[99,874,105],{},[108,876,113],{"href":110,"rel":877},[112],"/articles/nuxt-p5js-3d-models",{"title":92,"description":865},"articles/nuxt-p5js-3d-models",[882,883,884],"nuxt","p5js","3d","PajYZQHTFbAQs70Rg6Aa7FERpHnDcANoVRKBo1nBZSI",{"id":887,"title":888,"body":889,"categories":1167,"date":1170,"description":1171,"extension":75,"img":76,"meta":1172,"navigation":78,"path":1183,"seo":1184,"stem":1185,"tags":1186,"__hash__":1189},"content/articles/ssh-ed25519-sk-yubikey.md","Configuring a YubiKey for use with OpenSSH",{"type":8,"value":890,"toc":1165},[891,903,912,918,927,951,954,980,987,1007,1010,1088,1095,1152,1162],[11,892,893,898,899,902],{},[108,894,897],{"href":895,"rel":896},"https://www.yubico.com/",[112],"YubiKey's"," are a convenient way to introduce a physical form of two factor authentication into ones workflow. They support a variety of protocols, but in this guide we will walk through how to configure a YubiKey for use with OpenSSH via the \"new\" ",[99,900,901],{},"ed25519-sk"," key type that supports FIDO compliant hardware keys.",[11,904,905,906,911],{},"In ",[108,907,910],{"href":908,"rel":909},"https://www.openssh.com/txt/release-8.2",[112],"release 8.2 of OpenSSH"," support for FIDO devices was added with public key types \"ecdsa-sk\" and \"ed25519-sk\" (-sk standing for \"security key\"). This key type is supported by YubiKey's with firmware version 5.2.3 or higher.",[913,914,915],"blockquote",{},[11,916,917],{},"This release adds support for FIDO/U2F hardware authenticators to OpenSSH. U2F/FIDO are open standards for inexpensive two-factor authentication hardware that are widely used for website authentication.  In OpenSSH FIDO devices are supported by new public key types \"ecdsa-sk\" and \"ed25519-sk\", along with corresponding certificate types.",[11,919,920,921,926],{},"Let's get started by installing the latest version of OpenSSH via ",[108,922,925],{"href":923,"rel":924},"https://brew.sh/",[112],"Homebrew",", along with the YubiKey Manager (ykman) CLI. The version of OpenSSH included with macOS is not compatible.",[129,928,932],{"className":929,"code":930,"language":931,"meta":66,"style":66},"language-sh shiki shiki-themes github-dark","$ brew install openssh ykman\n","sh",[99,933,934],{"__ignoreMap":66},[137,935,936,939,942,945,948],{"class":139,"line":140},[137,937,938],{"class":179},"$",[137,940,941],{"class":160}," brew",[137,943,944],{"class":160}," install",[137,946,947],{"class":160}," openssh",[137,949,950],{"class":160}," ykman\n",[11,952,953],{},"Then, let's confirm that our YubiKey has a firmware that is greater than 5.2.3:",[129,955,957],{"className":929,"code":956,"language":931,"meta":66,"style":66},"$ ykman list\nYubiKey 5Ci (5.4.3) [OTP+FIDO+CCID]\n",[99,958,959,969],{"__ignoreMap":66},[137,960,961,963,966],{"class":139,"line":140},[137,962,938],{"class":179},[137,964,965],{"class":160}," ykman",[137,967,968],{"class":160}," list\n",[137,970,971,974,977],{"class":139,"line":67},[137,972,973],{"class":179},"YubiKey",[137,975,976],{"class":160}," 5Ci",[137,978,979],{"class":153}," (5.4.3) [OTP+FIDO+CCID]\n",[11,981,982,983,986],{},"Next, we'll go ahead and enable a pin on our device via the ",[99,984,985],{},"change-pin"," command, as this a requirement for our use.",[129,988,990],{"className":929,"code":989,"language":931,"meta":66,"style":66},"$ ykman fido access change-pin\n",[99,991,992],{"__ignoreMap":66},[137,993,994,996,998,1001,1004],{"class":139,"line":140},[137,995,938],{"class":179},[137,997,965],{"class":160},[137,999,1000],{"class":160}," fido",[137,1002,1003],{"class":160}," access",[137,1005,1006],{"class":160}," change-pin\n",[11,1008,1009],{},"And last, we'll generate the key on our device!",[129,1011,1013],{"className":929,"code":1012,"language":931,"meta":66,"style":66},"$ ssh-keygen -t ed25519-sk -O resident\nGenerating public/private ed25519-sk key pair.\nYou may need to touch your authenticator to authorize key generation.\n...\n",[99,1014,1015,1034,1050,1083],{"__ignoreMap":66},[137,1016,1017,1019,1022,1025,1028,1031],{"class":139,"line":140},[137,1018,938],{"class":179},[137,1020,1021],{"class":160}," ssh-keygen",[137,1023,1024],{"class":378}," -t",[137,1026,1027],{"class":160}," ed25519-sk",[137,1029,1030],{"class":378}," -O",[137,1032,1033],{"class":160}," resident\n",[137,1035,1036,1039,1042,1044,1047],{"class":139,"line":67},[137,1037,1038],{"class":179},"Generating",[137,1040,1041],{"class":160}," public/private",[137,1043,1027],{"class":160},[137,1045,1046],{"class":160}," key",[137,1048,1049],{"class":160}," pair.\n",[137,1051,1052,1055,1058,1061,1064,1067,1070,1073,1075,1078,1080],{"class":139,"line":164},[137,1053,1054],{"class":179},"You",[137,1056,1057],{"class":160}," may",[137,1059,1060],{"class":160}," need",[137,1062,1063],{"class":160}," to",[137,1065,1066],{"class":160}," touch",[137,1068,1069],{"class":160}," your",[137,1071,1072],{"class":160}," authenticator",[137,1074,1063],{"class":160},[137,1076,1077],{"class":160}," authorize",[137,1079,1046],{"class":160},[137,1081,1082],{"class":160}," generation.\n",[137,1084,1085],{"class":139,"line":170},[137,1086,1087],{"class":378},"...\n",[11,1089,1090,1091,1094],{},"We specify ",[56,1092,1093],{},"resident"," to indicate that the key handle is to be stored on the YubiKey itself, since we will be using this device with multiple computers.",[129,1096,1100],{"className":1097,"code":1098,"language":1099,"meta":66,"style":66},"language-txt shiki shiki-themes github-dark","resident\n        Indicate that the key handle should be stored on the FIDO\n        authenticator itself.  This makes it easier to use the\n        authenticator on multiple computers.  Resident keys may be\n        supported on FIDO2 authenticators and typically require that a PIN\n        be set on the authenticator prior to generation.  Resident keys\n        may be loaded off the authenticator using ssh-add(1).  Storing\n        both parts of a key on a FIDO authenticator increases the\n        likelihood of an attacker being able to use a stolen authenticator\n        device.\n","txt",[99,1101,1102,1107,1112,1117,1122,1127,1132,1137,1142,1147],{"__ignoreMap":66},[137,1103,1104],{"class":139,"line":140},[137,1105,1106],{},"resident\n",[137,1108,1109],{"class":139,"line":67},[137,1110,1111],{},"        Indicate that the key handle should be stored on the FIDO\n",[137,1113,1114],{"class":139,"line":164},[137,1115,1116],{},"        authenticator itself.  This makes it easier to use the\n",[137,1118,1119],{"class":139,"line":170},[137,1120,1121],{},"        authenticator on multiple computers.  Resident keys may be\n",[137,1123,1124],{"class":139,"line":192},[137,1125,1126],{},"        supported on FIDO2 authenticators and typically require that a PIN\n",[137,1128,1129],{"class":139,"line":200},[137,1130,1131],{},"        be set on the authenticator prior to generation.  Resident keys\n",[137,1133,1134],{"class":139,"line":206},[137,1135,1136],{},"        may be loaded off the authenticator using ssh-add(1).  Storing\n",[137,1138,1139],{"class":139,"line":212},[137,1140,1141],{},"        both parts of a key on a FIDO authenticator increases the\n",[137,1143,1144],{"class":139,"line":218},[137,1145,1146],{},"        likelihood of an attacker being able to use a stolen authenticator\n",[137,1148,1149],{"class":139,"line":224},[137,1150,1151],{},"        device.\n",[11,1153,1154,1155,102,1158,1161],{},"And that's all it takes -- simple enough. Now, when interacting with ",[56,1156,1157],{},"ssh",[56,1159,1160],{},"git"," you will be prompted to touch the YubiKey to bring that little bit of physical 2FA.",[857,1163,1164],{},"html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}",{"title":66,"searchDepth":67,"depth":67,"links":1166},[],[1168,1169],"tooling","tips","2024-06-09T00:00:00.000Z","YubiKey's are a convenient way to introduce a physical form of two factor authentication into ones workflow. They support a variety of protocols, but in this guide we will walk through how to configure a YubiKey for use with OpenSSH via the \"new\" ed25519-sk key type that supports FIDO compliant hardware keys.",{"draft":1173,"excerpt":1174},false,{"type":8,"value":1175},[1176],[11,1177,1178,898,1181,902],{},[108,1179,897],{"href":895,"rel":1180},[112],[99,1182,901],{},"/articles/ssh-ed25519-sk-yubikey",{"title":888,"description":1171},"articles/ssh-ed25519-sk-yubikey",[1187,1188],"unix","configurations","viiH_4l5V_Blrwv99sJDPgiNVD0mVj0P2T373wKvSkg",{"id":1191,"title":1192,"body":1193,"categories":1346,"date":1347,"description":1348,"extension":75,"img":76,"meta":1349,"navigation":78,"path":1361,"seo":1362,"stem":1363,"tags":1364,"__hash__":1367},"content/articles/vim-fugitive-gpg-pinentry.md","Using pinentry-mac to sign commits from vim-fugitive",{"type":8,"value":1194,"toc":1342},[1195,1212,1216,1237,1241,1244,1262,1272,1278,1284,1303,1306,1337,1340],[11,1196,1197,1198,1203,1204,1207,1208,1211],{},"In order to sign git commits from within Vim using a plugin like ",[108,1199,1202],{"href":1200,"rel":1201},"https://github.com/tpope/vim-fugitive",[112],"tpope/vim-fugitive",", it is necessary to configure the ",[99,1205,1206],{},"gpg-agent"," to use a GUI based ",[99,1209,1210],{},"pinentry-program",".",[15,1213,1215],{"id":1214},"preface","Preface",[11,1217,1218,1219,1224,1225,1207,1227,1229,1230,1233,1234,1211],{},"The man, the myth, the legend, Timothy Popallopollis himself ",[108,1220,1223],{"href":1221,"rel":1222},"https://github.com/tpope/vim-fugitive/issues/846#issuecomment-253816577",[112],"recommends"," configuring your ",[99,1226,1206],{},[99,1228,1210],{},". On macOS this can be done quite by simply installing ",[99,1231,1232],{},"pinentry-mac",", and updating your ",[99,1235,1236],{},"gpg-agent.conf",[15,1238,1240],{"id":1239},"configuration","Configuration",[11,1242,1243],{},"First things first, let's install the pinentry program.",[129,1245,1249],{"className":1246,"code":1247,"language":1248,"meta":66,"style":66},"language-bash shiki shiki-themes github-dark","$ brew install pinentry-mac\n","bash",[99,1250,1251],{"__ignoreMap":66},[137,1252,1253,1255,1257,1259],{"class":139,"line":140},[137,1254,938],{"class":179},[137,1256,941],{"class":160},[137,1258,944],{"class":160},[137,1260,1261],{"class":160}," pinentry-mac\n",[11,1263,1264,1265,1267,1268,1271],{},"Then, all we need to do is set the ",[99,1266,1210],{}," option in your ",[99,1269,1270],{},"~/.gnupg/gpg-agent.conf"," file.",[129,1273,1276],{"className":1274,"code":1275,"language":256},[254],"default-cache-ttl 600\nmax-cache-ttl 7200\npinentry-program /opt/homebrew/bin/pinentry-mac\n",[99,1277,1275],{"__ignoreMap":66},[11,1279,1280,1281,1211],{},"If your don't know the path to your pinentry program, you can throw down a quick ",[99,1282,1283],{},"which",[129,1285,1287],{"className":1246,"code":1286,"language":1248,"meta":66,"style":66},"$ which pinentry-mac\n/opt/homebrew/bin/pinentry-mac\n",[99,1288,1289,1298],{"__ignoreMap":66},[137,1290,1291,1293,1296],{"class":139,"line":140},[137,1292,938],{"class":179},[137,1294,1295],{"class":160}," which",[137,1297,1261],{"class":160},[137,1299,1300],{"class":139,"line":67},[137,1301,1302],{"class":179},"/opt/homebrew/bin/pinentry-mac\n",[11,1304,1305],{},"Or use your Homebrew prefix.",[129,1307,1309],{"className":1246,"code":1308,"language":1248,"meta":66,"style":66},"$ echo $(brew --prefix)/bin/pinentry-mac\n/opt/homebrew/bin/pinentry-mac\n",[99,1310,1311,1333],{"__ignoreMap":66},[137,1312,1313,1315,1318,1321,1324,1327,1330],{"class":139,"line":140},[137,1314,938],{"class":179},[137,1316,1317],{"class":160}," echo",[137,1319,1320],{"class":153}," $(",[137,1322,1323],{"class":179},"brew",[137,1325,1326],{"class":378}," --prefix",[137,1328,1329],{"class":153},")",[137,1331,1332],{"class":160},"/bin/pinentry-mac\n",[137,1334,1335],{"class":139,"line":67},[137,1336,1302],{"class":179},[11,1338,1339],{},"But that's all it takes. Now, you should be prompted to enter your gpg pin in an external window when signing commits from vim.",[857,1341,1164],{},{"title":66,"searchDepth":67,"depth":67,"links":1343},[1344,1345],{"id":1214,"depth":67,"text":1215},{"id":1239,"depth":67,"text":1240},[1168,1169],"2024-05-11T00:00:00.000Z","In order to sign git commits from within Vim using a plugin like tpope/vim-fugitive, it is necessary to configure the gpg-agent to use a GUI based pinentry-program.",{"draft":1173,"excerpt":1350},{"type":8,"value":1351},[1352],[11,1353,1197,1354,1203,1357,1207,1359,1211],{},[108,1355,1202],{"href":1200,"rel":1356},[112],[99,1358,1206],{},[99,1360,1210],{},"/articles/vim-fugitive-gpg-pinentry",{"title":1192,"description":1348},"articles/vim-fugitive-gpg-pinentry",[1365,1366],"vim","tip","Ce19MdudjD8vmCEgz7MrTkpnn2IR5GC9GvS-Xjn95KI",{"id":1369,"title":1370,"body":1371,"categories":1771,"date":1772,"description":1773,"extension":75,"img":76,"meta":1774,"navigation":78,"path":1788,"seo":1789,"stem":1790,"tags":1791,"__hash__":1793},"content/articles/podcast-transcription-whispercpp.md","Easily Transcribe Podcasts with Whisper.cpp",{"type":8,"value":1372,"toc":1766},[1373,1394,1398,1418,1466,1472,1564,1571,1577,1653,1656,1754,1757,1763],[11,1374,1375,1376,1381,1382,1387,1388,1393],{},"If you've ever had the need to transcribe a podcast, lecture, or some other audio recording, it turns out it's surprisingly easy with the extremely impressive ",[108,1377,1380],{"href":1378,"rel":1379},"https://github.com/ggerganov/whisper.cpp",[112],"whisper.cpp"," project. This high-performance fork of ",[108,1383,1386],{"href":1384,"rel":1385},"https://github.com/openai/whisper",[112],"OpenAI's Whisper"," can run on all sorts of hardware -- including my M1 Mac Mini. Let's walk through an example from start-to-finish of transcribing an episode of the ",[108,1389,1392],{"href":1390,"rel":1391},"https://podcasts.apple.com/us/podcast/alter-everything/id1356137854",[112],"Alter Everything"," podcast.",[15,1395,1397],{"id":1396},"obtain-audio-files","Obtain Audio File(s)",[11,1399,1400,1401,1404,1405,1408,1409,1411,1412,1414,1415,1211],{},"First, let's get the ",[99,1402,1403],{},"wav"," file from YouTube using the ",[99,1406,1407],{},"youtube-dl"," utility. It should be noted that ",[99,1410,1380],{}," expects ",[99,1413,1403],{}," filetypes, and this utility defaults to ",[99,1416,1417],{},"mp3",[129,1419,1421],{"className":929,"code":1420,"language":931,"meta":66,"style":66}," $ youtube-dl \\\n    --extract-audio \\\n    --audio-format wav \\\n    --output podcast.wav \\\n    \"https://www.youtube.com/watch?v=CoUN690wSYQ\"\n",[99,1422,1423,1434,1441,1451,1461],{"__ignoreMap":66},[137,1424,1425,1428,1431],{"class":139,"line":140},[137,1426,1427],{"class":179}," $",[137,1429,1430],{"class":160}," youtube-dl",[137,1432,1433],{"class":378}," \\\n",[137,1435,1436,1439],{"class":139,"line":67},[137,1437,1438],{"class":378},"    --extract-audio",[137,1440,1433],{"class":378},[137,1442,1443,1446,1449],{"class":139,"line":164},[137,1444,1445],{"class":378},"    --audio-format",[137,1447,1448],{"class":160}," wav",[137,1450,1433],{"class":378},[137,1452,1453,1456,1459],{"class":139,"line":170},[137,1454,1455],{"class":378},"    --output",[137,1457,1458],{"class":160}," podcast.wav",[137,1460,1433],{"class":378},[137,1462,1463],{"class":139,"line":192},[137,1464,1465],{"class":160},"    \"https://www.youtube.com/watch?v=CoUN690wSYQ\"\n",[11,1467,1468,1469,1471],{},"This file has a 44.1 kHz sample rate, and ",[99,1470,1380],{}," expects 16 kHz, so let's go ahead and convert that.",[129,1473,1475],{"className":929,"code":1474,"language":931,"meta":66,"style":66}," $ file podcast.wav\npodcast.wav: RIFF (little-endian) data, WAVE audio, Microsoft PCM, 16 bit, stereo 44100 Hz\n\n $ ffmpeg -i podcast.wav -ar 16000 podcast-16khz.wav\n\n $ file podcast-16khz.wav\npodcast-16khz.wav: RIFF (little-endian) data, WAVE audio, Microsoft PCM, 16 bit, stereo 16000 Hz\n\n# NOTE: it looks like it's possible to specify this conversion as a post-process as a\n# flag to the `youtube-dl` command -- I will explore this further next time...\n# youtube-dl --extract-audio --audio-quality 0 --audio-format mp3 --postprocessor-args \"-ar 44100\" %dl%\n",[99,1476,1477,1487,1498,1502,1523,1527,1535,1545,1549,1554,1559],{"__ignoreMap":66},[137,1478,1479,1481,1484],{"class":139,"line":140},[137,1480,1427],{"class":179},[137,1482,1483],{"class":160}," file",[137,1485,1486],{"class":160}," podcast.wav\n",[137,1488,1489,1492,1495],{"class":139,"line":67},[137,1490,1491],{"class":179},"podcast.wav:",[137,1493,1494],{"class":160}," RIFF",[137,1496,1497],{"class":153}," (little-endian) data, WAVE audio, Microsoft PCM, 16 bit, stereo 44100 Hz\n",[137,1499,1500],{"class":139,"line":164},[137,1501,167],{"emptyLinePlaceholder":78},[137,1503,1504,1506,1509,1512,1514,1517,1520],{"class":139,"line":170},[137,1505,1427],{"class":179},[137,1507,1508],{"class":160}," ffmpeg",[137,1510,1511],{"class":378}," -i",[137,1513,1458],{"class":160},[137,1515,1516],{"class":378}," -ar",[137,1518,1519],{"class":378}," 16000",[137,1521,1522],{"class":160}," podcast-16khz.wav\n",[137,1524,1525],{"class":139,"line":192},[137,1526,167],{"emptyLinePlaceholder":78},[137,1528,1529,1531,1533],{"class":139,"line":200},[137,1530,1427],{"class":179},[137,1532,1483],{"class":160},[137,1534,1522],{"class":160},[137,1536,1537,1540,1542],{"class":139,"line":206},[137,1538,1539],{"class":179},"podcast-16khz.wav:",[137,1541,1494],{"class":160},[137,1543,1544],{"class":153}," (little-endian) data, WAVE audio, Microsoft PCM, 16 bit, stereo 16000 Hz\n",[137,1546,1547],{"class":139,"line":212},[137,1548,167],{"emptyLinePlaceholder":78},[137,1550,1551],{"class":139,"line":218},[137,1552,1553],{"class":143},"# NOTE: it looks like it's possible to specify this conversion as a post-process as a\n",[137,1555,1556],{"class":139,"line":224},[137,1557,1558],{"class":143},"# flag to the `youtube-dl` command -- I will explore this further next time...\n",[137,1560,1561],{"class":139,"line":400},[137,1562,1563],{"class":143},"# youtube-dl --extract-audio --audio-quality 0 --audio-format mp3 --postprocessor-args \"-ar 44100\" %dl%\n",[15,1565,1567,1568,1570],{"id":1566},"build-whispercpp-transcribe-audio","Build ",[99,1569,1380],{}," & Transcribe Audio",[11,1572,1573,1574,1576],{},"Then, let's get the latest version of ",[99,1575,1380],{},", download the English Whisper model, and build the example.",[129,1578,1580],{"className":929,"code":1579,"language":931,"meta":66,"style":66},"# Clone the `whisper.cpp` repository\n $ git clone --depth 1 git@github.com:ggerganov/whisper.cpp && cd whisper.cpp\n\n# Download the English Whisper model in `ggml` format\n $ bash ./models/download-ggml-model.sh base.en\n\n# Build the main example\n $ make\n",[99,1581,1582,1587,1615,1619,1624,1637,1641,1646],{"__ignoreMap":66},[137,1583,1584],{"class":139,"line":140},[137,1585,1586],{"class":143},"# Clone the `whisper.cpp` repository\n",[137,1588,1589,1591,1594,1597,1600,1603,1606,1609,1612],{"class":139,"line":67},[137,1590,1427],{"class":179},[137,1592,1593],{"class":160}," git",[137,1595,1596],{"class":160}," clone",[137,1598,1599],{"class":378}," --depth",[137,1601,1602],{"class":378}," 1",[137,1604,1605],{"class":160}," git@github.com:ggerganov/whisper.cpp",[137,1607,1608],{"class":153}," && ",[137,1610,1611],{"class":378},"cd",[137,1613,1614],{"class":160}," whisper.cpp\n",[137,1616,1617],{"class":139,"line":164},[137,1618,167],{"emptyLinePlaceholder":78},[137,1620,1621],{"class":139,"line":170},[137,1622,1623],{"class":143},"# Download the English Whisper model in `ggml` format\n",[137,1625,1626,1628,1631,1634],{"class":139,"line":192},[137,1627,1427],{"class":179},[137,1629,1630],{"class":160}," bash",[137,1632,1633],{"class":160}," ./models/download-ggml-model.sh",[137,1635,1636],{"class":160}," base.en\n",[137,1638,1639],{"class":139,"line":200},[137,1640,167],{"emptyLinePlaceholder":78},[137,1642,1643],{"class":139,"line":206},[137,1644,1645],{"class":143},"# Build the main example\n",[137,1647,1648,1650],{"class":139,"line":212},[137,1649,1427],{"class":179},[137,1651,1652],{"class":160}," make\n",[11,1654,1655],{},"And finally, let's transcribe that podcast!",[129,1657,1659],{"className":929,"code":1658,"language":931,"meta":66,"style":66}," $ ./main \\\n    -m ~/workspace/whisper.cpp/models/ggml-base.en.bin \\\n    -f ~/Downloads/podcast-16khz.wav \\\n    --output-vtt \\\n    --output-file out\n\n# whisper_print_timings:     load time =   114.71 ms\n# whisper_print_timings:     fallbacks =   0 p /   0 h\n# whisper_print_timings:      mel time =   692.20 ms\n# whisper_print_timings:   sample time = 22278.10 ms / 27893 runs (    0.80 ms per run)\n# whisper_print_timings:   encode time = 10000.75 ms /    55 runs (  181.83 ms per run)\n# whisper_print_timings:   decode time =   331.77 ms /    54 runs (    6.14 ms per run)\n# whisper_print_timings:   batchd time = 45236.73 ms / 27566 runs (    1.64 ms per run)\n# whisper_print_timings:   prompt time =  1921.90 ms / 11832 runs (    0.16 ms per run)\n# whisper_print_timings:    total time = 80709.54 ms\n",[99,1660,1661,1670,1680,1690,1697,1705,1709,1714,1719,1724,1729,1734,1739,1744,1749],{"__ignoreMap":66},[137,1662,1663,1665,1668],{"class":139,"line":140},[137,1664,1427],{"class":179},[137,1666,1667],{"class":160}," ./main",[137,1669,1433],{"class":378},[137,1671,1672,1675,1678],{"class":139,"line":67},[137,1673,1674],{"class":378},"    -m",[137,1676,1677],{"class":160}," ~/workspace/whisper.cpp/models/ggml-base.en.bin",[137,1679,1433],{"class":378},[137,1681,1682,1685,1688],{"class":139,"line":164},[137,1683,1684],{"class":378},"    -f",[137,1686,1687],{"class":160}," ~/Downloads/podcast-16khz.wav",[137,1689,1433],{"class":378},[137,1691,1692,1695],{"class":139,"line":170},[137,1693,1694],{"class":378},"    --output-vtt",[137,1696,1433],{"class":378},[137,1698,1699,1702],{"class":139,"line":192},[137,1700,1701],{"class":378},"    --output-file",[137,1703,1704],{"class":160}," out\n",[137,1706,1707],{"class":139,"line":200},[137,1708,167],{"emptyLinePlaceholder":78},[137,1710,1711],{"class":139,"line":206},[137,1712,1713],{"class":143},"# whisper_print_timings:     load time =   114.71 ms\n",[137,1715,1716],{"class":139,"line":212},[137,1717,1718],{"class":143},"# whisper_print_timings:     fallbacks =   0 p /   0 h\n",[137,1720,1721],{"class":139,"line":218},[137,1722,1723],{"class":143},"# whisper_print_timings:      mel time =   692.20 ms\n",[137,1725,1726],{"class":139,"line":224},[137,1727,1728],{"class":143},"# whisper_print_timings:   sample time = 22278.10 ms / 27893 runs (    0.80 ms per run)\n",[137,1730,1731],{"class":139,"line":400},[137,1732,1733],{"class":143},"# whisper_print_timings:   encode time = 10000.75 ms /    55 runs (  181.83 ms per run)\n",[137,1735,1736],{"class":139,"line":412},[137,1737,1738],{"class":143},"# whisper_print_timings:   decode time =   331.77 ms /    54 runs (    6.14 ms per run)\n",[137,1740,1741],{"class":139,"line":438},[137,1742,1743],{"class":143},"# whisper_print_timings:   batchd time = 45236.73 ms / 27566 runs (    1.64 ms per run)\n",[137,1745,1746],{"class":139,"line":463},[137,1747,1748],{"class":143},"# whisper_print_timings:   prompt time =  1921.90 ms / 11832 runs (    0.16 ms per run)\n",[137,1750,1751],{"class":139,"line":468},[137,1752,1753],{"class":143},"# whisper_print_timings:    total time = 80709.54 ms\n",[11,1755,1756],{},"A full podcast transcribed in ~80 seconds on an M1 Mac Mini -- not too bad!",[129,1758,1761],{"className":1759,"code":1760,"language":256},[254],"# out.vtt\n\n00:00:00.000 --> 00:00:06.480\n >> Hi everyone. We recently launched a short engagement feedback survey for the Alter Everything\n\n00:00:06.480 --> 00:00:11.360\n podcast. Click the link in the episode description wherever you're listening to let us know what\n\n00:00:11.360 --> 00:00:16.320\n you think and help us improve our show.\n\n00:00:16.320 --> 00:00:21.200\n Welcome to Alter Everything, a podcast about data science and analytics culture. I'm Megan\n\n00:00:21.200 --> 00:00:26.440\n Dibble and today I'm talking with Nick Schrock, CTO and founder of Dagster Labs. We discussed\n\n00:00:26.440 --> 00:00:31.560\n data engineering trends, challenges in the field, why he started his company, and what\n\n00:00:31.560 --> 00:00:38.960\n makes him excited about the future of data engineering. Let's get started.\n\n00:00:38.960 --> 00:00:42.720\n >> Hi, Nick. It's great to have you on our show today. Thanks for being here.\n\n00:00:42.720 --> 00:00:43.920\n >> Thanks for having me.\n\n00:00:43.920 --> 00:00:48.280\n >> Yeah. Could you start off by giving an introduction to yourself for our listeners?\n\n00:00:48.280 --> 00:00:52.920\n >> Sure. My name is Nick Schrock. I'm the CTO and founder of Dagster Labs. There's the\n\n00:00:52.920 --> 00:00:59.520\n company behind Dagster, which is a data orchestration framework. Prior to doing this, I was an engineer\n\n00:00:59.520 --> 00:01:05.960\n at Facebook from 2009, 2017. While I was there, I found a team called product infrastructure\n\n00:01:05.960 --> 00:01:09.800\n whose goal was to make our application developers more efficient and productive, and a bunch\n\n00:01:09.800 --> 00:01:13.840\n of open source work came out of that actually, one of which was React, which I had nothing\n\n00:01:13.840 --> 00:01:18.040\n to do with, but actually the CEO of Dagster Labs co-created and I personally co-created\n\n00:01:18.040 --> 00:01:22.640\n GraphQL. So as I like to say, Pete and I were present at the creation of the full hipster\n\n00:01:22.640 --> 00:01:28.680\n stack. I moved on to Facebook in 2017, figuring out what to do next, and this data engineering\n\n00:01:28.680 --> 00:01:32.960\n and data orchestration problem really got me hooked actually quite soon after I left,\n\n00:01:32.960 --> 00:01:36.280\n and the rest is history. I'm sure we'll get into that more.\n",[99,1762,1760],{"__ignoreMap":66},[857,1764,1765],{},"html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .sAwPA, html code.shiki .sAwPA{--shiki-default:#6A737D}",{"title":66,"searchDepth":67,"depth":67,"links":1767},[1768,1769],{"id":1396,"depth":67,"text":1397},{"id":1566,"depth":67,"text":1770},"Build whisper.cpp & Transcribe Audio",[73],"2024-01-08T00:00:00.000Z","If you've ever had the need to transcribe a podcast, lecture, or some other audio recording, it turns out it's surprisingly easy with the extremely impressive whisper.cpp project. This high-performance fork of OpenAI's Whisper can run on all sorts of hardware -- including my M1 Mac Mini. Let's walk through an example from start-to-finish of transcribing an episode of the Alter Everything podcast.",{"draft":1173,"excerpt":1775},{"type":8,"value":1776},[1777],[11,1778,1375,1779,1381,1782,1387,1785,1393],{},[108,1780,1380],{"href":1378,"rel":1781},[112],[108,1783,1386],{"href":1384,"rel":1784},[112],[108,1786,1392],{"href":1390,"rel":1787},[112],"/articles/podcast-transcription-whispercpp",{"title":1370,"description":1773},"articles/podcast-transcription-whispercpp",[1380,1792],"ml","dpoewhF-VmtbgB6-bqensZsmSTOF_1e6euN8T-__Z1s",{"id":1795,"title":1796,"body":1797,"categories":2759,"date":2760,"description":2761,"extension":75,"img":76,"meta":2762,"navigation":78,"path":2771,"seo":2772,"stem":2773,"tags":2774,"__hash__":2776},"content/articles/nuxt-content-rss-feed.md","How To Add an RSS Feed to a Nuxt Website",{"type":8,"value":1798,"toc":2754},[1799,1808,1810,1825,1829,1838,1859,1869,1886,2397,2416,2458,2462,2469,2472,2488,2494,2703,2711,2751],[11,1800,1801,1802,1807],{},"If you are a user of ",[108,1803,1806],{"href":1804,"rel":1805},"https://content.nuxt.com/",[112],"Nuxt Content"," and you wish to configure an RSS feed for your website, it's a surprisingly straight forward process! In this article, we will walk through the code changes required to host an RSS feed for both a statically generated, and Universal Nuxt application.",[15,1809,1215],{"id":1214},[11,1811,1812,1813,1818,1819,1824],{},"In version 2 of Nuxt, the community module, ",[108,1814,1817],{"href":1815,"rel":1816},"https://github.com/nuxt-community/feed-module",[112],"nuxt-community/feed-module"," was a popular choice for adding an RSS feed to your website. However, there has been an unresolved ",[108,1820,1823],{"href":1821,"rel":1822},"https://github.com/nuxt-community/feed-module/issues/106",[112],"open issue"," since April 1st, 2022 to add support for Nuxt v3. Thankfully, implementing this feature without a module is relatively straight forward.",[15,1826,1828],{"id":1827},"instructions","Instructions",[11,1830,1831,1832,1837],{},"First, install the ",[108,1833,1836],{"href":1834,"rel":1835},"https://www.npmjs.com/package/feed",[112],"feed"," library into your project:",[129,1839,1843],{"className":1840,"code":1841,"language":1842,"meta":66,"style":66},"language-shell shiki shiki-themes github-dark","npm i -D feed\n","shell",[99,1844,1845],{"__ignoreMap":66},[137,1846,1847,1850,1853,1856],{"class":139,"line":140},[137,1848,1849],{"class":179},"npm",[137,1851,1852],{"class":160}," i",[137,1854,1855],{"class":378}," -D",[137,1857,1858],{"class":160}," feed\n",[11,1860,1861,1862,1865,1866,1211],{},"Then, create a ",[99,1863,1864],{},"server/"," folder in your project if it does not already exist, and create a file named ",[99,1867,1868],{},"server/routes/atom.ts",[11,1870,1871,1872,1874,1875,1877,1878,1881,1882,1885],{},"Here, we will leverage the ",[99,1873,1836],{}," library and construct an XML representation of our Nuxt content. As you can see, we first define our ",[99,1876,1836],{}," with metadata associated with our RSS feed. This will be used by RSS readers to provide context to the end user. Then, we query our Nuxt content with ",[99,1879,1880],{},"serverQueryContent"," and append a ",[99,1883,1884],{},"feed.addItem"," for each article.",[129,1887,1891],{"className":1888,"code":1889,"language":1890,"meta":66,"style":66},"language-ts shiki shiki-themes github-dark","import { serverQueryContent } from '#content/server';\nimport { Feed } from 'feed';\n\nconst BASE_URL = \"https://mywebsite.com\"\nconst AUTHOR_NAME = \"Firstname Lastname\"\n\nexport default defineEventHandler(async (event) => {\n\n    const feed = new Feed({\n      title: \"My Title\",\n      description: \"My Description\",\n      id: BASE_URL,\n      link: BASE_URL,\n      language: \"en\",\n      image: `${BASE_URL}/images/placeholder.png`,\n      favicon: `${BASE_URL}/favicon.ico`,\n      copyright: `All rights reserved ${new Date().getFullYear()}, ${AUTHOR_NAME}`,\n      updated: new Date(),\n      generator: \"Nuxt static site generation + Feed for Node.js\",\n      feedLinks: {\n        atom: `${BASE_URL}/atom`\n      },\n      author: {\n        name: AUTHOR_NAME,\n      }\n    });\n\n    const articles = await serverQueryContent(event).find();\n\n    articles.forEach((article) => {\n      feed.addItem({\n        title: article.title ? article.title : \"Missing Title\",\n        id: article._path,\n        link: `${BASE_URL}${article._path}`,\n        description: article.description,\n        author: [\n          {\n            name: AUTHOR_NAME,\n          },\n        ],\n        date: new Date(article.date),\n        image: article.cover_image ? `${BASE_URL}/${article.cover_image}` : undefined\n      });\n    });\n\n    return feed.atom1();\n});\n","ts",[99,1892,1893,1907,1921,1925,1938,1950,1954,1979,1983,2002,2013,2023,2033,2042,2052,2067,2081,2115,2127,2137,2142,2154,2159,2164,2173,2178,2183,2187,2210,2214,2234,2244,2263,2268,2291,2296,2301,2306,2315,2320,2325,2337,2367,2372,2376,2380,2393],{"__ignoreMap":66},[137,1894,1895,1897,1900,1902,1905],{"class":139,"line":140},[137,1896,150],{"class":149},[137,1898,1899],{"class":153}," { serverQueryContent } ",[137,1901,157],{"class":149},[137,1903,1904],{"class":160}," '#content/server'",[137,1906,529],{"class":153},[137,1908,1909,1911,1914,1916,1919],{"class":139,"line":67},[137,1910,150],{"class":149},[137,1912,1913],{"class":153}," { Feed } ",[137,1915,157],{"class":149},[137,1917,1918],{"class":160}," 'feed'",[137,1920,529],{"class":153},[137,1922,1923],{"class":139,"line":164},[137,1924,167],{"emptyLinePlaceholder":78},[137,1926,1927,1930,1933,1935],{"class":139,"line":170},[137,1928,1929],{"class":149},"const",[137,1931,1932],{"class":378}," BASE_URL",[137,1934,421],{"class":149},[137,1936,1937],{"class":160}," \"https://mywebsite.com\"\n",[137,1939,1940,1942,1945,1947],{"class":139,"line":192},[137,1941,1929],{"class":149},[137,1943,1944],{"class":378}," AUTHOR_NAME",[137,1946,421],{"class":149},[137,1948,1949],{"class":160}," \"Firstname Lastname\"\n",[137,1951,1952],{"class":139,"line":200},[137,1953,167],{"emptyLinePlaceholder":78},[137,1955,1956,1958,1960,1963,1965,1968,1970,1973,1975,1977],{"class":139,"line":206},[137,1957,173],{"class":149},[137,1959,176],{"class":149},[137,1961,1962],{"class":179}," defineEventHandler",[137,1964,455],{"class":153},[137,1966,1967],{"class":149},"async",[137,1969,424],{"class":153},[137,1971,1972],{"class":427},"event",[137,1974,431],{"class":153},[137,1976,186],{"class":149},[137,1978,189],{"class":153},[137,1980,1981],{"class":139,"line":212},[137,1982,167],{"emptyLinePlaceholder":78},[137,1984,1985,1988,1991,1993,1996,1999],{"class":139,"line":218},[137,1986,1987],{"class":149},"    const",[137,1989,1990],{"class":378}," feed",[137,1992,421],{"class":149},[137,1994,1995],{"class":149}," new",[137,1997,1998],{"class":179}," Feed",[137,2000,2001],{"class":153},"({\n",[137,2003,2004,2007,2010],{"class":139,"line":224},[137,2005,2006],{"class":153},"      title: ",[137,2008,2009],{"class":160},"\"My Title\"",[137,2011,2012],{"class":153},",\n",[137,2014,2015,2018,2021],{"class":139,"line":400},[137,2016,2017],{"class":153},"      description: ",[137,2019,2020],{"class":160},"\"My Description\"",[137,2022,2012],{"class":153},[137,2024,2025,2028,2031],{"class":139,"line":412},[137,2026,2027],{"class":153},"      id: ",[137,2029,2030],{"class":378},"BASE_URL",[137,2032,2012],{"class":153},[137,2034,2035,2038,2040],{"class":139,"line":438},[137,2036,2037],{"class":153},"      link: ",[137,2039,2030],{"class":378},[137,2041,2012],{"class":153},[137,2043,2044,2047,2050],{"class":139,"line":463},[137,2045,2046],{"class":153},"      language: ",[137,2048,2049],{"class":160},"\"en\"",[137,2051,2012],{"class":153},[137,2053,2054,2057,2060,2062,2065],{"class":139,"line":468},[137,2055,2056],{"class":153},"      image: ",[137,2058,2059],{"class":160},"`${",[137,2061,2030],{"class":378},[137,2063,2064],{"class":160},"}/images/placeholder.png`",[137,2066,2012],{"class":153},[137,2068,2069,2072,2074,2076,2079],{"class":139,"line":481},[137,2070,2071],{"class":153},"      favicon: ",[137,2073,2059],{"class":160},[137,2075,2030],{"class":378},[137,2077,2078],{"class":160},"}/favicon.ico`",[137,2080,2012],{"class":153},[137,2082,2083,2086,2089,2092,2095,2098,2101,2104,2107,2110,2113],{"class":139,"line":494},[137,2084,2085],{"class":153},"      copyright: ",[137,2087,2088],{"class":160},"`All rights reserved ${",[137,2090,2091],{"class":149},"new",[137,2093,2094],{"class":179}," Date",[137,2096,2097],{"class":160},"().",[137,2099,2100],{"class":179},"getFullYear",[137,2102,2103],{"class":160},"()",[137,2105,2106],{"class":160},"}, ${",[137,2108,2109],{"class":378},"AUTHOR_NAME",[137,2111,2112],{"class":160},"}`",[137,2114,2012],{"class":153},[137,2116,2117,2120,2122,2124],{"class":139,"line":499},[137,2118,2119],{"class":153},"      updated: ",[137,2121,2091],{"class":149},[137,2123,2094],{"class":179},[137,2125,2126],{"class":153},"(),\n",[137,2128,2129,2132,2135],{"class":139,"line":508},[137,2130,2131],{"class":153},"      generator: ",[137,2133,2134],{"class":160},"\"Nuxt static site generation + Feed for Node.js\"",[137,2136,2012],{"class":153},[137,2138,2139],{"class":139,"line":516},[137,2140,2141],{"class":153},"      feedLinks: {\n",[137,2143,2144,2147,2149,2151],{"class":139,"line":532},[137,2145,2146],{"class":153},"        atom: ",[137,2148,2059],{"class":160},[137,2150,2030],{"class":378},[137,2152,2153],{"class":160},"}/atom`\n",[137,2155,2156],{"class":139,"line":537},[137,2157,2158],{"class":153},"      },\n",[137,2160,2161],{"class":139,"line":555},[137,2162,2163],{"class":153},"      author: {\n",[137,2165,2166,2169,2171],{"class":139,"line":577},[137,2167,2168],{"class":153},"        name: ",[137,2170,2109],{"class":378},[137,2172,2012],{"class":153},[137,2174,2175],{"class":139,"line":583},[137,2176,2177],{"class":153},"      }\n",[137,2179,2180],{"class":139,"line":588},[137,2181,2182],{"class":153},"    });\n",[137,2184,2185],{"class":139,"line":604},[137,2186,167],{"emptyLinePlaceholder":78},[137,2188,2189,2191,2194,2196,2199,2202,2205,2208],{"class":139,"line":632},[137,2190,1987],{"class":149},[137,2192,2193],{"class":378}," articles",[137,2195,421],{"class":149},[137,2197,2198],{"class":149}," await",[137,2200,2201],{"class":179}," serverQueryContent",[137,2203,2204],{"class":153},"(event).",[137,2206,2207],{"class":179},"find",[137,2209,719],{"class":153},[137,2211,2212],{"class":139,"line":637},[137,2213,167],{"emptyLinePlaceholder":78},[137,2215,2216,2219,2222,2225,2228,2230,2232],{"class":139,"line":642},[137,2217,2218],{"class":153},"    articles.",[137,2220,2221],{"class":179},"forEach",[137,2223,2224],{"class":153},"((",[137,2226,2227],{"class":427},"article",[137,2229,431],{"class":153},[137,2231,186],{"class":149},[137,2233,189],{"class":153},[137,2235,2236,2239,2242],{"class":139,"line":658},[137,2237,2238],{"class":153},"      feed.",[137,2240,2241],{"class":179},"addItem",[137,2243,2001],{"class":153},[137,2245,2246,2249,2252,2255,2258,2261],{"class":139,"line":675},[137,2247,2248],{"class":153},"        title: article.title ",[137,2250,2251],{"class":149},"?",[137,2253,2254],{"class":153}," article.title ",[137,2256,2257],{"class":149},":",[137,2259,2260],{"class":160}," \"Missing Title\"",[137,2262,2012],{"class":153},[137,2264,2265],{"class":139,"line":680},[137,2266,2267],{"class":153},"        id: article._path,\n",[137,2269,2270,2273,2275,2277,2280,2282,2284,2287,2289],{"class":139,"line":685},[137,2271,2272],{"class":153},"        link: ",[137,2274,2059],{"class":160},[137,2276,2030],{"class":378},[137,2278,2279],{"class":160},"}${",[137,2281,2227],{"class":153},[137,2283,1211],{"class":160},[137,2285,2286],{"class":153},"_path",[137,2288,2112],{"class":160},[137,2290,2012],{"class":153},[137,2292,2293],{"class":139,"line":701},[137,2294,2295],{"class":153},"        description: article.description,\n",[137,2297,2298],{"class":139,"line":711},[137,2299,2300],{"class":153},"        author: [\n",[137,2302,2303],{"class":139,"line":722},[137,2304,2305],{"class":153},"          {\n",[137,2307,2308,2311,2313],{"class":139,"line":727},[137,2309,2310],{"class":153},"            name: ",[137,2312,2109],{"class":378},[137,2314,2012],{"class":153},[137,2316,2317],{"class":139,"line":736},[137,2318,2319],{"class":153},"          },\n",[137,2321,2322],{"class":139,"line":755},[137,2323,2324],{"class":153},"        ],\n",[137,2326,2327,2330,2332,2334],{"class":139,"line":761},[137,2328,2329],{"class":153},"        date: ",[137,2331,2091],{"class":149},[137,2333,2094],{"class":179},[137,2335,2336],{"class":153},"(article.date),\n",[137,2338,2339,2342,2344,2347,2349,2352,2354,2356,2359,2361,2364],{"class":139,"line":772},[137,2340,2341],{"class":153},"        image: article.cover_image ",[137,2343,2251],{"class":149},[137,2345,2346],{"class":160}," `${",[137,2348,2030],{"class":378},[137,2350,2351],{"class":160},"}/${",[137,2353,2227],{"class":153},[137,2355,1211],{"class":160},[137,2357,2358],{"class":153},"cover_image",[137,2360,2112],{"class":160},[137,2362,2363],{"class":149}," :",[137,2365,2366],{"class":378}," undefined\n",[137,2368,2369],{"class":139,"line":782},[137,2370,2371],{"class":153},"      });\n",[137,2373,2374],{"class":139,"line":792},[137,2375,2182],{"class":153},[137,2377,2378],{"class":139,"line":797},[137,2379,167],{"emptyLinePlaceholder":78},[137,2381,2382,2385,2388,2391],{"class":139,"line":808},[137,2383,2384],{"class":149},"    return",[137,2386,2387],{"class":153}," feed.",[137,2389,2390],{"class":179},"atom1",[137,2392,719],{"class":153},[137,2394,2395],{"class":139,"line":813},[137,2396,843],{"class":153},[11,2398,2399,2400,2403,2404,2407,2408,2411,2412,2415],{},"And that's just about it! Except, if you are statically generating your website with the ",[99,2401,2402],{},"nuxt generate"," command, you will need to configure this server-side route to be pre-rendered on site generation.  This is as simple as adding a ",[99,2405,2406],{},"nitro"," ",[99,2409,2410],{},"prerender"," definition in your ",[99,2413,2414],{},"nuxt.config.ts"," file, like so:",[129,2417,2419],{"className":1888,"code":2418,"language":1890,"meta":66,"style":66},"nitro: {\n  prerender: {\n    routes: ['/atom']\n  }\n}\n",[99,2420,2421,2428,2435,2449,2453],{"__ignoreMap":66},[137,2422,2423,2425],{"class":139,"line":140},[137,2424,2406],{"class":179},[137,2426,2427],{"class":153},": {\n",[137,2429,2430,2433],{"class":139,"line":67},[137,2431,2432],{"class":179},"  prerender",[137,2434,2427],{"class":153},[137,2436,2437,2440,2443,2446],{"class":139,"line":164},[137,2438,2439],{"class":179},"    routes",[137,2441,2442],{"class":153},": [",[137,2444,2445],{"class":160},"'/atom'",[137,2447,2448],{"class":153},"]\n",[137,2450,2451],{"class":139,"line":170},[137,2452,221],{"class":153},[137,2454,2455],{"class":139,"line":192},[137,2456,2457],{"class":153},"}\n",[15,2459,2461],{"id":2460},"bonus","Bonus",[11,2463,2464,2465,2468],{},"You may also be interested in adding a ",[99,2466,2467],{},"sitemap.xml"," to your website. This can be done in almost an identical fashion!",[11,2470,2471],{},"Install the dependency:",[129,2473,2475],{"className":1840,"code":2474,"language":1842,"meta":66,"style":66},"npm i -D sitemap\n",[99,2476,2477],{"__ignoreMap":66},[137,2478,2479,2481,2483,2485],{"class":139,"line":140},[137,2480,1849],{"class":179},[137,2482,1852],{"class":160},[137,2484,1855],{"class":378},[137,2486,2487],{"class":160}," sitemap\n",[11,2489,2490,2491,2257],{},"Create a route at ",[99,2492,2493],{},"server/routes/sitemap.xml.ts",[129,2495,2497],{"className":1888,"code":2496,"language":1890,"meta":66,"style":66},"import { serverQueryContent } from '#content/server';\nimport { SitemapStream, streamToPromise } from 'sitemap';\n\nexport default defineEventHandler(async (event) => {\n    const articles = await serverQueryContent(event).find();\n\n    const sitemap = new SitemapStream({ hostname: 'https://my-website.com/' });\n\n    // Add non nuxt content endpoints here\n    sitemap.write({ url: '/' });\n    sitemap.write({ url: '/articles' });\n\n    // Dynamically generate routes for Nuxt markdown content\n    articles.forEach((article) => sitemap.write({ url: article._path, changefreq: 'monthly' }));\n    sitemap.end();\n\n    return (await streamToPromise(sitemap));\n});\n",[99,2498,2499,2511,2525,2529,2551,2569,2573,2596,2600,2605,2621,2634,2638,2643,2671,2680,2684,2699],{"__ignoreMap":66},[137,2500,2501,2503,2505,2507,2509],{"class":139,"line":140},[137,2502,150],{"class":149},[137,2504,1899],{"class":153},[137,2506,157],{"class":149},[137,2508,1904],{"class":160},[137,2510,529],{"class":153},[137,2512,2513,2515,2518,2520,2523],{"class":139,"line":67},[137,2514,150],{"class":149},[137,2516,2517],{"class":153}," { SitemapStream, streamToPromise } ",[137,2519,157],{"class":149},[137,2521,2522],{"class":160}," 'sitemap'",[137,2524,529],{"class":153},[137,2526,2527],{"class":139,"line":164},[137,2528,167],{"emptyLinePlaceholder":78},[137,2530,2531,2533,2535,2537,2539,2541,2543,2545,2547,2549],{"class":139,"line":170},[137,2532,173],{"class":149},[137,2534,176],{"class":149},[137,2536,1962],{"class":179},[137,2538,455],{"class":153},[137,2540,1967],{"class":149},[137,2542,424],{"class":153},[137,2544,1972],{"class":427},[137,2546,431],{"class":153},[137,2548,186],{"class":149},[137,2550,189],{"class":153},[137,2552,2553,2555,2557,2559,2561,2563,2565,2567],{"class":139,"line":192},[137,2554,1987],{"class":149},[137,2556,2193],{"class":378},[137,2558,421],{"class":149},[137,2560,2198],{"class":149},[137,2562,2201],{"class":179},[137,2564,2204],{"class":153},[137,2566,2207],{"class":179},[137,2568,719],{"class":153},[137,2570,2571],{"class":139,"line":200},[137,2572,167],{"emptyLinePlaceholder":78},[137,2574,2575,2577,2580,2582,2584,2587,2590,2593],{"class":139,"line":206},[137,2576,1987],{"class":149},[137,2578,2579],{"class":378}," sitemap",[137,2581,421],{"class":149},[137,2583,1995],{"class":149},[137,2585,2586],{"class":179}," SitemapStream",[137,2588,2589],{"class":153},"({ hostname: ",[137,2591,2592],{"class":160},"'https://my-website.com/'",[137,2594,2595],{"class":153}," });\n",[137,2597,2598],{"class":139,"line":212},[137,2599,167],{"emptyLinePlaceholder":78},[137,2601,2602],{"class":139,"line":218},[137,2603,2604],{"class":143},"    // Add non nuxt content endpoints here\n",[137,2606,2607,2610,2613,2616,2619],{"class":139,"line":224},[137,2608,2609],{"class":153},"    sitemap.",[137,2611,2612],{"class":179},"write",[137,2614,2615],{"class":153},"({ url: ",[137,2617,2618],{"class":160},"'/'",[137,2620,2595],{"class":153},[137,2622,2623,2625,2627,2629,2632],{"class":139,"line":400},[137,2624,2609],{"class":153},[137,2626,2612],{"class":179},[137,2628,2615],{"class":153},[137,2630,2631],{"class":160},"'/articles'",[137,2633,2595],{"class":153},[137,2635,2636],{"class":139,"line":412},[137,2637,167],{"emptyLinePlaceholder":78},[137,2639,2640],{"class":139,"line":438},[137,2641,2642],{"class":143},"    // Dynamically generate routes for Nuxt markdown content\n",[137,2644,2645,2647,2649,2651,2653,2655,2657,2660,2662,2665,2668],{"class":139,"line":463},[137,2646,2218],{"class":153},[137,2648,2221],{"class":179},[137,2650,2224],{"class":153},[137,2652,2227],{"class":427},[137,2654,431],{"class":153},[137,2656,186],{"class":149},[137,2658,2659],{"class":153}," sitemap.",[137,2661,2612],{"class":179},[137,2663,2664],{"class":153},"({ url: article._path, changefreq: ",[137,2666,2667],{"class":160},"'monthly'",[137,2669,2670],{"class":153}," }));\n",[137,2672,2673,2675,2678],{"class":139,"line":468},[137,2674,2609],{"class":153},[137,2676,2677],{"class":179},"end",[137,2679,719],{"class":153},[137,2681,2682],{"class":139,"line":481},[137,2683,167],{"emptyLinePlaceholder":78},[137,2685,2686,2688,2690,2693,2696],{"class":139,"line":494},[137,2687,2384],{"class":149},[137,2689,424],{"class":153},[137,2691,2692],{"class":149},"await",[137,2694,2695],{"class":179}," streamToPromise",[137,2697,2698],{"class":153},"(sitemap));\n",[137,2700,2701],{"class":139,"line":499},[137,2702,843],{"class":153},[11,2704,2705,2706,2708,2709,2257],{},"And add the ",[99,2707,2410],{}," entry in your ",[99,2710,2414],{},[129,2712,2714],{"className":1888,"code":2713,"language":1890,"meta":66,"style":66},"nitro: {\n  prerender: {\n    routes: ['/sitemap.xml', '/atom']\n  }\n}\n",[99,2715,2716,2722,2728,2743,2747],{"__ignoreMap":66},[137,2717,2718,2720],{"class":139,"line":140},[137,2719,2406],{"class":179},[137,2721,2427],{"class":153},[137,2723,2724,2726],{"class":139,"line":67},[137,2725,2432],{"class":179},[137,2727,2427],{"class":153},[137,2729,2730,2732,2734,2737,2739,2741],{"class":139,"line":164},[137,2731,2439],{"class":179},[137,2733,2442],{"class":153},[137,2735,2736],{"class":160},"'/sitemap.xml'",[137,2738,618],{"class":153},[137,2740,2445],{"class":160},[137,2742,2448],{"class":153},[137,2744,2745],{"class":139,"line":170},[137,2746,221],{"class":153},[137,2748,2749],{"class":139,"line":192},[137,2750,2457],{"class":153},[857,2752,2753],{},"html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .snl16, html code.shiki .snl16{--shiki-default:#F97583}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .s9osk, html code.shiki .s9osk{--shiki-default:#FFAB70}html pre.shiki code .sAwPA, html code.shiki .sAwPA{--shiki-default:#6A737D}",{"title":66,"searchDepth":67,"depth":67,"links":2755},[2756,2757,2758],{"id":1214,"depth":67,"text":1215},{"id":1827,"depth":67,"text":1828},{"id":2460,"depth":67,"text":2461},[73],"2024-01-06T00:00:00.000Z","If you are a user of Nuxt Content and you wish to configure an RSS feed for your website, it's a surprisingly straight forward process! In this article, we will walk through the code changes required to host an RSS feed for both a statically generated, and Universal Nuxt application.",{"draft":1173,"cover_image":2763,"excerpt":2764},"/images/nuxt-content-rss-feed.jpg",{"type":8,"value":2765},[2766],[11,2767,1801,2768,1807],{},[108,2769,1806],{"href":1804,"rel":2770},[112],"/articles/nuxt-content-rss-feed",{"title":1796,"description":2761},"articles/nuxt-content-rss-feed",[882,2775],"rss","qDNoobAycXp_w9fPqpVkFH3iDmavUdj4MzJJflIT07k",{"id":2778,"title":2779,"body":2780,"categories":3392,"date":3393,"description":3394,"extension":75,"img":76,"meta":3395,"navigation":78,"path":3401,"seo":3402,"stem":3403,"tags":3404,"__hash__":3407},"content/articles/fennel-initial-exploration.md","Impressions of Fennel with Hammerspoon",{"type":8,"value":2781,"toc":3386},[2782,2785,2805,2809,2818,2822,2839,2859,2866,2881,2998,3002,3019,3066,3104,3111,3282,3353,3360,3364,3367,3376,3383],[11,2783,2784],{},"A while back I read an introductory book on Lisp programming titled, \"The Little\nSchemer\". This book opened my mind to new (to me) programming paradigms, and left me\nwith a strong desire to find a way to incorporate Lisp programming into my every day\nlife. It took some time, but I believe I've found what I've been looking for: Fennel.",[11,2786,2787,2788,2793,2794,2799,2800,1211],{},"The ",[108,2789,2792],{"href":2790,"rel":2791},"https://fennel-lang.org/",[112],"Fennel"," programming language is a dialect of Lisp that boasts compatibility with\nLua, and it just so happens that two of my favorite applications are configured with\nexactly that language: ",[108,2795,2798],{"href":2796,"rel":2797},"https://www.hammerspoon.org/",[112],"Hammerspoon",", and ",[108,2801,2804],{"href":2802,"rel":2803},"https://neovim.io/",[112],"Neovim",[15,2806,2808],{"id":2807},"initial-observations","Initial Observations",[11,2810,2811,2812,2817],{},"To initially explore Fennel, I wanted to start small. My Hammerspoon configuration\nconsists of 7 ",[108,2813,2816],{"href":2814,"rel":2815},"https://github.com/cmpadden/dotfiles/tree/795749fa17e1310bb001bb7deaa22be8689f0027/hammerspoon/.hammerspoon/modules",[112],"modules"," that I use for operations such as: launching applications,\nmanaging windows, keeping my computer from going to sleep, and general operating system\nautomation. So the plan is to translate these modules into Fennel, while maintaining\nwithout breaking the existing functionality. However, at this point, I wasn't even sure\nhow to embed Fennel into my project...",[15,2819,2821],{"id":2820},"integrating-fennel-with-hammerspoon","Integrating Fennel with Hammerspoon",[11,2823,2824,2825,2830,2831,2834,2835,2838],{},"While official documentation exists describing how to ",[108,2826,2829],{"href":2827,"rel":2828},"https://fennel-lang.org/setup#embedding-fennel",[112],"embed fennel"," into your\nproject; it didn't provide me with enough clarity to know my next steps on integrating\nit with Hammerspoon. I found a few resources online demonstrating how to extend the\n",[99,2832,2833],{},"package.path"," and ",[99,2836,2837],{},"package.cpath"," properties in Lua, but I was unable to get this to\nwork.",[33,2840,2841,2847,2853],{},[36,2842,2843],{},[108,2844,2845],{"href":2845,"rel":2846},"https://blog.exupero.org/hammerspoon-with-fennel/",[112],[36,2848,2849],{},[108,2850,2851],{"href":2851,"rel":2852},"https://github.com/Hammerspoon/hammerspoon/issues/2377#issuecomment-636331435",[112],[36,2854,2855],{},[108,2856,2857],{"href":2857,"rel":2858},"https://github.com/agzam/spacehammer/blob/master/init.lua",[112],[11,2860,2861,2862,2865],{},"Ultimately, I opted to include the ",[99,2863,2864],{},"fennel.lua"," file to my Hammerspoon configuration,\nand while not ideal, it does make the configuration nicely self-contained. I'll leave it\nas a future task to include the module installed with LuaRocks.",[11,2867,2868,2869,2872,2873,2876,2877,2880],{},"With Fennel now included in my Hammerspoon configuration, all I need to do is configure\nthe ",[99,2870,2871],{},"fennel.path"," to point to the ",[99,2874,2875],{},"*.fnl"," files in the ",[99,2878,2879],{},".hammerspoon/"," directory, and\nttranslating these modules can begin!",[129,2882,2886],{"className":2883,"code":2884,"language":2885,"meta":66,"style":66},"language-lua shiki shiki-themes github-dark","-- init.lua\n\nlocal fennel = require('fennel')\n\nfennel.path = package.path .. \";\" .. os.getenv(\"HOME\") .. \"/.hammerspoon/?.fnl\"\n\ntable.insert(package.loaders or package.searchers, fennel.searcher)\n\nrequire 'main'\n","lua",[99,2887,2888,2893,2897,2918,2922,2958,2962,2986,2990],{"__ignoreMap":66},[137,2889,2890],{"class":139,"line":140},[137,2891,2892],{"class":143},"-- init.lua\n",[137,2894,2895],{"class":139,"line":67},[137,2896,167],{"emptyLinePlaceholder":78},[137,2898,2899,2902,2905,2907,2910,2912,2915],{"class":139,"line":164},[137,2900,2901],{"class":149},"local",[137,2903,2904],{"class":153}," fennel ",[137,2906,312],{"class":149},[137,2908,2909],{"class":378}," require",[137,2911,455],{"class":153},[137,2913,2914],{"class":160},"'fennel'",[137,2916,2917],{"class":153},")\n",[137,2919,2920],{"class":139,"line":170},[137,2921,167],{"emptyLinePlaceholder":78},[137,2923,2924,2927,2929,2931,2934,2937,2940,2943,2946,2948,2951,2953,2955],{"class":139,"line":192},[137,2925,2926],{"class":153},"fennel.",[137,2928,245],{"class":179},[137,2930,421],{"class":149},[137,2932,2933],{"class":378}," package.path",[137,2935,2936],{"class":149}," ..",[137,2938,2939],{"class":160}," \";\" ",[137,2941,2942],{"class":149},"..",[137,2944,2945],{"class":378}," os.getenv",[137,2947,455],{"class":153},[137,2949,2950],{"class":160},"\"HOME\"",[137,2952,431],{"class":153},[137,2954,2942],{"class":149},[137,2956,2957],{"class":160}," \"/.hammerspoon/?.fnl\"\n",[137,2959,2960],{"class":139,"line":200},[137,2961,167],{"emptyLinePlaceholder":78},[137,2963,2964,2967,2969,2972,2975,2978,2981,2984],{"class":139,"line":206},[137,2965,2966],{"class":378},"table.insert",[137,2968,455],{"class":153},[137,2970,2971],{"class":378},"package.loaders",[137,2973,2974],{"class":149}," or",[137,2976,2977],{"class":378}," package.searchers",[137,2979,2980],{"class":153},", fennel.",[137,2982,2983],{"class":179},"searcher",[137,2985,2917],{"class":153},[137,2987,2988],{"class":139,"line":212},[137,2989,167],{"emptyLinePlaceholder":78},[137,2991,2992,2995],{"class":139,"line":218},[137,2993,2994],{"class":378},"require",[137,2996,2997],{"class":160}," 'main'\n",[15,2999,3001],{"id":3000},"translating-lua-to-fennel","Translating Lua to Fennel",[11,3003,3004,3005,3010,3011,3014,3015,3018],{},"As a Fennel novice, I was happy to see that the Fennel project provides an online\ncross-compiler for Lua and Fennel called ",[108,3006,3009],{"href":3007,"rel":3008},"https://fennel-lang.org/see",[112],"anti-fennel",", and while it can generate some\nstrange-looking Fennel code, it was an extremely useful tool for me to get\nup-and-running right away. For example, by pasting the simple ",[99,3012,3013],{},"sleep"," function\nfrom the ",[99,3016,3017],{},"helpers"," module into the compiler:",[129,3020,3022],{"className":2883,"code":3021,"language":2885,"meta":66,"style":66},"function sleep(ms)\n    os.execute(\"sleep \" .. tonumber(ms) / 1000)\nend\n",[99,3023,3024,3035,3061],{"__ignoreMap":66},[137,3025,3026,3029,3032],{"class":139,"line":140},[137,3027,3028],{"class":149},"function",[137,3030,3031],{"class":179}," sleep",[137,3033,3034],{"class":153},"(ms)\n",[137,3036,3037,3040,3042,3045,3047,3050,3053,3056,3059],{"class":139,"line":67},[137,3038,3039],{"class":378},"    os.execute",[137,3041,455],{"class":153},[137,3043,3044],{"class":160},"\"sleep \" ",[137,3046,2942],{"class":149},[137,3048,3049],{"class":378}," tonumber",[137,3051,3052],{"class":153},"(ms) ",[137,3054,3055],{"class":149},"/",[137,3057,3058],{"class":378}," 1000",[137,3060,2917],{"class":153},[137,3062,3063],{"class":139,"line":164},[137,3064,3065],{"class":149},"end\n",[129,3067,3071],{"className":3068,"code":3069,"language":3070,"meta":66,"style":66},"language-lisp shiki shiki-themes github-dark","(fn sleep [ms]\n  (os.execute (.. \"sleep \" (/ (tonumber ms) 1000))))\n","lisp",[99,3072,3073,3083],{"__ignoreMap":66},[137,3074,3075,3078,3080],{"class":139,"line":140},[137,3076,3077],{"class":153},"(fn ",[137,3079,3013],{"class":378},[137,3081,3082],{"class":153}," [ms]\n",[137,3084,3085,3088,3091,3093,3095,3098,3101],{"class":139,"line":67},[137,3086,3087],{"class":153},"  (os.execute (.. ",[137,3089,3090],{"class":160},"\"sleep \"",[137,3092,424],{"class":153},[137,3094,3055],{"class":378},[137,3096,3097],{"class":153}," (tonumber ms) ",[137,3099,3100],{"class":378},"1000",[137,3102,3103],{"class":153},"))))\n",[11,3105,3106,3107,3110],{},"As another example, here is the output for my ",[56,3108,3109],{},"caffeine"," toggle:",[129,3112,3114],{"className":2883,"code":3113,"language":2885,"meta":66,"style":66},"hs.hotkey.bind(HYPER, \"0\", function()\n  hs.caffeinate.toggle(\"displayIdle\")\n  if hs.caffeinate.get(\"displayIdle\") then\n    helpers:show(\"Caffeine Enabled\", nil, helpers.styles.success, helpers.assets.check)\n  else\n    helpers:show(\"Caffeine Disabled\", nil, helpers.styles.error, helpers.assets.ban)\n  end\nend)\n",[99,3115,3116,3142,3162,3186,3229,3234,3271,3276],{"__ignoreMap":66},[137,3117,3118,3121,3124,3126,3129,3132,3135,3137,3139],{"class":139,"line":140},[137,3119,3120],{"class":153},"hs.",[137,3122,3123],{"class":179},"hotkey",[137,3125,1211],{"class":153},[137,3127,3128],{"class":378},"bind",[137,3130,3131],{"class":153},"(HYPER, ",[137,3133,3134],{"class":160},"\"0\"",[137,3136,618],{"class":153},[137,3138,3028],{"class":149},[137,3140,3141],{"class":153},"()\n",[137,3143,3144,3147,3150,3152,3155,3157,3160],{"class":139,"line":67},[137,3145,3146],{"class":153},"  hs.",[137,3148,3149],{"class":179},"caffeinate",[137,3151,1211],{"class":153},[137,3153,3154],{"class":378},"toggle",[137,3156,455],{"class":153},[137,3158,3159],{"class":160},"\"displayIdle\"",[137,3161,2917],{"class":153},[137,3163,3164,3167,3170,3172,3174,3177,3179,3181,3183],{"class":139,"line":164},[137,3165,3166],{"class":149},"  if",[137,3168,3169],{"class":153}," hs.",[137,3171,3149],{"class":179},[137,3173,1211],{"class":153},[137,3175,3176],{"class":378},"get",[137,3178,455],{"class":153},[137,3180,3159],{"class":160},[137,3182,431],{"class":153},[137,3184,3185],{"class":149},"then\n",[137,3187,3188,3191,3193,3196,3198,3201,3203,3206,3209,3212,3214,3217,3219,3222,3224,3227],{"class":139,"line":170},[137,3189,3190],{"class":179},"    helpers",[137,3192,2257],{"class":153},[137,3194,3195],{"class":378},"show",[137,3197,455],{"class":153},[137,3199,3200],{"class":160},"\"Caffeine Enabled\"",[137,3202,618],{"class":153},[137,3204,3205],{"class":378},"nil",[137,3207,3208],{"class":153},", helpers.",[137,3210,3211],{"class":179},"styles",[137,3213,1211],{"class":153},[137,3215,3216],{"class":179},"success",[137,3218,3208],{"class":153},[137,3220,3221],{"class":179},"assets",[137,3223,1211],{"class":153},[137,3225,3226],{"class":179},"check",[137,3228,2917],{"class":153},[137,3230,3231],{"class":139,"line":192},[137,3232,3233],{"class":149},"  else\n",[137,3235,3236,3238,3240,3242,3244,3247,3249,3251,3253,3255,3257,3260,3262,3264,3266,3269],{"class":139,"line":200},[137,3237,3190],{"class":179},[137,3239,2257],{"class":153},[137,3241,3195],{"class":378},[137,3243,455],{"class":153},[137,3245,3246],{"class":160},"\"Caffeine Disabled\"",[137,3248,618],{"class":153},[137,3250,3205],{"class":378},[137,3252,3208],{"class":153},[137,3254,3211],{"class":179},[137,3256,1211],{"class":153},[137,3258,3259],{"class":179},"error",[137,3261,3208],{"class":153},[137,3263,3221],{"class":179},[137,3265,1211],{"class":153},[137,3267,3268],{"class":179},"ban",[137,3270,2917],{"class":153},[137,3272,3273],{"class":139,"line":206},[137,3274,3275],{"class":149},"  end\n",[137,3277,3278,3280],{"class":139,"line":212},[137,3279,2677],{"class":149},[137,3281,2917],{"class":153},[129,3283,3285],{"className":3068,"code":3284,"language":3070,"meta":66,"style":66},"(hs.hotkey.bind HYPER :0\n  (fn [] (hs.caffeinate.toggle :displayIdle)\n    (if (hs.caffeinate.get :displayIdle)\n      (helpers:show \"Caffeine Enabled\" nil helpers.styles.success helpers.assets.check)\n      (helpers:show \"Caffeine Disabled\" nil helpers.styles.error helpers.assets.ban)))) \n",[99,3286,3287,3295,3305,3320,3338],{"__ignoreMap":66},[137,3288,3289,3292],{"class":139,"line":140},[137,3290,3291],{"class":153},"(hs.hotkey.bind HYPER ",[137,3293,3294],{"class":179},":0\n",[137,3296,3297,3300,3303],{"class":139,"line":67},[137,3298,3299],{"class":153},"  (fn [] (hs.caffeinate.toggle ",[137,3301,3302],{"class":179},":displayIdle",[137,3304,2917],{"class":153},[137,3306,3307,3310,3313,3316,3318],{"class":139,"line":164},[137,3308,3309],{"class":153},"    (",[137,3311,3312],{"class":149},"if",[137,3314,3315],{"class":153}," (hs.caffeinate.get ",[137,3317,3302],{"class":179},[137,3319,2917],{"class":153},[137,3321,3322,3325,3327,3330,3332,3335],{"class":139,"line":170},[137,3323,3324],{"class":153},"      (",[137,3326,3017],{"class":378},[137,3328,3329],{"class":153},":show ",[137,3331,3200],{"class":160},[137,3333,3334],{"class":378}," nil",[137,3336,3337],{"class":153}," helpers.styles.success helpers.assets.check)\n",[137,3339,3340,3342,3344,3346,3348,3350],{"class":139,"line":192},[137,3341,3324],{"class":153},[137,3343,3017],{"class":378},[137,3345,3329],{"class":153},[137,3347,3246],{"class":160},[137,3349,3334],{"class":378},[137,3351,3352],{"class":153}," helpers.styles.error helpers.assets.ban))))\n",[11,3354,3355,3356,3359],{},"This was especially helpful for more gnarly modules like the ",[99,3357,3358],{},"window"," module used for\nwindow management, and seeing the Lua and Fennel code side-by-side was a kick starter in\nlearning the language!",[15,3361,3363],{"id":3362},"next-steps","Next Steps",[11,3365,3366],{},"While my Fennel Hammerspoon configuration now works with parity to its Lua counterpart,\nI have not yet added new features or modules. I look forward to writing new Fennel code,\nand deepen my understanding of Lisp and the Fennel programming language.",[11,3368,3369,3370,3375],{},"Additionally, before beginning this endeavor, I was already aware of projects like\n",[108,3371,3374],{"href":3372,"rel":3373},"https://github.com/agzam/spacehammer",[112],"spacehammer","; a wildly impressive Hammerspoon configuration written in Fennel, but,\nI wanted to start small and learn the integration myself. However, with the basics out\nof the way, I hope to explore this project further, and seek lessons-learned for the\nconfiguration of my own.",[11,3377,3378,3379],{},"The full pull-request for translating my Lua Hammerspoon configuration to Fennel can be\nfound here: ",[108,3380,3381],{"href":3381,"rel":3382},"https://github.com/cmpadden/dotfiles/pull/19/files",[112],[857,3384,3385],{},"html pre.shiki code .sAwPA, html code.shiki .sAwPA{--shiki-default:#6A737D}html pre.shiki code .snl16, html code.shiki .snl16{--shiki-default:#F97583}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":66,"searchDepth":67,"depth":67,"links":3387},[3388,3389,3390,3391],{"id":2807,"depth":67,"text":2808},{"id":2820,"depth":67,"text":2821},{"id":3000,"depth":67,"text":3001},{"id":3362,"depth":67,"text":3363},[3070],"2023-10-22T00:00:00.000Z","A while back I read an introductory book on Lisp programming titled, \"The Little\\nSchemer\". This book opened my mind to new (to me) programming paradigms, and left me\\nwith a strong desire to find a way to incorporate Lisp programming into my every day\\nlife. It took some time, but I believe I've found what I've been looking for: Fennel.",{"draft":1173,"cover_image":3396,"excerpt":3397},"/images/dall-e-fennel-hammer.jpeg",{"type":8,"value":3398},[3399],[11,3400,2784],{},"/articles/fennel-initial-exploration",{"title":2779,"description":2784},"articles/fennel-initial-exploration",[3070,3405,3406],"hammerspoon","fennel","oPz--_lu8lNLkeWFcwl8qfqIibgx5S8KVG_y_486EKY",{"id":3409,"title":3410,"body":3411,"categories":3792,"date":3794,"description":3795,"extension":75,"img":76,"meta":3796,"navigation":78,"path":3805,"seo":3806,"stem":3808,"tags":3809,"__hash__":3811},"content/articles/doctl.md","Exploring the Digital Ocean `doctl` Utility",{"type":8,"value":3412,"toc":3790},[3413,3424,3430,3468,3480,3501,3504,3547,3550,3605,3612,3642,3649,3668,3671,3743,3746,3763,3784,3787],[11,3414,3415,3416,3419,3420,3423],{},"I recently had the need to spool up a small ephemeral Linux instance, and wanted to try something new by exploring the Digital Ocean ",[99,3417,3418],{},"doctl"," command line utility.\nThis proved to be an ",[56,3421,3422],{},"extremely"," easy way to configure, create, connect, and destroy a Linux box, and I foresee myself using this service even more in the future.",[11,3425,3426,3427,1211],{},"To start things off, I had to install and setup authentication to Digital Ocean. Doing\nthis on my Mac machine, I opted to use ",[108,3428,925],{"href":923,"rel":3429},[112],[129,3431,3433],{"className":929,"code":3432,"language":931,"meta":66,"style":66},"# install `doctl`\nbrew install doctl\n\n# setup authentication\ndoctl auth init\n",[99,3434,3435,3440,3449,3453,3458],{"__ignoreMap":66},[137,3436,3437],{"class":139,"line":140},[137,3438,3439],{"class":143},"# install `doctl`\n",[137,3441,3442,3444,3446],{"class":139,"line":67},[137,3443,1323],{"class":179},[137,3445,944],{"class":160},[137,3447,3448],{"class":160}," doctl\n",[137,3450,3451],{"class":139,"line":164},[137,3452,167],{"emptyLinePlaceholder":78},[137,3454,3455],{"class":139,"line":170},[137,3456,3457],{"class":143},"# setup authentication\n",[137,3459,3460,3462,3465],{"class":139,"line":192},[137,3461,3418],{"class":179},[137,3463,3464],{"class":160}," auth",[137,3466,3467],{"class":160}," init\n",[11,3469,3470,3471,3476,3477,1211],{},"While the online ",[108,3472,3475],{"href":3473,"rel":3474},"https://docs.digitalocean.com/reference/doctl/reference/compute/droplet/create/",[112],"documentation"," is fantastic, I instead found myself mostly referencing the outputs of ",[99,3478,3479],{},"--help",[129,3481,3483],{"className":929,"code":3482,"language":931,"meta":66,"style":66},"doctl compute droplet create --help\n",[99,3484,3485],{"__ignoreMap":66},[137,3486,3487,3489,3492,3495,3498],{"class":139,"line":140},[137,3488,3418],{"class":179},[137,3490,3491],{"class":160}," compute",[137,3493,3494],{"class":160}," droplet",[137,3496,3497],{"class":160}," create",[137,3499,3500],{"class":378}," --help\n",[11,3502,3503],{},"I had to find the image name of the version of Ubuntu I wanted to install:",[129,3505,3507],{"className":929,"code":3506,"language":931,"meta":66,"style":66},"doctl compute image list --public | grep ubuntu-22\n\n# 118857366    22.04 (LTS) x64    snapshot    Ubuntu    ubuntu-22-04-x64    true    7\n# 119383150    22.10 x64          snapshot    Ubuntu    ubuntu-22-10-x64    true    7\n",[99,3508,3509,3533,3537,3542],{"__ignoreMap":66},[137,3510,3511,3513,3515,3518,3521,3524,3527,3530],{"class":139,"line":140},[137,3512,3418],{"class":179},[137,3514,3491],{"class":160},[137,3516,3517],{"class":160}," image",[137,3519,3520],{"class":160}," list",[137,3522,3523],{"class":378}," --public",[137,3525,3526],{"class":149}," |",[137,3528,3529],{"class":179}," grep",[137,3531,3532],{"class":160}," ubuntu-22\n",[137,3534,3535],{"class":139,"line":67},[137,3536,167],{"emptyLinePlaceholder":78},[137,3538,3539],{"class":139,"line":164},[137,3540,3541],{"class":143},"# 118857366    22.04 (LTS) x64    snapshot    Ubuntu    ubuntu-22-04-x64    true    7\n",[137,3543,3544],{"class":139,"line":170},[137,3545,3546],{"class":143},"# 119383150    22.10 x64          snapshot    Ubuntu    ubuntu-22-10-x64    true    7\n",[11,3548,3549],{},"And also the slug of the compute size:",[129,3551,3553],{"className":929,"code":3552,"language":931,"meta":66,"style":66},"doctl compute size list\n\n# Slug                  Description    Memory    VCPUs    Disk    Price Monthly    Price Hourly\n# s-1vcpu-512mb-10gb    Basic          512       1        10      4.00             0.005950\n# s-1vcpu-1gb           Basic          1024      1        25      6.00             0.008930\n# s-1vcpu-1gb-amd       Basic AMD      1024      1        25      7.00             0.010420\n# s-1vcpu-1gb-intel     Basic Intel    1024      1        25      7.00             0.010420\n# s-1vcpu-2gb           Basic          2048      1        50      12.00            0.017860\n# s-1vcpu-2gb-amd       Basic AMD      2048      1        50      14.00            0.020830\n",[99,3554,3555,3566,3570,3575,3580,3585,3590,3595,3600],{"__ignoreMap":66},[137,3556,3557,3559,3561,3564],{"class":139,"line":140},[137,3558,3418],{"class":179},[137,3560,3491],{"class":160},[137,3562,3563],{"class":160}," size",[137,3565,968],{"class":160},[137,3567,3568],{"class":139,"line":67},[137,3569,167],{"emptyLinePlaceholder":78},[137,3571,3572],{"class":139,"line":164},[137,3573,3574],{"class":143},"# Slug                  Description    Memory    VCPUs    Disk    Price Monthly    Price Hourly\n",[137,3576,3577],{"class":139,"line":170},[137,3578,3579],{"class":143},"# s-1vcpu-512mb-10gb    Basic          512       1        10      4.00             0.005950\n",[137,3581,3582],{"class":139,"line":192},[137,3583,3584],{"class":143},"# s-1vcpu-1gb           Basic          1024      1        25      6.00             0.008930\n",[137,3586,3587],{"class":139,"line":200},[137,3588,3589],{"class":143},"# s-1vcpu-1gb-amd       Basic AMD      1024      1        25      7.00             0.010420\n",[137,3591,3592],{"class":139,"line":206},[137,3593,3594],{"class":143},"# s-1vcpu-1gb-intel     Basic Intel    1024      1        25      7.00             0.010420\n",[137,3596,3597],{"class":139,"line":212},[137,3598,3599],{"class":143},"# s-1vcpu-2gb           Basic          2048      1        50      12.00            0.017860\n",[137,3601,3602],{"class":139,"line":218},[137,3603,3604],{"class":143},"# s-1vcpu-2gb-amd       Basic AMD      2048      1        50      14.00            0.020830\n",[11,3606,3607,3608,3611],{},"I've also configured a few SSH keys with Digital Ocean, and I can have the key (specified by ID) provisioned to the machine using the ",[99,3609,3610],{},"--ssh-keys"," flag.",[129,3613,3615],{"className":929,"code":3614,"language":931,"meta":66,"style":66},"doctl compute ssh-key list\n\n# ID      Name    FingerPrint\n# 1234    mini    \u003Credacted>\n",[99,3616,3617,3628,3632,3637],{"__ignoreMap":66},[137,3618,3619,3621,3623,3626],{"class":139,"line":140},[137,3620,3418],{"class":179},[137,3622,3491],{"class":160},[137,3624,3625],{"class":160}," ssh-key",[137,3627,968],{"class":160},[137,3629,3630],{"class":139,"line":67},[137,3631,167],{"emptyLinePlaceholder":78},[137,3633,3634],{"class":139,"line":164},[137,3635,3636],{"class":143},"# ID      Name    FingerPrint\n",[137,3638,3639],{"class":139,"line":170},[137,3640,3641],{"class":143},"# 1234    mini    \u003Credacted>\n",[11,3643,3644,3645,3648],{},"Also, I wanted to install a few packages to the box upon creation, this can be done easily with the ",[99,3646,3647],{},"--user-data-file"," flag to run an initialization script.",[129,3650,3652],{"className":929,"code":3651,"language":931,"meta":66,"style":66},"echo 'apt install -y imagemagick zip' > bootstrap.sh\n",[99,3653,3654],{"__ignoreMap":66},[137,3655,3656,3659,3662,3665],{"class":139,"line":140},[137,3657,3658],{"class":378},"echo",[137,3660,3661],{"class":160}," 'apt install -y imagemagick zip'",[137,3663,3664],{"class":149}," >",[137,3666,3667],{"class":160}," bootstrap.sh\n",[11,3669,3670],{},"Putting it all together, here is the simple command for creating a small compute instance!",[129,3672,3674],{"className":929,"code":3673,"language":931,"meta":66,"style":66},"doctl compute droplet create \\\n    --image ubuntu-22-10-x64 \\\n    --size s-1vcpu-512mb-10gb \\\n    --region nyc1 \\\n    --ssh-keys 1234 \\\n    --user-data-file boostrap.sh \\\n    ephemeral\n",[99,3675,3676,3688,3698,3708,3718,3728,3738],{"__ignoreMap":66},[137,3677,3678,3680,3682,3684,3686],{"class":139,"line":140},[137,3679,3418],{"class":179},[137,3681,3491],{"class":160},[137,3683,3494],{"class":160},[137,3685,3497],{"class":160},[137,3687,1433],{"class":378},[137,3689,3690,3693,3696],{"class":139,"line":67},[137,3691,3692],{"class":378},"    --image",[137,3694,3695],{"class":160}," ubuntu-22-10-x64",[137,3697,1433],{"class":378},[137,3699,3700,3703,3706],{"class":139,"line":164},[137,3701,3702],{"class":378},"    --size",[137,3704,3705],{"class":160}," s-1vcpu-512mb-10gb",[137,3707,1433],{"class":378},[137,3709,3710,3713,3716],{"class":139,"line":170},[137,3711,3712],{"class":378},"    --region",[137,3714,3715],{"class":160}," nyc1",[137,3717,1433],{"class":378},[137,3719,3720,3723,3726],{"class":139,"line":192},[137,3721,3722],{"class":378},"    --ssh-keys",[137,3724,3725],{"class":378}," 1234",[137,3727,1433],{"class":378},[137,3729,3730,3733,3736],{"class":139,"line":200},[137,3731,3732],{"class":378},"    --user-data-file",[137,3734,3735],{"class":160}," boostrap.sh",[137,3737,1433],{"class":378},[137,3739,3740],{"class":139,"line":206},[137,3741,3742],{"class":160},"    ephemeral\n",[11,3744,3745],{},"Finally, I can connect, do my thing, and destroy the instance.",[129,3747,3749],{"className":929,"code":3748,"language":931,"meta":66,"style":66},"doctl compute ssh ephemeral\n",[99,3750,3751],{"__ignoreMap":66},[137,3752,3753,3755,3757,3760],{"class":139,"line":140},[137,3754,3418],{"class":179},[137,3756,3491],{"class":160},[137,3758,3759],{"class":160}," ssh",[137,3761,3762],{"class":160}," ephemeral\n",[129,3764,3766],{"className":929,"code":3765,"language":931,"meta":66,"style":66},"doctl compute droplet delete --force ephemeral\n",[99,3767,3768],{"__ignoreMap":66},[137,3769,3770,3772,3774,3776,3779,3782],{"class":139,"line":140},[137,3771,3418],{"class":179},[137,3773,3491],{"class":160},[137,3775,3494],{"class":160},[137,3777,3778],{"class":160}," delete",[137,3780,3781],{"class":378}," --force",[137,3783,3762],{"class":160},[11,3785,3786],{},"All-in-all, I was up and running in about 20 minutes. What a handy utility!",[857,3788,3789],{},"html pre.shiki code .sAwPA, html code.shiki .sAwPA{--shiki-default:#6A737D}html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}html pre.shiki code .snl16, html code.shiki .snl16{--shiki-default:#F97583}",{"title":66,"searchDepth":67,"depth":67,"links":3791},[],[3793],"linux","2023-01-01T00:00:00.000Z","I recently had the need to spool up a small ephemeral Linux instance, and wanted to try something new by exploring the Digital Ocean doctl command line utility.\\nThis proved to be an extremely easy way to configure, create, connect, and destroy a Linux box, and I foresee myself using this service even more in the future.",{"excerpt":3797},{"type":8,"value":3798},[3799],[11,3800,3415,3801,3419,3803,3423],{},[99,3802,3418],{},[56,3804,3422],{},"/articles/doctl",{"title":3410,"description":3807},"I recently had the need to spool up a small ephemeral Linux instance, and wanted to try something new by exploring the Digital Ocean doctl command line utility.\nThis proved to be an extremely easy way to configure, create, connect, and destroy a Linux box, and I foresee myself using this service even more in the future.","articles/doctl",[3793,3810],"digital-ocean","s2mRmcJuf2lgxN_UOEN08HFx96jppLIpQY93Gq2hI70",{"id":3813,"title":3814,"body":3815,"categories":3877,"date":3879,"description":3880,"extension":75,"img":76,"meta":3881,"navigation":78,"path":3886,"seo":3887,"stem":3888,"tags":3889,"__hash__":3890},"content/articles/nuxt-v3-migration.md","This Website Has Been Migrated to Nuxt 3 🎉",{"type":8,"value":3816,"toc":3875},[3817,3820,3829,3836,3839,3842,3872],[11,3818,3819],{},"This website has been migrated to the latest version of the Nuxt web framework, and with it comes all of the exciting goodies that the Vue and Nuxt teams have been concocting over the past few years.\nNot to mention, all of the great plugins in the Vue ecosystem!",[11,3821,3822,3823,3828],{},"If you're curious what changes were required to make the migration, you can check out ",[108,3824,3827],{"href":3825,"rel":3826},"https://github.com/cmpadden/cmpadden.github.io/pull/3",[112],"pull request #3"," in the GitHub repository.",[11,3830,3831],{},[3832,3833],"img",{"alt":3834,"src":3835},"Screenshot of Nuxt Migration Pull Request","/images/nuxt-migration-pr.png",[11,3837,3838],{},"While the documentation for making this migration is great, there were many breaking changes, and the overall process was quite tedious.\nFor this reason, I opted to generate a new project entirely, and port existing code to this clean slate.\nI believe that this resulted in a project with a bit less cruft.",[11,3840,3841],{},"The most valuable resources for making these changes include:",[33,3843,3844,3851,3858,3865],{},[36,3845,3846],{},[108,3847,3850],{"href":3848,"rel":3849},"https://nuxt.com/docs/migration/overview",[112],"The Nuxt Migration Guide",[36,3852,3853],{},[108,3854,3857],{"href":3855,"rel":3856},"https://nuxt.com/docs/getting-started/introduction",[112],"The Nuxt Framework Guide",[36,3859,3860],{},[108,3861,3864],{"href":3862,"rel":3863},"https://tailwindcss.nuxt.dev/",[112],"Nuxt Tailwind Module Documentation",[36,3866,3867],{},[108,3868,3871],{"href":3869,"rel":3870},"https://content.nuxtjs.org/",[112],"Nuxt Content Module Documentation",[11,3873,3874],{},"Part of the delay for doing this upgrade was in waiting for module developers to support this major release.\nI'm super thankful for all of the hard work they've don, and I'm excited to explore all of the new features available!\nI just hope that the breaking changes in this release don't cause too much fracturing of the community, as it does feel like déjà vu of Python 2 and 3.",{"title":66,"searchDepth":67,"depth":67,"links":3876},[],[3878],"web","2022-12-31T00:00:00.000Z","This website has been migrated to the latest version of the Nuxt web framework, and with it comes all of the exciting goodies that the Vue and Nuxt teams have been concocting over the past few years.\\nNot to mention, all of the great plugins in the Vue ecosystem!",{"excerpt":3882},{"type":8,"value":3883},[3884],[11,3885,3819],{},"/articles/nuxt-v3-migration",{"title":3814,"description":3819},"articles/nuxt-v3-migration",[882],"YT4urpJMLY7dnF-hEDs-8ouhiTam33LgSlWuMryiE0k",{"id":3892,"title":3893,"body":3894,"categories":3991,"date":3993,"description":3898,"extension":75,"img":76,"meta":3994,"navigation":78,"path":3999,"seo":4000,"stem":4001,"tags":4002,"__hash__":4005},"content/articles/migrate-truenas-from-core-to-scale.md","Migrate to TrueNAS Scale from TrueNAS Core",{"type":8,"value":3895,"toc":3989},[3896,3899,3906,3978,3981],[11,3897,3898],{},"TrueNAS Scale offers a variety of interesting features that are not supported in its TrueNAS Core counterpart. Most notably, because the base operating system is Debian Linux, opposed to FreeBSD, there is native support for Linux containers via Docker, and Kubernetes Pods! This post walks through the steps required to upgrade from TrueNAS Core to TrueNAS Scale.",[11,3900,3901,3902,3905],{},"Thankfully, the upgrade procedure to migrate from TrueNAS Core to TrueNAS Scale is relatively straight forward. All it requires is to create a bootable USB of the TrueNAS Scale image, boot the USB, and select ",[56,3903,3904],{},"Install/Upgrade"," in the installation wizard. But for the sake of being thorough, you can find instructions on how to backup system configurations and install the OS below.",[3907,3908,3909,3934,3950,3953,3966,3969],"ol",{},[36,3910,3911,3912],{},"Make a backup of your system’s configuration\n",[3907,3913,3914,3920],{},[36,3915,3916,3917],{},"Navigate to ",[99,3918,3919],{},"System > General",[36,3921,3922,3923,3926,3927,3930,3931],{},"Click ",[99,3924,3925],{},"Save Config",", check the ",[56,3928,3929],{},"Export Secret Seed"," box, and click ",[99,3932,3933],{},"Save",[36,3935,3936,3937],{},"Export dataset keys for the encrypted pools\n",[3907,3938,3939,3944],{},[36,3940,3916,3941],{},[99,3942,3943],{},"Storage > Pools",[36,3945,3946,3947],{},"Click the cog icon, and select ",[99,3948,3949],{},"Export Dataset Keys",[36,3951,3952],{},"Insert the TrueNAS Core bootable USB into the NAS",[36,3954,3955,3956,2834,3959,3962,3963],{},"From the Supermicro IPMI interface select ",[56,3957,3958],{},"Remote Control",[56,3960,3961],{},"iKVM/HTML5"," and select ",[56,3964,3965],{},"Reboot",[36,3967,3968],{},"Select the bootable USB as the boot device",[36,3970,3971,3972,3974,3975],{},"From the TrueNAS installation wizard, select ",[56,3973,3904],{},", select the drive that contains the TrueNAS installation, and select ",[56,3976,3977],{},"Upgrade Install",[11,3979,3980],{},"Reboot the device, and voila — you should be up-and-running! Give the system a quick rundown to validate that your settings and pools have transferred correctly, and then enjoy all the container goodness!",[11,3982,3983,3984,1211],{},"For a breakdown of the differences between TrueNAS Core, Enterprise, and Scale, you can reference ",[108,3985,3988],{"href":3986,"rel":3987},"https://www.truenas.com/help-me-choose/",[112],"this table",{"title":66,"searchDepth":67,"depth":67,"links":3990},[],[3992],"homelab","2021-12-28T00:00:00.000Z",{"excerpt":3995},{"type":8,"value":3996},[3997],[11,3998,3898],{},"/articles/migrate-truenas-from-core-to-scale",{"title":3893,"description":3898},"articles/migrate-truenas-from-core-to-scale",[3992,4003,4004],"supermicro","truenas","j1HfogNeGy4KIvvfH5Rg6f3HKYZF0mgSWjW1jCq9WwM",{"id":4007,"title":4008,"body":4009,"categories":4108,"date":4109,"description":4110,"extension":75,"img":76,"meta":4111,"navigation":78,"path":4116,"seo":4117,"stem":4118,"tags":4119,"__hash__":4120},"content/articles/reset-ipmi-password-from-host-os.md","Reset IPMI Credentials from the Host OS",{"type":8,"value":4010,"toc":4106},[4011,4014,4025,4032,4035,4041,4052,4058,4061,4064,4067,4073],[11,4012,4013],{},"If you ever find yourself locked out of the Intelligent Platform Management Interface (IPMI) of a server, these\ninstructions will guide your through the process of resetting the credentials to their default values from the host\noperating system.",[11,4015,4016,4017,4020,4021,4024],{},"If you are using an operating system like TrueNAS -- good news! It's possible to reset the IPMI password directly from\nthe web interface. This is done by navigating to ",[99,4018,4019],{},"Network > IPMI",", and simply entering a new value in the ",[56,4022,4023],{},"IPMI\nPassword Reset"," field.",[11,4026,4027,4028,4031],{},"If you are using some other OS that doesn't have this feature, you can achieve similar results by using the ",[99,4029,4030],{},"ipmitool","\ncommand-line utility.",[11,4033,4034],{},"First, you'll want to determine the user ID associated with the user for whom you'd like to reset the password.",[129,4036,4039],{"className":4037,"code":4038,"language":256},[254],"# ipmitool user list\nID  Name             Callin  Link Auth  IPMI Msg   Channel Priv Limit\n1                    true    false      false      Unknown (0x00)\n2   ADMIN            true    false      false      Unknown (0x00)\n",[99,4040,4038],{"__ignoreMap":66},[11,4042,4043,4044,4047,4048,4051],{},"In this case, we will be resetting the password for ",[56,4045,4046],{},"ADMIN"," who has a user ID of ",[56,4049,4050],{},"2",". Then we'll assign the new\npassword like so:",[129,4053,4056],{"className":4054,"code":4055,"language":256},[254],"# ipmitool user set password 2 \u003Cpassword>\n",[99,4057,4055],{"__ignoreMap":66},[11,4059,4060],{},"And you should be good to go!",[11,4062,4063],{},"...",[11,4065,4066],{},"Alternatively, if you'd like to factory reset the baseboard management controller (BMC), which will reset the IPMI\ncredentials to their default value, you can issue the following command.",[129,4068,4071],{"className":4069,"code":4070,"language":256},[254],"# ipmitool raw 0x3c 0x40\n",[99,4072,4070],{"__ignoreMap":66},[11,4074,4075,4076,4079,4080,4083,4084,4079,4087,4090,4091,2012,4096,4099,4100,4105],{},"Where ",[99,4077,4078],{},"0x3c"," is the ",[99,4081,4082],{},"\u003Cnetfn>"," argument, a.k.a. the network function code that defines the functional routing for\nmessages, and ",[99,4085,4086],{},"0x40",[99,4088,4089],{},"\u003Ccmd>",". According to section 5.1 of the ",[108,4092,4095],{"href":4093,"rel":4094},"https://www.intel.com/content/dam/www/public/us/en/documents/product-briefs/ipmi-second-gen-interface-spec-v2-rev1-1.pdf",[112],"IPMI interface\nspecification",[56,4097,4098],{},"netfn"," codes ranging from 0x30 to 0x3F are reserved for vendor specific functions. I searched around for some\nSupermicro references on these vendor specific network functions without much luck other than various ",[108,4101,4104],{"href":4102,"rel":4103},"https://www.supermicro.com/support/faqs/faq.cfm?faq=15448",[112],"support\nresponses"," on how to reset a device. Bummer!",{"title":66,"searchDepth":67,"depth":67,"links":4107},[],[3992],"2021-12-27T00:00:00.000Z","If you ever find yourself locked out of the Intelligent Platform Management Interface (IPMI) of a server, these\\ninstructions will guide your through the process of resetting the credentials to their default values from the host\\noperating system.",{"excerpt":4112},{"type":8,"value":4113},[4114],[11,4115,4013],{},"/articles/reset-ipmi-password-from-host-os",{"title":4008,"description":4013},"articles/reset-ipmi-password-from-host-os",[3992,4003,4004],"7QIOWn6VYhDFOAYyQYt1PYDTyYXb9epZKxhQnCi1HnI",{"id":4122,"title":4123,"body":4124,"categories":4463,"date":4464,"description":4465,"extension":75,"img":76,"meta":4466,"navigation":78,"path":4473,"seo":4474,"stem":4476,"tags":4477,"__hash__":4478},"content/articles/quick-tip-rerunning-bash-commands.md","Tip: Re-running Bash Commands",{"type":8,"value":4125,"toc":4461},[4126,4133,4179,4192,4240,4243,4258,4320,4334,4366,4372,4394,4403,4427,4440,4442,4458],[11,4127,4128,4129,4132],{},"Do you ever find yourself having to re-run a Bash command? I often find this\nhappening to myself when I neglect to use ",[99,4130,4131],{},"sudo"," for a command that requires\nroot privileges.",[129,4134,4136],{"className":1246,"code":4135,"language":1248,"meta":66,"style":66},"$ pacman -Syu\nerror: you cannot perform this operation unless you are root.\n",[99,4137,4138,4148],{"__ignoreMap":66},[137,4139,4140,4142,4145],{"class":139,"line":140},[137,4141,938],{"class":179},[137,4143,4144],{"class":160}," pacman",[137,4146,4147],{"class":378}," -Syu\n",[137,4149,4150,4153,4156,4159,4162,4165,4168,4171,4173,4176],{"class":139,"line":67},[137,4151,4152],{"class":179},"error:",[137,4154,4155],{"class":160}," you",[137,4157,4158],{"class":160}," cannot",[137,4160,4161],{"class":160}," perform",[137,4163,4164],{"class":160}," this",[137,4166,4167],{"class":160}," operation",[137,4169,4170],{"class":160}," unless",[137,4172,4155],{"class":160},[137,4174,4175],{"class":160}," are",[137,4177,4178],{"class":160}," root.\n",[11,4180,4181,4182,4185,4186,4188,4189,4191],{},"Well, I have good news for you -- you can easily re-issue a command with the\n",[99,4183,4184],{},"!!"," designator! Simply type ",[99,4187,4131],{}," followed by ",[99,4190,4184],{}," and you're good to go.",[129,4193,4195],{"className":1246,"code":4194,"language":1248,"meta":66,"style":66},"$ sudo !!\nsudo pacman -Syu\n[sudo] password for colton:\n:: Synchronizing package databases...\n",[99,4196,4197,4207,4215,4226],{"__ignoreMap":66},[137,4198,4199,4201,4204],{"class":139,"line":140},[137,4200,938],{"class":179},[137,4202,4203],{"class":160}," sudo",[137,4205,4206],{"class":160}," !!\n",[137,4208,4209,4211,4213],{"class":139,"line":67},[137,4210,4131],{"class":179},[137,4212,4144],{"class":160},[137,4214,4147],{"class":378},[137,4216,4217,4220,4223],{"class":139,"line":164},[137,4218,4219],{"class":153},"[sudo] password ",[137,4221,4222],{"class":149},"for",[137,4224,4225],{"class":153}," colton:\n",[137,4227,4228,4231,4234,4237],{"class":139,"line":170},[137,4229,4230],{"class":378},"::",[137,4232,4233],{"class":160}," Synchronizing",[137,4235,4236],{"class":160}," package",[137,4238,4239],{"class":160}," databases...\n",[11,4241,4242],{},"--",[11,4244,4245,4246,4249,4250,4253,4254,4257],{},"Commands that are prefixed with a bang, ",[99,4247,4248],{},"!",", are considered ",[56,4251,4252],{},"Event\nDesignators,"," and are references to your command-line history. You can take a\nlook at your history with the ",[99,4255,4256],{},"history"," command.",[129,4259,4261],{"className":1246,"code":4260,"language":1248,"meta":66,"style":66},"$ history\n 1021  touch hello_world.txt\n 1022  ls\n 1023  echo \"Here we go again!\"\n 1024  find . -name *.py\n",[99,4262,4263,4270,4281,4289,4300],{"__ignoreMap":66},[137,4264,4265,4267],{"class":139,"line":140},[137,4266,938],{"class":179},[137,4268,4269],{"class":160}," history\n",[137,4271,4272,4275,4278],{"class":139,"line":67},[137,4273,4274],{"class":179}," 1021",[137,4276,4277],{"class":160},"  touch",[137,4279,4280],{"class":160}," hello_world.txt\n",[137,4282,4283,4286],{"class":139,"line":164},[137,4284,4285],{"class":179}," 1022",[137,4287,4288],{"class":160},"  ls\n",[137,4290,4291,4294,4297],{"class":139,"line":170},[137,4292,4293],{"class":179}," 1023",[137,4295,4296],{"class":160},"  echo",[137,4298,4299],{"class":160}," \"Here we go again!\"\n",[137,4301,4302,4305,4308,4311,4314,4317],{"class":139,"line":192},[137,4303,4304],{"class":179}," 1024",[137,4306,4307],{"class":160},"  find",[137,4309,4310],{"class":160}," .",[137,4312,4313],{"class":378}," -name",[137,4315,4316],{"class":378}," *",[137,4318,4319],{"class":160},".py\n",[11,4321,4322,4323,4325,4326,4329,4330,4333],{},"There are many ways to use ",[99,4324,4248],{}," in your shell. For example, if you wanted to\nre-issue a specific command in your history, you could use ",[99,4327,4328],{},"!n"," where ",[99,4331,4332],{},"n"," is\nthe number next to the command in your history.",[129,4335,4337],{"className":1246,"code":4336,"language":1248,"meta":66,"style":66},"$ !1023\necho \"Here we go again!\"\nHere we go again!\n",[99,4338,4339,4346,4352],{"__ignoreMap":66},[137,4340,4341,4343],{"class":139,"line":140},[137,4342,938],{"class":179},[137,4344,4345],{"class":160}," !1023\n",[137,4347,4348,4350],{"class":139,"line":67},[137,4349,3658],{"class":378},[137,4351,4299],{"class":160},[137,4353,4354,4357,4360,4363],{"class":139,"line":164},[137,4355,4356],{"class":179},"Here",[137,4358,4359],{"class":160}," we",[137,4361,4362],{"class":160}," go",[137,4364,4365],{"class":160}," again!\n",[11,4367,4368,4369,1211],{},"Or... if you wanted to run the command you issued 4-commands ago, you can use\n",[99,4370,4371],{},"!-4",[129,4373,4375],{"className":1246,"code":4374,"language":1248,"meta":66,"style":66},"$ !-4\nls\nhello_world.txt\n",[99,4376,4377,4384,4389],{"__ignoreMap":66},[137,4378,4379,4381],{"class":139,"line":140},[137,4380,938],{"class":179},[137,4382,4383],{"class":160}," !-4\n",[137,4385,4386],{"class":139,"line":67},[137,4387,4388],{"class":179},"ls\n",[137,4390,4391],{"class":139,"line":164},[137,4392,4393],{"class":179},"hello_world.txt\n",[11,4395,4396,4397,4399,4400,1211],{},"Or... if you wanted to run the last command that started with the string\n",[56,4398,2207],{},", you can use ",[99,4401,4402],{},"!find",[129,4404,4406],{"className":1246,"code":4405,"language":1248,"meta":66,"style":66},"$ !find\nfind . -name *.py\n",[99,4407,4408,4415],{"__ignoreMap":66},[137,4409,4410,4412],{"class":139,"line":140},[137,4411,938],{"class":179},[137,4413,4414],{"class":160}," !find\n",[137,4416,4417,4419,4421,4423,4425],{"class":139,"line":67},[137,4418,2207],{"class":179},[137,4420,4310],{"class":160},[137,4422,4313],{"class":378},[137,4424,4316],{"class":378},[137,4426,4319],{"class":160},[11,4428,4429,4430,4433,4434,2407,4436,4439],{},"Be sure to check out the ",[56,4431,4432],{},"Event Designators"," section of the ",[99,4435,1248],{},[99,4437,4438],{},"man"," pages\nfor more information!",[11,4441,4242],{},[11,4443,4444,4445,4450,4451,4454,4455,4457],{},"As an aside, for even faster command-line history navigation, be sure to check\nout the excellent ",[108,4446,4449],{"href":4447,"rel":4448},"https://github.com/junegunn/fzf",[112],"fzf"," utility by ",[56,4452,4453],{},"junegunn.","\nOne of the many features of ",[99,4456,4449],{}," is browsing and re-issuing commands from your\ncommand-line history with a fuzzy-finder!",[857,4459,4460],{},"html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .snl16, html code.shiki .snl16{--shiki-default:#F97583}",{"title":66,"searchDepth":67,"depth":67,"links":4462},[],[1169],"2021-09-22T00:00:00.000Z","Do you ever find yourself having to re-run a Bash command? I often find this\\nhappening to myself when I neglect to use sudo for a command that requires\\nroot privileges.",{"draft":1173,"excerpt":4467},{"type":8,"value":4468},[4469],[11,4470,4128,4471,4132],{},[99,4472,4131],{},"/articles/quick-tip-rerunning-bash-commands",{"title":4123,"description":4475},"Do you ever find yourself having to re-run a Bash command? I often find this\nhappening to myself when I neglect to use sudo for a command that requires\nroot privileges.","articles/quick-tip-rerunning-bash-commands",[1366,1248],"j1gr_8pMfWiO3ZQryXu9lsH8VIsqIpBi79pgaif_4Rs",{"id":4480,"title":4481,"body":4482,"categories":4843,"date":4845,"description":4846,"extension":75,"img":76,"meta":4847,"navigation":78,"path":4852,"seo":4853,"stem":4854,"tags":4855,"__hash__":4860},"content/articles/unit-testing-micropython-with-mocks.md","Unit Testing in MicroPython with Mocks",{"type":8,"value":4483,"toc":4840},[4484,4487,4492,4495,4499,4510,4604,4616,4685,4695,4808,4822,4826,4837],[11,4485,4486],{},"Unit testing code for embedded systems can be challenging. While it's possible\nto leverage emulators, write side-effect free code, or run tests on the\nhardware itself, it's often easiest to unit test the code on your personal\ncomputer with mocked hardware functionality.",[4488,4489,4491],"h1",{"id":4490},"mocking","Mocking",[11,4493,4494],{},"Mocks allow us to replace the hardware interfacing functionality under-the-hood\nwith predefined results and side-effects. For example, if there is a piece of\nlogic that retrieves values from an accelerometer to get a device's\norientation, it would be possible to mock the returned values of the\naccelerometer -- allowing us to run the unit tests on a device that does not\nhave an accelerometer sensor installed.",[4488,4496,4498],{"id":4497},"a-micropython-mocking-example","A MicroPython Mocking Example",[11,4500,4501,4502,4505,4506,4509],{},"In this example, we will be unit testing a module named ",[99,4503,4504],{},"time_logger",", that\ndepends on the MicroPython library ",[99,4507,4508],{},"utime"," to log the most recent Epoch time to\na file.",[129,4511,4515],{"className":4512,"code":4513,"language":4514,"meta":66,"style":66},"language-python shiki shiki-themes github-dark","# time_logger.py\n\nclass TimeLogger(object):\n\n    def save_time(self):\n        \"\"\" Overwrite a file with the most recent Epoch timestamp from `utime`\n        \"\"\"\n        with open(\"LAST_KNOWN_TIME\", \"w+\") as f:\n            f.write(str(utime.time()))\n","python",[99,4516,4517,4522,4526,4542,4546,4557,4562,4567,4593],{"__ignoreMap":66},[137,4518,4519],{"class":139,"line":140},[137,4520,4521],{"class":143},"# time_logger.py\n",[137,4523,4524],{"class":139,"line":67},[137,4525,167],{"emptyLinePlaceholder":78},[137,4527,4528,4531,4534,4536,4539],{"class":139,"line":164},[137,4529,4530],{"class":149},"class",[137,4532,4533],{"class":179}," TimeLogger",[137,4535,455],{"class":153},[137,4537,4538],{"class":378},"object",[137,4540,4541],{"class":153},"):\n",[137,4543,4544],{"class":139,"line":170},[137,4545,167],{"emptyLinePlaceholder":78},[137,4547,4548,4551,4554],{"class":139,"line":192},[137,4549,4550],{"class":149},"    def",[137,4552,4553],{"class":179}," save_time",[137,4555,4556],{"class":153},"(self):\n",[137,4558,4559],{"class":139,"line":200},[137,4560,4561],{"class":160},"        \"\"\" Overwrite a file with the most recent Epoch timestamp from `utime`\n",[137,4563,4564],{"class":139,"line":206},[137,4565,4566],{"class":160},"        \"\"\"\n",[137,4568,4569,4572,4575,4577,4580,4582,4585,4587,4590],{"class":139,"line":212},[137,4570,4571],{"class":149},"        with",[137,4573,4574],{"class":378}," open",[137,4576,455],{"class":153},[137,4578,4579],{"class":160},"\"LAST_KNOWN_TIME\"",[137,4581,618],{"class":153},[137,4583,4584],{"class":160},"\"w+\"",[137,4586,431],{"class":153},[137,4588,4589],{"class":149},"as",[137,4591,4592],{"class":153}," f:\n",[137,4594,4595,4598,4601],{"class":139,"line":218},[137,4596,4597],{"class":153},"            f.write(",[137,4599,4600],{"class":378},"str",[137,4602,4603],{"class":153},"(utime.time()))\n",[11,4605,4606,4607,4609,4610,4612,4613,4615],{},"First, because the ",[99,4608,4508],{}," module is not installed on the machine that the unit\ntests on, we must mock ",[99,4611,4508],{}," module before importing ",[99,4614,4504],{}," in our\nunit test file.",[129,4617,4619],{"className":4512,"code":4618,"language":4514,"meta":66,"style":66},"# test_time_logger.py\n\nimport unittest\n\nfrom unittest.mock import MagicMock\n\nsys.modules['utime'] = MagicMock()\nfrom time_logger import TimeLogger\n",[99,4620,4621,4626,4630,4637,4641,4653,4657,4673],{"__ignoreMap":66},[137,4622,4623],{"class":139,"line":140},[137,4624,4625],{"class":143},"# test_time_logger.py\n",[137,4627,4628],{"class":139,"line":67},[137,4629,167],{"emptyLinePlaceholder":78},[137,4631,4632,4634],{"class":139,"line":164},[137,4633,150],{"class":149},[137,4635,4636],{"class":153}," unittest\n",[137,4638,4639],{"class":139,"line":170},[137,4640,167],{"emptyLinePlaceholder":78},[137,4642,4643,4645,4648,4650],{"class":139,"line":192},[137,4644,157],{"class":149},[137,4646,4647],{"class":153}," unittest.mock ",[137,4649,150],{"class":149},[137,4651,4652],{"class":153}," MagicMock\n",[137,4654,4655],{"class":139,"line":200},[137,4656,167],{"emptyLinePlaceholder":78},[137,4658,4659,4662,4665,4668,4670],{"class":139,"line":206},[137,4660,4661],{"class":153},"sys.modules[",[137,4663,4664],{"class":160},"'utime'",[137,4666,4667],{"class":153},"] ",[137,4669,312],{"class":149},[137,4671,4672],{"class":153}," MagicMock()\n",[137,4674,4675,4677,4680,4682],{"class":139,"line":212},[137,4676,157],{"class":149},[137,4678,4679],{"class":153}," time_logger ",[137,4681,150],{"class":149},[137,4683,4684],{"class":153}," TimeLogger\n",[11,4686,4687,4688,4691,4692,1211],{},"Then, we can write a test that patches the ",[99,4689,4690],{},"utime.time"," functionality so that\nit returns a value of our choosing -- in this case, ",[99,4693,4694],{},"1234",[129,4696,4698],{"className":4512,"code":4697,"language":4514,"meta":66,"style":66},"class TestTimeLogger(unittest.TestCase):\n\n    def test_save_time(self):\n        \"\"\" Verify that the Epoch time is written to file\n        \"\"\"\n        with unittest.mock.patch(\"utime.time\", return_value=1234):\n            t = TimeLogger()\n            t.save_time()\n            with open(\"LAST_KNOWN_TIME\") as f:\n                self.assertEqual(\"1234\", f.read())\n",[99,4699,4700,4719,4723,4732,4737,4741,4762,4772,4777,4794],{"__ignoreMap":66},[137,4701,4702,4704,4707,4709,4712,4714,4717],{"class":139,"line":140},[137,4703,4530],{"class":149},[137,4705,4706],{"class":179}," TestTimeLogger",[137,4708,455],{"class":153},[137,4710,4711],{"class":179},"unittest",[137,4713,1211],{"class":153},[137,4715,4716],{"class":179},"TestCase",[137,4718,4541],{"class":153},[137,4720,4721],{"class":139,"line":67},[137,4722,167],{"emptyLinePlaceholder":78},[137,4724,4725,4727,4730],{"class":139,"line":164},[137,4726,4550],{"class":149},[137,4728,4729],{"class":179}," test_save_time",[137,4731,4556],{"class":153},[137,4733,4734],{"class":139,"line":170},[137,4735,4736],{"class":160},"        \"\"\" Verify that the Epoch time is written to file\n",[137,4738,4739],{"class":139,"line":192},[137,4740,4566],{"class":160},[137,4742,4743,4745,4748,4751,4753,4756,4758,4760],{"class":139,"line":200},[137,4744,4571],{"class":149},[137,4746,4747],{"class":153}," unittest.mock.patch(",[137,4749,4750],{"class":160},"\"utime.time\"",[137,4752,618],{"class":153},[137,4754,4755],{"class":427},"return_value",[137,4757,312],{"class":149},[137,4759,4694],{"class":378},[137,4761,4541],{"class":153},[137,4763,4764,4767,4769],{"class":139,"line":206},[137,4765,4766],{"class":153},"            t ",[137,4768,312],{"class":149},[137,4770,4771],{"class":153}," TimeLogger()\n",[137,4773,4774],{"class":139,"line":212},[137,4775,4776],{"class":153},"            t.save_time()\n",[137,4778,4779,4782,4784,4786,4788,4790,4792],{"class":139,"line":218},[137,4780,4781],{"class":149},"            with",[137,4783,4574],{"class":378},[137,4785,455],{"class":153},[137,4787,4579],{"class":160},[137,4789,431],{"class":153},[137,4791,4589],{"class":149},[137,4793,4592],{"class":153},[137,4795,4796,4799,4802,4805],{"class":139,"line":224},[137,4797,4798],{"class":378},"                self",[137,4800,4801],{"class":153},".assertEqual(",[137,4803,4804],{"class":160},"\"1234\"",[137,4806,4807],{"class":153},", f.read())\n",[11,4809,4810,4811,4814,4815,4818,4819,4821],{},"Now, when the ",[99,4812,4813],{},"save_time"," method gets the latest time from ",[99,4816,4817],{},"utime.time()",", the\nvalue will be patched to return ",[99,4820,4694],{},". That value will be written to a file,\nand our unit test will pass!",[15,4823,4825],{"id":4824},"references","References",[3907,4827,4828],{},[36,4829,4830],{},[108,4831,4834,4836],{"href":4832,"rel":4833},"https://docs.python.org/3/library/unittest.html",[112],[99,4835,4711],{}," — Unit testing framework",[857,4838,4839],{},"html pre.shiki code .sAwPA, html code.shiki .sAwPA{--shiki-default:#6A737D}html pre.shiki code .snl16, html code.shiki .snl16{--shiki-default:#F97583}html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .s9osk, html code.shiki .s9osk{--shiki-default:#FFAB70}",{"title":66,"searchDepth":67,"depth":67,"links":4841},[4842],{"id":4824,"depth":67,"text":4825},[4514,4844],"embedded","2020-02-07T00:00:00.000Z","Unit testing code for embedded systems can be challenging. While it's possible\\nto leverage emulators, write side-effect free code, or run tests on the\\nhardware itself, it's often easiest to unit test the code on your personal\\ncomputer with mocked hardware functionality.",{"draft":1173,"excerpt":4848},{"type":8,"value":4849},[4850],[11,4851,4486],{},"/articles/unit-testing-micropython-with-mocks",{"title":4481,"description":4486},"articles/unit-testing-micropython-with-mocks",[4856,4857,4858,4859],"micropython","testing","mocks","tutorial","DvVD83Ab2t1L5LWxkkR779yUFyrPOnBg9rkRxahv00k",{"id":4862,"title":4863,"body":4864,"categories":5636,"date":5637,"description":5638,"extension":75,"img":76,"meta":5639,"navigation":78,"path":5644,"seo":5645,"stem":5646,"tags":5647,"__hash__":5649},"content/articles/persistent-archlinux-usb.md","Create a Persistent Arch Linux Bootable USB with Vagrant",{"type":8,"value":4865,"toc":5625},[4866,4869,4871,4896,4898,4902,4913,4932,4939,4954,4985,5042,5049,5059,5214,5218,5226,5231,5246,5319,5323,5333,5356,5370,5390,5394,5426,5464,5468,5474,5480,5486,5500,5506,5509,5512,5516,5533,5552,5554,5622],[11,4867,4868],{},"When installing a linux distribution, it is common for the instructions to have\nthe user create a bootable USB, boot from the device, and proceed with the\ninstallation procedure from that live medium. However, this blog post will\noutline an alternative approach where a virtual machine created with Vagrant\nwill be used in favor of the live medium.",[4488,4870,1215],{"id":1214},[11,4872,4873,4874,4877,4878,4895],{},"The original intention was to use Docker for this process -- leveraging the\n",[99,4875,4876],{},"--device"," flag and mounting the target USB device in the Docker container,\nbut the underlying hypervisor in Docker Desktop for Mac does not support this.\n",[4879,4880,4881,2407,4886,2407,4890],"sup",{},[108,4882,4885],{"href":4883,"rel":4884},"https://docs.docker.com/docker-for-mac/docker-toolbox/",[112],"1",[108,4887,4050],{"href":4888,"rel":4889},"https://github.com/moby/hyperkit",[112],[108,4891,4894],{"href":4892,"rel":4893},"https://github.com/docker/for-mac/issues/900",[112],"3"," While there are workarounds using Docker\nMachine, Vagrant felt like the path of least resistance.",[4488,4897,1828],{"id":1827},[15,4899,4901],{"id":4900},"create-an-arch-linux-virtual-machine-with-vagrant","Create an Arch Linux Virtual Machine with Vagrant",[11,4903,4904,4905,4912],{},"Get the latest Arch Linux image ",[4879,4906,4907],{},[108,4908,4911],{"href":4909,"rel":4910},"https://app.vagrantup.com/archlinux/boxes/archlinux",[112],"4"," from the Vagrant Cloud Box\nCatalog.",[129,4914,4916],{"className":1246,"code":4915,"language":1248,"meta":66,"style":66},"vagrant box add archlinux/archlinux\n",[99,4917,4918],{"__ignoreMap":66},[137,4919,4920,4923,4926,4929],{"class":139,"line":140},[137,4921,4922],{"class":179},"vagrant",[137,4924,4925],{"class":160}," box",[137,4927,4928],{"class":160}," add",[137,4930,4931],{"class":160}," archlinux/archlinux\n",[11,4933,4934,4935,4938],{},"Determine the USB vendor information for the thumb-drive that we will\npass-through to the virtual machine. Using the ",[99,4936,4937],{},"VBoxManage"," utility that comes\nwith Virtual Box, list the devices, and make note of the Vendor and Product ID.",[129,4940,4942],{"className":1246,"code":4941,"language":1248,"meta":66,"style":66}," VBoxManage list usbhost\n",[99,4943,4944],{"__ignoreMap":66},[137,4945,4946,4949,4951],{"class":139,"line":140},[137,4947,4948],{"class":179}," VBoxManage",[137,4950,3520],{"class":160},[137,4952,4953],{"class":160}," usbhost\n",[11,4955,4956,4957,4960,4961,4964,4965,4977,4978,4981,4982,4984],{},"Create a ",[99,4958,4959],{},"Vagrantfile"," with ",[99,4962,4963],{},"archlinx/archlinux"," as the target box, and the USB\ndevice information that is passed through. ",[4879,4966,4967,2407,4972],{},[108,4968,4971],{"href":4969,"rel":4970},"https://antonyjepson.wordpress.com/2012/01/26/quickly-attaching-usb-devices-to-virtualbox-guests-using-vboxmanage/",[112],"5",[108,4973,4976],{"href":4974,"rel":4975},"https://gist.github.com/dscape/7d829c0c116ef419f963",[112],"6"," Vagrant\noffers a handy customization parameter ",[99,4979,4980],{},"vb.customize"," that calls the\n",[99,4983,4937],{}," command under-the-hood, allowing one to enable the guest machine\nto access the host machine's USB devices.",[129,4986,4988],{"className":1097,"code":4987,"language":1099,"meta":66,"style":66},"# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"archlinux/archlinux\"\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.name = \"archlinux\"\n    vb.customize ['modifyvm', :id, '--usb', 'on']\n    vb.customize ['usbfilter', 'add', '1', '--target', :id, '--name', 'SanDisk Ultra Fit', '--vendorid', '0x0781', '--productid', '0x5583']\n  end\nend\n",[99,4989,4990,4995,5000,5004,5009,5014,5019,5024,5029,5034,5038],{"__ignoreMap":66},[137,4991,4992],{"class":139,"line":140},[137,4993,4994],{},"# -*- mode: ruby -*-\n",[137,4996,4997],{"class":139,"line":67},[137,4998,4999],{},"# vi: set ft=ruby :\n",[137,5001,5002],{"class":139,"line":164},[137,5003,167],{"emptyLinePlaceholder":78},[137,5005,5006],{"class":139,"line":170},[137,5007,5008],{},"Vagrant.configure(\"2\") do |config|\n",[137,5010,5011],{"class":139,"line":192},[137,5012,5013],{},"  config.vm.box = \"archlinux/archlinux\"\n",[137,5015,5016],{"class":139,"line":200},[137,5017,5018],{},"  config.vm.provider \"virtualbox\" do |vb|\n",[137,5020,5021],{"class":139,"line":206},[137,5022,5023],{},"    vb.name = \"archlinux\"\n",[137,5025,5026],{"class":139,"line":212},[137,5027,5028],{},"    vb.customize ['modifyvm', :id, '--usb', 'on']\n",[137,5030,5031],{"class":139,"line":218},[137,5032,5033],{},"    vb.customize ['usbfilter', 'add', '1', '--target', :id, '--name', 'SanDisk Ultra Fit', '--vendorid', '0x0781', '--productid', '0x5583']\n",[137,5035,5036],{"class":139,"line":224},[137,5037,3275],{},[137,5039,5040],{"class":139,"line":400},[137,5041,3065],{},[11,5043,5044,5045,5048],{},"When virtual machine is brought up, the ",[99,5046,5047],{},"usbfilter"," is applied, and the guest\nis able to access to the host machine's USB device that was specified in the\nfilter.",[11,5050,5051,5052,5054,5055,5058],{},"Start the machine, ",[99,5053,1157],{}," into the guest, and list the devices to confirm that\nthe USB device is available (see: ",[99,5056,5057],{},"/dev/sdb",").",[129,5060,5062],{"className":1246,"code":5061,"language":1248,"meta":66,"style":66},"$ vagrant up\n$ vagrant ssh\n[vagrant@archlinux ~]$ lsblk\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda      8:0    0   20G  0 disk\n├─sda1   8:1    0  1.9G  0 part [SWAP]\n└─sda2   8:2    0 18.1G  0 part /\nsdb      8:16   1 28.7G  0 disk\n└─sdb1   8:17   1    8G  0 part\n",[99,5063,5064,5074,5083,5094,5117,5137,5158,5178,5196],{"__ignoreMap":66},[137,5065,5066,5068,5071],{"class":139,"line":140},[137,5067,938],{"class":179},[137,5069,5070],{"class":160}," vagrant",[137,5072,5073],{"class":160}," up\n",[137,5075,5076,5078,5080],{"class":139,"line":67},[137,5077,938],{"class":179},[137,5079,5070],{"class":160},[137,5081,5082],{"class":160}," ssh\n",[137,5084,5085,5088,5091],{"class":139,"line":164},[137,5086,5087],{"class":153},"[vagrant@archlinux ",[137,5089,5090],{"class":149},"~",[137,5092,5093],{"class":153},"]$ lsblk\n",[137,5095,5096,5099,5102,5105,5108,5111,5114],{"class":139,"line":170},[137,5097,5098],{"class":179},"NAME",[137,5100,5101],{"class":160},"   MAJ:MIN",[137,5103,5104],{"class":160}," RM",[137,5106,5107],{"class":160},"  SIZE",[137,5109,5110],{"class":160}," RO",[137,5112,5113],{"class":160}," TYPE",[137,5115,5116],{"class":160}," MOUNTPOINT\n",[137,5118,5119,5122,5125,5128,5131,5134],{"class":139,"line":192},[137,5120,5121],{"class":179},"sda",[137,5123,5124],{"class":160},"      8:0",[137,5126,5127],{"class":378},"    0",[137,5129,5130],{"class":160},"   20G",[137,5132,5133],{"class":378},"  0",[137,5135,5136],{"class":160}," disk\n",[137,5138,5139,5142,5145,5147,5150,5152,5155],{"class":139,"line":200},[137,5140,5141],{"class":179},"├─sda1",[137,5143,5144],{"class":160},"   8:1",[137,5146,5127],{"class":378},[137,5148,5149],{"class":160},"  1.9G",[137,5151,5133],{"class":378},[137,5153,5154],{"class":160}," part",[137,5156,5157],{"class":153}," [SWAP]\n",[137,5159,5160,5163,5166,5168,5171,5173,5175],{"class":139,"line":206},[137,5161,5162],{"class":179},"└─sda2",[137,5164,5165],{"class":160},"   8:2",[137,5167,5127],{"class":378},[137,5169,5170],{"class":160}," 18.1G",[137,5172,5133],{"class":378},[137,5174,5154],{"class":160},[137,5176,5177],{"class":160}," /\n",[137,5179,5180,5183,5186,5189,5192,5194],{"class":139,"line":212},[137,5181,5182],{"class":179},"sdb",[137,5184,5185],{"class":160},"      8:16",[137,5187,5188],{"class":378},"   1",[137,5190,5191],{"class":160}," 28.7G",[137,5193,5133],{"class":378},[137,5195,5136],{"class":160},[137,5197,5198,5201,5204,5206,5209,5211],{"class":139,"line":218},[137,5199,5200],{"class":179},"└─sdb1",[137,5202,5203],{"class":160},"   8:17",[137,5205,5188],{"class":378},[137,5207,5208],{"class":160},"    8G",[137,5210,5133],{"class":378},[137,5212,5213],{"class":160}," part\n",[15,5215,5217],{"id":5216},"install-arch-linux-on-the-usb-drive","Install Arch Linux on the USB Drive",[11,5219,2787,5220,5225],{},[108,5221,5224],{"href":5222,"rel":5223},"https://wiki.archlinux.org/index.php/Installation_guide",[112],"Arch Linux Installation Guide"," outlines the installation procedure in\ngreat detail -- the following steps follow this closely with a few alteration\ndue to installing onto removable media.",[5227,5228,5230],"h3",{"id":5229},"partition-the-disk-uefi-with-gpt","Partition the Disk (UEFI with GPT)",[129,5232,5234],{"className":1246,"code":5233,"language":1248,"meta":66,"style":66},"[root@archlinux ~]# fdisk /dev/sdb\n",[99,5235,5236],{"__ignoreMap":66},[137,5237,5238,5241,5243],{"class":139,"line":140},[137,5239,5240],{"class":153},"[root@archlinux ",[137,5242,5090],{"class":149},[137,5244,5245],{"class":153},"]# fdisk /dev/sdb\n",[129,5247,5249],{"className":1097,"code":5248,"language":1099,"meta":66,"style":66},"Command (m for help): p\nDisk /dev/sdb: 28.66 GiB, 30752636928 bytes, 60063744 sectors\nDisk model: Ultra Fit\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: gpt\nDisk identifier: E1D6C445-1B79-AB4D-A442-FA4AD6DF4ECC\n\nDevice       Start      End  Sectors  Size Type\n/dev/sdb1     2048  1050623  1048576  512M EFI System\n/dev/sdb2  1050624 60063710 59013087 28.1G Linux filesystem\n\nFilesystem/RAID signature on partition 1 will be wiped.\n",[99,5250,5251,5256,5261,5266,5271,5276,5281,5286,5291,5295,5300,5305,5310,5314],{"__ignoreMap":66},[137,5252,5253],{"class":139,"line":140},[137,5254,5255],{},"Command (m for help): p\n",[137,5257,5258],{"class":139,"line":67},[137,5259,5260],{},"Disk /dev/sdb: 28.66 GiB, 30752636928 bytes, 60063744 sectors\n",[137,5262,5263],{"class":139,"line":164},[137,5264,5265],{},"Disk model: Ultra Fit\n",[137,5267,5268],{"class":139,"line":170},[137,5269,5270],{},"Units: sectors of 1 * 512 = 512 bytes\n",[137,5272,5273],{"class":139,"line":192},[137,5274,5275],{},"Sector size (logical/physical): 512 bytes / 512 bytes\n",[137,5277,5278],{"class":139,"line":200},[137,5279,5280],{},"I/O size (minimum/optimal): 512 bytes / 512 bytes\n",[137,5282,5283],{"class":139,"line":206},[137,5284,5285],{},"Disklabel type: gpt\n",[137,5287,5288],{"class":139,"line":212},[137,5289,5290],{},"Disk identifier: E1D6C445-1B79-AB4D-A442-FA4AD6DF4ECC\n",[137,5292,5293],{"class":139,"line":218},[137,5294,167],{"emptyLinePlaceholder":78},[137,5296,5297],{"class":139,"line":224},[137,5298,5299],{},"Device       Start      End  Sectors  Size Type\n",[137,5301,5302],{"class":139,"line":400},[137,5303,5304],{},"/dev/sdb1     2048  1050623  1048576  512M EFI System\n",[137,5306,5307],{"class":139,"line":412},[137,5308,5309],{},"/dev/sdb2  1050624 60063710 59013087 28.1G Linux filesystem\n",[137,5311,5312],{"class":139,"line":438},[137,5313,167],{"emptyLinePlaceholder":78},[137,5315,5316],{"class":139,"line":463},[137,5317,5318],{},"Filesystem/RAID signature on partition 1 will be wiped.\n",[5227,5320,5322],{"id":5321},"format-the-partitions","Format the Partitions",[11,5324,5325,5326],{},"The UEFI specification mandates support for FAT file-systems, and FAT32 is\nrecommended for removable media. ",[4879,5327,5328],{},[108,5329,5332],{"href":5330,"rel":5331},"https://wiki.archlinux.org/index.php/EFI_system_partition#Format_the_partition",[112],"7",[129,5334,5336],{"className":1246,"code":5335,"language":1248,"meta":66,"style":66},"[root@archlinux ~]# pacman -Sy dosfstools\n[root@archlinux ~]# mkfs.fat -F32 /dev/sdb1\n",[99,5337,5338,5347],{"__ignoreMap":66},[137,5339,5340,5342,5344],{"class":139,"line":140},[137,5341,5240],{"class":153},[137,5343,5090],{"class":149},[137,5345,5346],{"class":153},"]# pacman -Sy dosfstools\n",[137,5348,5349,5351,5353],{"class":139,"line":67},[137,5350,5240],{"class":153},[137,5352,5090],{"class":149},[137,5354,5355],{"class":153},"]# mkfs.fat -F32 /dev/sdb1\n",[11,5357,5358,5359,5362,5363],{},"As for the root partition, it is recommended to use ",[99,5360,5361],{},"ext4"," without a journal to\nreduce the reads and writes to the file-system as this is detrimental to the\nflash-based USB drive. ",[4879,5364,5365],{},[108,5366,5369],{"href":5367,"rel":5368},"https://wiki.archlinux.org/index.php/Install_Arch_Linux_on_a_USB_key#Installation_tweaks",[112],"8",[129,5371,5373],{"className":1246,"code":5372,"language":1248,"meta":66,"style":66},"[root@archlinux ~]# mkfs.ext4 -O \"^has_journal\" /dev/sdb2\n",[99,5374,5375],{"__ignoreMap":66},[137,5376,5377,5379,5381,5384,5387],{"class":139,"line":140},[137,5378,5240],{"class":153},[137,5380,5090],{"class":149},[137,5382,5383],{"class":153},"]# mkfs.ext4 -O ",[137,5385,5386],{"class":160},"\"^has_journal\"",[137,5388,5389],{"class":153}," /dev/sdb2\n",[5227,5391,5393],{"id":5392},"mount-the-partitions-and-bootstrap-the-environment","Mount the Partitions and Bootstrap the Environment",[129,5395,5397],{"className":1246,"code":5396,"language":1248,"meta":66,"style":66},"[root@archlinux ~]# mount /dev/sdb2 /mnt\n[root@archlinux ~]# mkdir -p /mnt/boot/efi\n[root@archlinux ~]# mount /dev/sdb1 /mnt/boot/efi\n",[99,5398,5399,5408,5417],{"__ignoreMap":66},[137,5400,5401,5403,5405],{"class":139,"line":140},[137,5402,5240],{"class":153},[137,5404,5090],{"class":149},[137,5406,5407],{"class":153},"]# mount /dev/sdb2 /mnt\n",[137,5409,5410,5412,5414],{"class":139,"line":67},[137,5411,5240],{"class":153},[137,5413,5090],{"class":149},[137,5415,5416],{"class":153},"]# mkdir -p /mnt/boot/efi\n",[137,5418,5419,5421,5423],{"class":139,"line":164},[137,5420,5240],{"class":153},[137,5422,5090],{"class":149},[137,5424,5425],{"class":153},"]# mount /dev/sdb1 /mnt/boot/efi\n",[129,5427,5429],{"className":1246,"code":5428,"language":1248,"meta":66,"style":66},"[root@archlinux ~]# pacman -S arch-install-scripts\n[root@archlinux ~]# pacstrap /mnt base linux linux-firmware\n[root@archlinux ~]# genfstab -U /mnt >> /mnt/etc/fstab\n",[99,5430,5431,5440,5449],{"__ignoreMap":66},[137,5432,5433,5435,5437],{"class":139,"line":140},[137,5434,5240],{"class":153},[137,5436,5090],{"class":149},[137,5438,5439],{"class":153},"]# pacman -S arch-install-scripts\n",[137,5441,5442,5444,5446],{"class":139,"line":67},[137,5443,5240],{"class":153},[137,5445,5090],{"class":149},[137,5447,5448],{"class":153},"]# pacstrap /mnt base linux linux-firmware\n",[137,5450,5451,5453,5455,5458,5461],{"class":139,"line":164},[137,5452,5240],{"class":153},[137,5454,5090],{"class":149},[137,5456,5457],{"class":153},"]# genfstab -U /mnt ",[137,5459,5460],{"class":149},">>",[137,5462,5463],{"class":153}," /mnt/etc/fstab\n",[5227,5465,5467],{"id":5466},"configure-the-new-environment","Configure the New Environment",[129,5469,5472],{"className":5470,"code":5471,"language":256},[254],"[root@archlinux ~]# arch-chroot /mnt\n",[99,5473,5471],{"__ignoreMap":66},[129,5475,5478],{"className":5476,"code":5477,"language":256},[254],"[root@archlinux /]# ln -sf /usr/share/zoneinfo/US/Eastern /etc/localtime\n[root@archlinux /]# hwclock --systohc\n[root@archlinux /]# sed -i 's/#en_US.UTF-8/en_US.UTF-8/' /etc/locale.gen\n[root@archlinux /]# locale-gen\n[root@archlinux /]# echo \"LANG=en_US.UTF-8\" > /etc/locale.conf\n",[99,5479,5477],{"__ignoreMap":66},[129,5481,5484],{"className":5482,"code":5483,"language":256},[254],"[root@archlinux /]# hostnamectl set-hostname usb\n[root@archlinux /]# echo \"127.0.0.1        localhost\" >> /etc/hosts\n[root@archlinux /]# echo \"::1              localhost\" >> /etc/hosts\n",[99,5485,5483],{"__ignoreMap":66},[11,5487,5488,5489,5492,5493],{},"Note, one difference here from a standard installation is that the\n",[99,5490,5491],{},"--removable"," flag is specified when installing the GRUB bootloader.\n",[4879,5494,5495],{},[108,5496,5499],{"href":5497,"rel":5498},"https://wiki.archlinux.org/index.php/GRUB#UEFI_systems",[112],"10",[129,5501,5504],{"className":5502,"code":5503,"language":256},[254],"[root@archlinux /]# pacman -S grub\n[root@archlinux /]# grub-install --target=x86_64-efi --efi-directory=/boot/efi  --removable --recheck\n[root@usb /]# grub-mkconfig -o /boot/grub/grub.cfg\n",[99,5505,5503],{"__ignoreMap":66},[11,5507,5508],{},"Shutdown the virtual machine, restart the host machine, and boot the newly\ncreated Arch Linux thumb-drive!",[11,5510,5511],{},"🎉",[15,5513,5515],{"id":5514},"side-note","Side-note",[11,5517,5518,5519,5522,5523,5525,5526],{},"It was attempted to use the ",[99,5520,5521],{},"controlvm usbattach"," command to pass the USB\ndevice to the guest machine, but this did not work as it expects the virtual\nmachine to already be running, and the ",[99,5524,4980],{}," option runs prior to\nbooting the machine. ",[4879,5527,5528],{},[108,5529,5532],{"href":5530,"rel":5531},"https://www.vagrantup.com/docs/virtualbox/configuration.html#vboxmanage-customizations",[112],"11",[129,5534,5536],{"className":1097,"code":5535,"language":1099,"meta":66,"style":66},"Command: [\"controlvm\", \"060a716b-1965-49e2-bc56-12beed5df716\", \"usbattach36fc9e60-c465-11cf-8056-444553540000\"]\n\nStderr: VBoxManage.exe: error: Machine '060a716b-1965-49e2-bc56-12beed5df716' is not currently running.\n",[99,5537,5538,5543,5547],{"__ignoreMap":66},[137,5539,5540],{"class":139,"line":140},[137,5541,5542],{},"Command: [\"controlvm\", \"060a716b-1965-49e2-bc56-12beed5df716\", \"usbattach36fc9e60-c465-11cf-8056-444553540000\"]\n",[137,5544,5545],{"class":139,"line":67},[137,5546,167],{"emptyLinePlaceholder":78},[137,5548,5549],{"class":139,"line":164},[137,5550,5551],{},"Stderr: VBoxManage.exe: error: Machine '060a716b-1965-49e2-bc56-12beed5df716' is not currently running.\n",[15,5553,4825],{"id":4824},[3907,5555,5556,5562,5568,5574,5580,5586,5592,5598,5604,5610,5616],{},[36,5557,5558],{},[108,5559,5561],{"href":4883,"rel":5560},[112],"Docker Desktop on Mac vs. Docker Toolbox",[36,5563,5564],{},[108,5565,5567],{"href":4888,"rel":5566},[112],"GitHub - HyperKit",[36,5569,5570],{},[108,5571,5573],{"href":4892,"rel":5572},[112],"GitHub - Docker for Mac - Issue #900",[36,5575,5576],{},[108,5577,5579],{"href":4909,"rel":5578},[112],"Vagrant Cloud - Arch Linux",[36,5581,5582],{},[108,5583,5585],{"href":4969,"rel":5584},[112],"Attaching USB Devices to VirtualBox Guests using VBoxManage",[36,5587,5588],{},[108,5589,5591],{"href":4974,"rel":5590},[112],"GitHub Gist - Vagrant USB Filter",[36,5593,5594],{},[108,5595,5597],{"href":5330,"rel":5596},[112],"Arch Linux Wiki - EFI System Partition - Format Partitions",[36,5599,5600],{},[108,5601,5603],{"href":5367,"rel":5602},[112],"Arch Linux Wiki - Arch Linux on USB - Installation Tweaks",[36,5605,5606],{},[108,5607,5609],{"href":5222,"rel":5608},[112],"Arch Linux Wiki - Installation Guide",[36,5611,5612],{},[108,5613,5615],{"href":5497,"rel":5614},[112],"Arch Linux Wiki - GRUB - UEFI Systems",[36,5617,5618],{},[108,5619,5621],{"href":5530,"rel":5620},[112],"Vagrant VBoxManage Customizations ",[857,5623,5624],{},"html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .snl16, html code.shiki .snl16{--shiki-default:#F97583}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}",{"title":66,"searchDepth":67,"depth":67,"links":5626},[5627,5628,5634,5635],{"id":4900,"depth":67,"text":4901},{"id":5216,"depth":67,"text":5217,"children":5629},[5630,5631,5632,5633],{"id":5229,"depth":164,"text":5230},{"id":5321,"depth":164,"text":5322},{"id":5392,"depth":164,"text":5393},{"id":5466,"depth":164,"text":5467},{"id":5514,"depth":67,"text":5515},{"id":4824,"depth":67,"text":4825},[3793],"2020-01-09T00:00:00.000Z","When installing a linux distribution, it is common for the instructions to have\\nthe user create a bootable USB, boot from the device, and proceed with the\\ninstallation procedure from that live medium. However, this blog post will\\noutline an alternative approach where a virtual machine created with Vagrant\\nwill be used in favor of the live medium.",{"draft":1173,"excerpt":5640},{"type":8,"value":5641},[5642],[11,5643,4868],{},"/articles/persistent-archlinux-usb",{"title":4863,"description":4868},"articles/persistent-archlinux-usb",[4922,5648],"archlinux","IgTvkgdpJ1VhIFuRY1CHOtB3hrj_x0uBoCNE32T3R6c",{"id":5651,"title":5652,"body":5653,"categories":5766,"date":5767,"description":5768,"extension":75,"img":76,"meta":5769,"navigation":78,"path":5774,"seo":5775,"stem":5776,"tags":5777,"__hash__":5780},"content/articles/docker-selinux-volumes.md","Docker Volume Permissions with SELinux",{"type":8,"value":5654,"toc":5764},[5655,5658,5667,5670,5712,5723,5729,5732,5740,5745,5761],[11,5656,5657],{},"Unfamiliar with running Docker on a SELinux enabled system, I found myself\nrunning into a bunch of file permission errors while creating volumes.",[129,5659,5661],{"className":1097,"code":5660,"language":1099,"meta":66,"style":66},"mkdir: can't create directory '/data': Permission denied\n",[99,5662,5663],{"__ignoreMap":66},[137,5664,5665],{"class":139,"line":140},[137,5666,5660],{},[5668,5669],"hr",{},[129,5671,5673],{"className":1246,"code":5672,"language":1248,"meta":66,"style":66},"$ docker info --format '{{json .SecurityOptions}}'\n[\n  \"name=seccomp,profile=/etc/docker/seccomp.json\",\n  \"name=selinux\"\n]\n",[99,5674,5675,5691,5696,5703,5708],{"__ignoreMap":66},[137,5676,5677,5679,5682,5685,5688],{"class":139,"line":140},[137,5678,938],{"class":179},[137,5680,5681],{"class":160}," docker",[137,5683,5684],{"class":160}," info",[137,5686,5687],{"class":378}," --format",[137,5689,5690],{"class":160}," '{{json .SecurityOptions}}'\n",[137,5692,5693],{"class":139,"line":67},[137,5694,5695],{"class":153},"[\n",[137,5697,5698,5701],{"class":139,"line":164},[137,5699,5700],{"class":160},"  \"name=seccomp,profile=/etc/docker/seccomp.json\"",[137,5702,2012],{"class":153},[137,5704,5705],{"class":139,"line":170},[137,5706,5707],{"class":160},"  \"name=selinux\"\n",[137,5709,5710],{"class":139,"line":192},[137,5711,2448],{"class":153},[11,5713,5714,5715,5718,5719,5722],{},"It turns out that this can be resolved by appending the ",[99,5716,5717],{},":z"," flag to the volume\nmappings in the ",[99,5720,5721],{},"docker-compose.yml"," file, indicating that the volume content\nis shared.",[129,5724,5727],{"className":5725,"code":5726,"language":256},[254],"services:\n  server:\n    volumes:\n      - ./data:/data:z\n",[99,5728,5726],{"__ignoreMap":66},[11,5730,5731],{},"From the Docker documentation:",[913,5733,5734],{},[11,5735,2787,5736,5739],{},[99,5737,5738],{},"z"," option tells Docker that two containers share the volume content. As\na result, Docker labels the content with a shared content label. Shared\nvolume labels allow all containers to read/write content.",[11,5741,5742],{},[5743,5744,4825],"strong",{},[33,5746,5747,5754],{},[36,5748,5749],{},[108,5750,5753],{"href":5751,"rel":5752},"https://docs.docker.com/engine/reference/commandline/info/",[112],"Docker Docs: Docker Info",[36,5755,5756],{},[108,5757,5760],{"href":5758,"rel":5759},"https://docs.docker.com/engine/reference/commandline/run/#mount-volumes-from-container---volumes-from",[112],"Docker Docs: Mounting Volumes",[857,5762,5763],{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}",{"title":66,"searchDepth":67,"depth":67,"links":5765},[],[3793],"2019-12-26T00:00:00.000Z","Unfamiliar with running Docker on a SELinux enabled system, I found myself\\nrunning into a bunch of file permission errors while creating volumes.",{"draft":1173,"excerpt":5770},{"type":8,"value":5771},[5772],[11,5773,5657],{},"/articles/docker-selinux-volumes",{"title":5652,"description":5657},"articles/docker-selinux-volumes",[5778,5779],"docker","selinux","zILe6G8-icukwIVxOihkMqwje6sH_7AHairLcmhzims",{"id":5782,"title":5783,"body":5784,"categories":5939,"date":5940,"description":5941,"extension":75,"img":76,"meta":5942,"navigation":78,"path":5952,"seo":5953,"stem":5955,"tags":5956,"__hash__":5959},"content/articles/apu2-firmware-upgrade.md","Upgrading the Firmware on the PCEngines APU2",{"type":8,"value":5785,"toc":5937},[5786,5795,5798,5801,5807,5822,5850,5857,5872,5875,5899,5904,5934],[11,5787,5788,5789,5794],{},"I've had a ",[108,5790,5793],{"href":5791,"rel":5792},"https://pcengines.ch/apu2.htm",[112],"PCEngines APU2"," gathering dust for a\nfew years, and have recently decided to dust it off.",[11,5796,5797],{},"Since the last time the device has been powered on, there have been many great\nimprovements to the firmware, and it was very-much due for an upgrade. The\nfollowing steps outline how the firmware was upgraded on the APU from the\nalready-installed operating system -- CentOS.",[11,5799,5800],{},"First, we will connect to the device over the serial port",[129,5802,5805],{"className":5803,"code":5804,"language":256},[254],"screen /dev/tty.usbserial 115200\n",[99,5806,5804],{"__ignoreMap":66},[11,5808,5809,5810,5813,5814,5817,5818,5821],{},"Then, we will install the ",[99,5811,5812],{},"flashrom"," utility that is needed to update the\nfirmware. Because it is not available in the default ",[99,5815,5816],{},"yum"," repositories, we\nwill enable the ",[56,5819,5820],{},"Extra Packages for Enterprise Linux"," (EPEL) repository before\ninstallation.",[129,5823,5825],{"className":1246,"code":5824,"language":1248,"meta":66,"style":66},"sudo yum install epel-release\nsudo yum install flashrom\n",[99,5826,5827,5839],{"__ignoreMap":66},[137,5828,5829,5831,5834,5836],{"class":139,"line":140},[137,5830,4131],{"class":179},[137,5832,5833],{"class":160}," yum",[137,5835,944],{"class":160},[137,5837,5838],{"class":160}," epel-release\n",[137,5840,5841,5843,5845,5847],{"class":139,"line":67},[137,5842,4131],{"class":179},[137,5844,5833],{"class":160},[137,5846,944],{"class":160},[137,5848,5849],{"class":160}," flashrom\n",[11,5851,5852,5853,1211],{},"Next, we will download the latest version of the firmware that is compatible\nwith the APU2 device from the PC Engines release website:\n",[108,5854,5855],{"href":5855,"rel":5856},"https://pcengines.github.io/",[112],[129,5858,5860],{"className":1246,"code":5859,"language":1248,"meta":66,"style":66},"curl -O https://3mdeb.com/open-source-firmware/pcengines/apu2/apu2_v4.11.0.1.rom\n",[99,5861,5862],{"__ignoreMap":66},[137,5863,5864,5867,5869],{"class":139,"line":140},[137,5865,5866],{"class":179},"curl",[137,5868,1030],{"class":378},[137,5870,5871],{"class":160}," https://3mdeb.com/open-source-firmware/pcengines/apu2/apu2_v4.11.0.1.rom\n",[11,5873,5874],{},"And finally, we will flash the firmware...",[129,5876,5878],{"className":1246,"code":5877,"language":1248,"meta":66,"style":66},"sudo flashrom -w apu2_v4.11.0.1.rom -p internal:boardmismatch=force\n",[99,5879,5880],{"__ignoreMap":66},[137,5881,5882,5884,5887,5890,5893,5896],{"class":139,"line":140},[137,5883,4131],{"class":179},[137,5885,5886],{"class":160}," flashrom",[137,5888,5889],{"class":378}," -w",[137,5891,5892],{"class":160}," apu2_v4.11.0.1.rom",[137,5894,5895],{"class":378}," -p",[137,5897,5898],{"class":160}," internal:boardmismatch=force\n",[11,5900,5901],{},[5743,5902,5903],{},"References:",[33,5905,5906,5911,5916,5922,5928],{},[36,5907,5908],{},[108,5909,5791],{"href":5791,"rel":5910},[112],[36,5912,5913],{},[108,5914,5855],{"href":5855,"rel":5915},[112],[36,5917,5918],{},[108,5919,5920],{"href":5920,"rel":5921},"https://github.com/pcengines/apu2-documentation/blob/master/docs/firmware_flashing.md",[112],[36,5923,5924],{},[108,5925,5926],{"href":5926,"rel":5927},"https://github.com/pcengines/apu2-documentation/blob/master/docs/cold_reset.md",[112],[36,5929,5930],{},[108,5931,5932],{"href":5932,"rel":5933},"https://github.com/elad/openbsd-apu2",[112],[857,5935,5936],{},"html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}",{"title":66,"searchDepth":67,"depth":67,"links":5938},[],[3793],"2019-12-21T00:00:00.000Z","I've had a PCEngines APU2 gathering dust for a\\nfew years, and have recently decided to dust it off.",{"draft":1173,"excerpt":5943},{"type":8,"value":5944},[5945,5950],[11,5946,5788,5947,5794],{},[108,5948,5793],{"href":5791,"rel":5949},[112],[11,5951,5797],{},"/articles/apu2-firmware-upgrade",{"title":5783,"description":5954},"I've had a PCEngines APU2 gathering dust for a\nfew years, and have recently decided to dust it off.","articles/apu2-firmware-upgrade",[5957,5958],"pcengine","apu","3oXiiZXTLJ4DKfhCeFRx2dVivYkduAT0IXRXbPgIkmg",1761272835333]