[{"data":1,"prerenderedAt":336},["ShallowReactive",2],{"/articles/ssh-ed25519-sk-yubikey":3},{"id":4,"title":5,"body":6,"categories":310,"date":313,"description":314,"extension":315,"img":316,"meta":317,"navigation":328,"path":329,"seo":330,"stem":331,"tags":332,"__hash__":335},"content/articles/ssh-ed25519-sk-yubikey.md","Configuring a YubiKey for use with OpenSSH",{"type":7,"value":8,"toc":308},"minimal",[9,25,34,40,49,80,83,111,118,138,141,222,230,293,304],[10,11,12,19,20,24],"p",{},[13,14,18],"a",{"href":15,"rel":16},"https://www.yubico.com/",[17],"nofollow","YubiKey's"," are a convenient way to introduce a physical form of two factor authentication into ones workflow. They support a variety of protocols, but in this guide we will walk through how to configure a YubiKey for use with OpenSSH via the \"new\" ",[21,22,23],"code",{},"ed25519-sk"," key type that supports FIDO compliant hardware keys.",[10,26,27,28,33],{},"In ",[13,29,32],{"href":30,"rel":31},"https://www.openssh.com/txt/release-8.2",[17],"release 8.2 of OpenSSH"," support for FIDO devices was added with public key types \"ecdsa-sk\" and \"ed25519-sk\" (-sk standing for \"security key\"). This key type is supported by YubiKey's with firmware version 5.2.3 or higher.",[35,36,37],"blockquote",{},[10,38,39],{},"This release adds support for FIDO/U2F hardware authenticators to OpenSSH. U2F/FIDO are open standards for inexpensive two-factor authentication hardware that are widely used for website authentication.  In OpenSSH FIDO devices are supported by new public key types \"ecdsa-sk\" and \"ed25519-sk\", along with corresponding certificate types.",[10,41,42,43,48],{},"Let's get started by installing the latest version of OpenSSH via ",[13,44,47],{"href":45,"rel":46},"https://brew.sh/",[17],"Homebrew",", along with the YubiKey Manager (ykman) CLI. The version of OpenSSH included with macOS is not compatible.",[50,51,56],"pre",{"className":52,"code":53,"language":54,"meta":55,"style":55},"language-sh shiki shiki-themes github-dark","$ brew install openssh ykman\n","sh","",[21,57,58],{"__ignoreMap":55},[59,60,63,67,71,74,77],"span",{"class":61,"line":62},"line",1,[59,64,66],{"class":65},"svObZ","$",[59,68,70],{"class":69},"sU2Wk"," brew",[59,72,73],{"class":69}," install",[59,75,76],{"class":69}," openssh",[59,78,79],{"class":69}," ykman\n",[10,81,82],{},"Then, let's confirm that our YubiKey has a firmware that is greater than 5.2.3:",[50,84,86],{"className":52,"code":85,"language":54,"meta":55,"style":55},"$ ykman list\nYubiKey 5Ci (5.4.3) [OTP+FIDO+CCID]\n",[21,87,88,98],{"__ignoreMap":55},[59,89,90,92,95],{"class":61,"line":62},[59,91,66],{"class":65},[59,93,94],{"class":69}," ykman",[59,96,97],{"class":69}," list\n",[59,99,101,104,107],{"class":61,"line":100},2,[59,102,103],{"class":65},"YubiKey",[59,105,106],{"class":69}," 5Ci",[59,108,110],{"class":109},"s95oV"," (5.4.3) [OTP+FIDO+CCID]\n",[10,112,113,114,117],{},"Next, we'll go ahead and enable a pin on our device via the ",[21,115,116],{},"change-pin"," command, as this a requirement for our use.",[50,119,121],{"className":52,"code":120,"language":54,"meta":55,"style":55},"$ ykman fido access change-pin\n",[21,122,123],{"__ignoreMap":55},[59,124,125,127,129,132,135],{"class":61,"line":62},[59,126,66],{"class":65},[59,128,94],{"class":69},[59,130,131],{"class":69}," fido",[59,133,134],{"class":69}," access",[59,136,137],{"class":69}," change-pin\n",[10,139,140],{},"And last, we'll generate the key on our device!",[50,142,144],{"className":52,"code":143,"language":54,"meta":55,"style":55},"$ ssh-keygen -t ed25519-sk -O resident\nGenerating public/private ed25519-sk key pair.\nYou may need to touch your authenticator to authorize key generation.\n...\n",[21,145,146,166,182,216],{"__ignoreMap":55},[59,147,148,150,153,157,160,163],{"class":61,"line":62},[59,149,66],{"class":65},[59,151,152],{"class":69}," ssh-keygen",[59,154,156],{"class":155},"sDLfK"," -t",[59,158,159],{"class":69}," ed25519-sk",[59,161,162],{"class":155}," -O",[59,164,165],{"class":69}," resident\n",[59,167,168,171,174,176,179],{"class":61,"line":100},[59,169,170],{"class":65},"Generating",[59,172,173],{"class":69}," public/private",[59,175,159],{"class":69},[59,177,178],{"class":69}," key",[59,180,181],{"class":69}," pair.\n",[59,183,185,188,191,194,197,200,203,206,208,211,213],{"class":61,"line":184},3,[59,186,187],{"class":65},"You",[59,189,190],{"class":69}," may",[59,192,193],{"class":69}," need",[59,195,196],{"class":69}," to",[59,198,199],{"class":69}," touch",[59,201,202],{"class":69}," your",[59,204,205],{"class":69}," authenticator",[59,207,196],{"class":69},[59,209,210],{"class":69}," authorize",[59,212,178],{"class":69},[59,214,215],{"class":69}," generation.\n",[59,217,219],{"class":61,"line":218},4,[59,220,221],{"class":155},"...\n",[10,223,224,225,229],{},"We specify ",[226,227,228],"em",{},"resident"," to indicate that the key handle is to be stored on the YubiKey itself, since we will be using this device with multiple computers.",[50,231,235],{"className":232,"code":233,"language":234,"meta":55,"style":55},"language-txt shiki shiki-themes github-dark","resident\n        Indicate that the key handle should be stored on the FIDO\n        authenticator itself.  This makes it easier to use the\n        authenticator on multiple computers.  Resident keys may be\n        supported on FIDO2 authenticators and typically require that a PIN\n        be set on the authenticator prior to generation.  Resident keys\n        may be loaded off the authenticator using ssh-add(1).  Storing\n        both parts of a key on a FIDO authenticator increases the\n        likelihood of an attacker being able to use a stolen authenticator\n        device.\n","txt",[21,236,237,242,247,252,257,263,269,275,281,287],{"__ignoreMap":55},[59,238,239],{"class":61,"line":62},[59,240,241],{},"resident\n",[59,243,244],{"class":61,"line":100},[59,245,246],{},"        Indicate that the key handle should be stored on the FIDO\n",[59,248,249],{"class":61,"line":184},[59,250,251],{},"        authenticator itself.  This makes it easier to use the\n",[59,253,254],{"class":61,"line":218},[59,255,256],{},"        authenticator on multiple computers.  Resident keys may be\n",[59,258,260],{"class":61,"line":259},5,[59,261,262],{},"        supported on FIDO2 authenticators and typically require that a PIN\n",[59,264,266],{"class":61,"line":265},6,[59,267,268],{},"        be set on the authenticator prior to generation.  Resident keys\n",[59,270,272],{"class":61,"line":271},7,[59,273,274],{},"        may be loaded off the authenticator using ssh-add(1).  Storing\n",[59,276,278],{"class":61,"line":277},8,[59,279,280],{},"        both parts of a key on a FIDO authenticator increases the\n",[59,282,284],{"class":61,"line":283},9,[59,285,286],{},"        likelihood of an attacker being able to use a stolen authenticator\n",[59,288,290],{"class":61,"line":289},10,[59,291,292],{},"        device.\n",[10,294,295,296,299,300,303],{},"And that's all it takes -- simple enough. Now, when interacting with ",[226,297,298],{},"ssh"," or ",[226,301,302],{},"git"," you will be prompted to touch the YubiKey to bring that little bit of physical 2FA.",[305,306,307],"style",{},"html pre.shiki code .svObZ, html code.shiki .svObZ{--shiki-default:#B392F0}html pre.shiki code .sU2Wk, html code.shiki .sU2Wk{--shiki-default:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .s95oV, html code.shiki .s95oV{--shiki-default:#E1E4E8}html pre.shiki code .sDLfK, html code.shiki .sDLfK{--shiki-default:#79B8FF}",{"title":55,"searchDepth":100,"depth":100,"links":309},[],[311,312],"tooling","tips","2024-06-09T00:00:00.000Z","YubiKey's are a convenient way to introduce a physical form of two factor authentication into ones workflow. They support a variety of protocols, but in this guide we will walk through how to configure a YubiKey for use with OpenSSH via the \"new\" ed25519-sk key type that supports FIDO compliant hardware keys.","md",null,{"draft":318,"excerpt":319},false,{"type":7,"value":320},[321],[10,322,323,19,326,24],{},[13,324,18],{"href":15,"rel":325},[17],[21,327,23],{},true,"/articles/ssh-ed25519-sk-yubikey",{"title":5,"description":314},"articles/ssh-ed25519-sk-yubikey",[333,334],"unix","configurations","viiH_4l5V_Blrwv99sJDPgiNVD0mVj0P2T373wKvSkg",1760715690770]