[{"data":1,"prerenderedAt":690},["ShallowReactive",2],{"page-data":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"date":10,"draft":6,"tags":11,"categories":16,"excerpt":19,"body":29,"_type":684,"_id":685,"_source":686,"_file":687,"_stem":688,"_extension":689},"/articles/unit-testing-micropython-with-mocks","articles",false,"","Unit Testing in MicroPython with Mocks","Unit testing code for embedded systems can be challenging. While it's possible\nto leverage emulators, write side-effect free code, or run tests on the\nhardware itself, it's often easiest to unit test the code on your personal\ncomputer with mocked hardware functionality.","2020-02-07",[12,13,14,15],"micropython","testing","mocks","tutorial",[17,18],"python","embedded",{"type":20,"children":21},"root",[22],{"type":23,"tag":24,"props":25,"children":26},"element","p",{},[27],{"type":28,"value":9},"text",{"type":20,"children":30,"toc":681},[31,35,42,47,53,75,252,278,398,419,618,646,653,675],{"type":23,"tag":24,"props":32,"children":33},{},[34],{"type":28,"value":9},{"type":23,"tag":36,"props":37,"children":39},"h1",{"id":38},"mocking",[40],{"type":28,"value":41},"Mocking",{"type":23,"tag":24,"props":43,"children":44},{},[45],{"type":28,"value":46},"Mocks allow us to replace the hardware interfacing functionality under-the-hood\nwith predefined results and side-effects. For example, if there is a piece of\nlogic that retrieves values from an accelerometer to get a device's\norientation, it would be possible to mock the returned values of the\naccelerometer -- allowing us to run the unit tests on a device that does not\nhave an accelerometer sensor installed.",{"type":23,"tag":36,"props":48,"children":50},{"id":49},"a-micropython-mocking-example",[51],{"type":28,"value":52},"A MicroPython Mocking Example",{"type":23,"tag":24,"props":54,"children":55},{},[56,58,65,67,73],{"type":28,"value":57},"In this example, we will be unit testing a module named ",{"type":23,"tag":59,"props":60,"children":62},"code",{"className":61},[],[63],{"type":28,"value":64},"time_logger",{"type":28,"value":66},", that\ndepends on the MicroPython library ",{"type":23,"tag":59,"props":68,"children":70},{"className":69},[],[71],{"type":28,"value":72},"utime",{"type":28,"value":74}," to log the most recent Epoch time to\na file.",{"type":23,"tag":76,"props":77,"children":80},"pre",{"className":78,"code":79,"language":17,"meta":7,"style":7},"language-python shiki shiki-themes github-light","# time_logger.py\n\nclass TimeLogger(object):\n\n    def save_time(self):\n        \"\"\" Overwrite a file with the most recent Epoch timestamp from `utime`\n        \"\"\"\n        with open(\"LAST_KNOWN_TIME\", \"w+\") as f:\n            f.write(str(utime.time()))\n",[81],{"type":23,"tag":59,"props":82,"children":83},{"__ignoreMap":7},[84,96,106,139,147,166,176,185,233],{"type":23,"tag":85,"props":86,"children":89},"span",{"class":87,"line":88},"line",1,[90],{"type":23,"tag":85,"props":91,"children":93},{"style":92},"--shiki-default:#6A737D",[94],{"type":28,"value":95},"# time_logger.py\n",{"type":23,"tag":85,"props":97,"children":99},{"class":87,"line":98},2,[100],{"type":23,"tag":85,"props":101,"children":103},{"emptyLinePlaceholder":102},true,[104],{"type":28,"value":105},"\n",{"type":23,"tag":85,"props":107,"children":109},{"class":87,"line":108},3,[110,116,122,128,134],{"type":23,"tag":85,"props":111,"children":113},{"style":112},"--shiki-default:#D73A49",[114],{"type":28,"value":115},"class",{"type":23,"tag":85,"props":117,"children":119},{"style":118},"--shiki-default:#6F42C1",[120],{"type":28,"value":121}," TimeLogger",{"type":23,"tag":85,"props":123,"children":125},{"style":124},"--shiki-default:#24292E",[126],{"type":28,"value":127},"(",{"type":23,"tag":85,"props":129,"children":131},{"style":130},"--shiki-default:#005CC5",[132],{"type":28,"value":133},"object",{"type":23,"tag":85,"props":135,"children":136},{"style":124},[137],{"type":28,"value":138},"):\n",{"type":23,"tag":85,"props":140,"children":142},{"class":87,"line":141},4,[143],{"type":23,"tag":85,"props":144,"children":145},{"emptyLinePlaceholder":102},[146],{"type":28,"value":105},{"type":23,"tag":85,"props":148,"children":150},{"class":87,"line":149},5,[151,156,161],{"type":23,"tag":85,"props":152,"children":153},{"style":112},[154],{"type":28,"value":155},"    def",{"type":23,"tag":85,"props":157,"children":158},{"style":118},[159],{"type":28,"value":160}," save_time",{"type":23,"tag":85,"props":162,"children":163},{"style":124},[164],{"type":28,"value":165},"(self):\n",{"type":23,"tag":85,"props":167,"children":169},{"class":87,"line":168},6,[170],{"type":23,"tag":85,"props":171,"children":173},{"style":172},"--shiki-default:#032F62",[174],{"type":28,"value":175},"        \"\"\" Overwrite a file with the most recent Epoch timestamp from `utime`\n",{"type":23,"tag":85,"props":177,"children":179},{"class":87,"line":178},7,[180],{"type":23,"tag":85,"props":181,"children":182},{"style":172},[183],{"type":28,"value":184},"        \"\"\"\n",{"type":23,"tag":85,"props":186,"children":188},{"class":87,"line":187},8,[189,194,199,203,208,213,218,223,228],{"type":23,"tag":85,"props":190,"children":191},{"style":112},[192],{"type":28,"value":193},"        with",{"type":23,"tag":85,"props":195,"children":196},{"style":130},[197],{"type":28,"value":198}," open",{"type":23,"tag":85,"props":200,"children":201},{"style":124},[202],{"type":28,"value":127},{"type":23,"tag":85,"props":204,"children":205},{"style":172},[206],{"type":28,"value":207},"\"LAST_KNOWN_TIME\"",{"type":23,"tag":85,"props":209,"children":210},{"style":124},[211],{"type":28,"value":212},", ",{"type":23,"tag":85,"props":214,"children":215},{"style":172},[216],{"type":28,"value":217},"\"w+\"",{"type":23,"tag":85,"props":219,"children":220},{"style":124},[221],{"type":28,"value":222},") ",{"type":23,"tag":85,"props":224,"children":225},{"style":112},[226],{"type":28,"value":227},"as",{"type":23,"tag":85,"props":229,"children":230},{"style":124},[231],{"type":28,"value":232}," f:\n",{"type":23,"tag":85,"props":234,"children":236},{"class":87,"line":235},9,[237,242,247],{"type":23,"tag":85,"props":238,"children":239},{"style":124},[240],{"type":28,"value":241},"            f.write(",{"type":23,"tag":85,"props":243,"children":244},{"style":130},[245],{"type":28,"value":246},"str",{"type":23,"tag":85,"props":248,"children":249},{"style":124},[250],{"type":28,"value":251},"(utime.time()))\n",{"type":23,"tag":24,"props":253,"children":254},{},[255,257,262,264,269,271,276],{"type":28,"value":256},"First, because the ",{"type":23,"tag":59,"props":258,"children":260},{"className":259},[],[261],{"type":28,"value":72},{"type":28,"value":263}," module is not installed on the machine that the unit\ntests on, we must mock ",{"type":23,"tag":59,"props":265,"children":267},{"className":266},[],[268],{"type":28,"value":72},{"type":28,"value":270}," module before importing ",{"type":23,"tag":59,"props":272,"children":274},{"className":273},[],[275],{"type":28,"value":64},{"type":28,"value":277}," in our\nunit test file.",{"type":23,"tag":76,"props":279,"children":281},{"className":78,"code":280,"language":17,"meta":7,"style":7},"# test_time_logger.py\n\nimport unittest\n\nfrom unittest.mock import MagicMock\n\nsys.modules['utime'] = MagicMock()\nfrom time_logger import TimeLogger\n",[282],{"type":23,"tag":59,"props":283,"children":284},{"__ignoreMap":7},[285,293,300,313,320,342,349,377],{"type":23,"tag":85,"props":286,"children":287},{"class":87,"line":88},[288],{"type":23,"tag":85,"props":289,"children":290},{"style":92},[291],{"type":28,"value":292},"# test_time_logger.py\n",{"type":23,"tag":85,"props":294,"children":295},{"class":87,"line":98},[296],{"type":23,"tag":85,"props":297,"children":298},{"emptyLinePlaceholder":102},[299],{"type":28,"value":105},{"type":23,"tag":85,"props":301,"children":302},{"class":87,"line":108},[303,308],{"type":23,"tag":85,"props":304,"children":305},{"style":112},[306],{"type":28,"value":307},"import",{"type":23,"tag":85,"props":309,"children":310},{"style":124},[311],{"type":28,"value":312}," unittest\n",{"type":23,"tag":85,"props":314,"children":315},{"class":87,"line":141},[316],{"type":23,"tag":85,"props":317,"children":318},{"emptyLinePlaceholder":102},[319],{"type":28,"value":105},{"type":23,"tag":85,"props":321,"children":322},{"class":87,"line":149},[323,328,333,337],{"type":23,"tag":85,"props":324,"children":325},{"style":112},[326],{"type":28,"value":327},"from",{"type":23,"tag":85,"props":329,"children":330},{"style":124},[331],{"type":28,"value":332}," unittest.mock ",{"type":23,"tag":85,"props":334,"children":335},{"style":112},[336],{"type":28,"value":307},{"type":23,"tag":85,"props":338,"children":339},{"style":124},[340],{"type":28,"value":341}," MagicMock\n",{"type":23,"tag":85,"props":343,"children":344},{"class":87,"line":168},[345],{"type":23,"tag":85,"props":346,"children":347},{"emptyLinePlaceholder":102},[348],{"type":28,"value":105},{"type":23,"tag":85,"props":350,"children":351},{"class":87,"line":178},[352,357,362,367,372],{"type":23,"tag":85,"props":353,"children":354},{"style":124},[355],{"type":28,"value":356},"sys.modules[",{"type":23,"tag":85,"props":358,"children":359},{"style":172},[360],{"type":28,"value":361},"'utime'",{"type":23,"tag":85,"props":363,"children":364},{"style":124},[365],{"type":28,"value":366},"] ",{"type":23,"tag":85,"props":368,"children":369},{"style":112},[370],{"type":28,"value":371},"=",{"type":23,"tag":85,"props":373,"children":374},{"style":124},[375],{"type":28,"value":376}," MagicMock()\n",{"type":23,"tag":85,"props":378,"children":379},{"class":87,"line":187},[380,384,389,393],{"type":23,"tag":85,"props":381,"children":382},{"style":112},[383],{"type":28,"value":327},{"type":23,"tag":85,"props":385,"children":386},{"style":124},[387],{"type":28,"value":388}," time_logger ",{"type":23,"tag":85,"props":390,"children":391},{"style":112},[392],{"type":28,"value":307},{"type":23,"tag":85,"props":394,"children":395},{"style":124},[396],{"type":28,"value":397}," TimeLogger\n",{"type":23,"tag":24,"props":399,"children":400},{},[401,403,409,411,417],{"type":28,"value":402},"Then, we can write a test that patches the ",{"type":23,"tag":59,"props":404,"children":406},{"className":405},[],[407],{"type":28,"value":408},"utime.time",{"type":28,"value":410}," functionality so that\nit returns a value of our choosing -- in this case, ",{"type":23,"tag":59,"props":412,"children":414},{"className":413},[],[415],{"type":28,"value":416},"1234",{"type":28,"value":418},".",{"type":23,"tag":76,"props":420,"children":422},{"className":78,"code":421,"language":17,"meta":7,"style":7},"class TestTimeLogger(unittest.TestCase):\n\n    def test_save_time(self):\n        \"\"\" Verify that the Epoch time is written to file\n        \"\"\"\n        with unittest.mock.patch(\"utime.time\", return_value=1234):\n            t = TimeLogger()\n            t.save_time()\n            with open(\"LAST_KNOWN_TIME\") as f:\n                self.assertEqual(\"1234\", f.read())\n",[423],{"type":23,"tag":59,"props":424,"children":425},{"__ignoreMap":7},[426,460,467,483,491,498,537,554,562,594],{"type":23,"tag":85,"props":427,"children":428},{"class":87,"line":88},[429,433,438,442,447,451,456],{"type":23,"tag":85,"props":430,"children":431},{"style":112},[432],{"type":28,"value":115},{"type":23,"tag":85,"props":434,"children":435},{"style":118},[436],{"type":28,"value":437}," TestTimeLogger",{"type":23,"tag":85,"props":439,"children":440},{"style":124},[441],{"type":28,"value":127},{"type":23,"tag":85,"props":443,"children":444},{"style":118},[445],{"type":28,"value":446},"unittest",{"type":23,"tag":85,"props":448,"children":449},{"style":124},[450],{"type":28,"value":418},{"type":23,"tag":85,"props":452,"children":453},{"style":118},[454],{"type":28,"value":455},"TestCase",{"type":23,"tag":85,"props":457,"children":458},{"style":124},[459],{"type":28,"value":138},{"type":23,"tag":85,"props":461,"children":462},{"class":87,"line":98},[463],{"type":23,"tag":85,"props":464,"children":465},{"emptyLinePlaceholder":102},[466],{"type":28,"value":105},{"type":23,"tag":85,"props":468,"children":469},{"class":87,"line":108},[470,474,479],{"type":23,"tag":85,"props":471,"children":472},{"style":112},[473],{"type":28,"value":155},{"type":23,"tag":85,"props":475,"children":476},{"style":118},[477],{"type":28,"value":478}," test_save_time",{"type":23,"tag":85,"props":480,"children":481},{"style":124},[482],{"type":28,"value":165},{"type":23,"tag":85,"props":484,"children":485},{"class":87,"line":141},[486],{"type":23,"tag":85,"props":487,"children":488},{"style":172},[489],{"type":28,"value":490},"        \"\"\" Verify that the Epoch time is written to file\n",{"type":23,"tag":85,"props":492,"children":493},{"class":87,"line":149},[494],{"type":23,"tag":85,"props":495,"children":496},{"style":172},[497],{"type":28,"value":184},{"type":23,"tag":85,"props":499,"children":500},{"class":87,"line":168},[501,505,510,515,519,525,529,533],{"type":23,"tag":85,"props":502,"children":503},{"style":112},[504],{"type":28,"value":193},{"type":23,"tag":85,"props":506,"children":507},{"style":124},[508],{"type":28,"value":509}," unittest.mock.patch(",{"type":23,"tag":85,"props":511,"children":512},{"style":172},[513],{"type":28,"value":514},"\"utime.time\"",{"type":23,"tag":85,"props":516,"children":517},{"style":124},[518],{"type":28,"value":212},{"type":23,"tag":85,"props":520,"children":522},{"style":521},"--shiki-default:#E36209",[523],{"type":28,"value":524},"return_value",{"type":23,"tag":85,"props":526,"children":527},{"style":112},[528],{"type":28,"value":371},{"type":23,"tag":85,"props":530,"children":531},{"style":130},[532],{"type":28,"value":416},{"type":23,"tag":85,"props":534,"children":535},{"style":124},[536],{"type":28,"value":138},{"type":23,"tag":85,"props":538,"children":539},{"class":87,"line":178},[540,545,549],{"type":23,"tag":85,"props":541,"children":542},{"style":124},[543],{"type":28,"value":544},"            t ",{"type":23,"tag":85,"props":546,"children":547},{"style":112},[548],{"type":28,"value":371},{"type":23,"tag":85,"props":550,"children":551},{"style":124},[552],{"type":28,"value":553}," TimeLogger()\n",{"type":23,"tag":85,"props":555,"children":556},{"class":87,"line":187},[557],{"type":23,"tag":85,"props":558,"children":559},{"style":124},[560],{"type":28,"value":561},"            t.save_time()\n",{"type":23,"tag":85,"props":563,"children":564},{"class":87,"line":235},[565,570,574,578,582,586,590],{"type":23,"tag":85,"props":566,"children":567},{"style":112},[568],{"type":28,"value":569},"            with",{"type":23,"tag":85,"props":571,"children":572},{"style":130},[573],{"type":28,"value":198},{"type":23,"tag":85,"props":575,"children":576},{"style":124},[577],{"type":28,"value":127},{"type":23,"tag":85,"props":579,"children":580},{"style":172},[581],{"type":28,"value":207},{"type":23,"tag":85,"props":583,"children":584},{"style":124},[585],{"type":28,"value":222},{"type":23,"tag":85,"props":587,"children":588},{"style":112},[589],{"type":28,"value":227},{"type":23,"tag":85,"props":591,"children":592},{"style":124},[593],{"type":28,"value":232},{"type":23,"tag":85,"props":595,"children":597},{"class":87,"line":596},10,[598,603,608,613],{"type":23,"tag":85,"props":599,"children":600},{"style":130},[601],{"type":28,"value":602},"                self",{"type":23,"tag":85,"props":604,"children":605},{"style":124},[606],{"type":28,"value":607},".assertEqual(",{"type":23,"tag":85,"props":609,"children":610},{"style":172},[611],{"type":28,"value":612},"\"1234\"",{"type":23,"tag":85,"props":614,"children":615},{"style":124},[616],{"type":28,"value":617},", f.read())\n",{"type":23,"tag":24,"props":619,"children":620},{},[621,623,629,631,637,639,644],{"type":28,"value":622},"Now, when the ",{"type":23,"tag":59,"props":624,"children":626},{"className":625},[],[627],{"type":28,"value":628},"save_time",{"type":28,"value":630}," method gets the latest time from ",{"type":23,"tag":59,"props":632,"children":634},{"className":633},[],[635],{"type":28,"value":636},"utime.time()",{"type":28,"value":638},", the\nvalue will be patched to return ",{"type":23,"tag":59,"props":640,"children":642},{"className":641},[],[643],{"type":28,"value":416},{"type":28,"value":645},". That value will be written to a file,\nand our unit test will pass!",{"type":23,"tag":647,"props":648,"children":650},"h2",{"id":649},"references",[651],{"type":28,"value":652},"References",{"type":23,"tag":654,"props":655,"children":656},"ol",{},[657],{"type":23,"tag":658,"props":659,"children":660},"li",{},[661],{"type":23,"tag":662,"props":663,"children":667},"a",{"href":664,"rel":665},"https://docs.python.org/3/library/unittest.html",[666],"nofollow",[668,673],{"type":23,"tag":59,"props":669,"children":671},{"className":670},[],[672],{"type":28,"value":446},{"type":28,"value":674}," — Unit testing framework",{"type":23,"tag":676,"props":677,"children":678},"style",{},[679],{"type":28,"value":680},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":7,"searchDepth":98,"depth":98,"links":682},[683],{"id":649,"depth":98,"text":652},"markdown","content:articles:unit-testing-micropython-with-mocks.md","content","articles/unit-testing-micropython-with-mocks.md","articles/unit-testing-micropython-with-mocks","md",1731782033542]