[{"data":1,"prerenderedAt":306},["Reactive",2],{"page-data":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"draft":6,"date":10,"tags":11,"categories":14,"cover_image":16,"excerpt":17,"body":39,"_type":301,"_id":302,"_source":303,"_file":304,"_extension":305},"/articles/nuxt-content-rss-feed","articles",false,"","How To Add an RSS Feed to a Nuxt Website","If you are a user of Nuxt Content and you wish to configure an RSS feed for your website, it's a surprisingly straight forward process! In this article, we will walk through the code changes required to host an RSS feed for both a statically generated, and Universal Nuxt application.","2024-01-06",[12,13],"nuxt","rss",[15],"programming","/images/nuxt-content-rss-feed.jpg",{"type":18,"children":19},"root",[20],{"type":21,"tag":22,"props":23,"children":24},"element","p",{},[25,28,37],{"type":26,"value":27},"text","If you are a user of ",{"type":21,"tag":29,"props":30,"children":34},"a",{"href":31,"rel":32},"https://content.nuxt.com/",[33],"nofollow",[35],{"type":26,"value":36},"Nuxt Content",{"type":26,"value":38}," and you wish to configure an RSS feed for your website, it's a surprisingly straight forward process! In this article, we will walk through the code changes required to host an RSS feed for both a statically generated, and Universal Nuxt application.",{"type":18,"children":40,"toc":295},[41,51,58,81,87,101,114,133,164,175,208,217,223,235,240,249,261,270,286],{"type":21,"tag":22,"props":42,"children":43},{},[44,45,50],{"type":26,"value":27},{"type":21,"tag":29,"props":46,"children":48},{"href":31,"rel":47},[33],[49],{"type":26,"value":36},{"type":26,"value":38},{"type":21,"tag":52,"props":53,"children":55},"h2",{"id":54},"preface",[56],{"type":26,"value":57},"Preface",{"type":21,"tag":22,"props":59,"children":60},{},[61,63,70,72,79],{"type":26,"value":62},"In version 2 of Nuxt, the community module, ",{"type":21,"tag":29,"props":64,"children":67},{"href":65,"rel":66},"https://github.com/nuxt-community/feed-module",[33],[68],{"type":26,"value":69},"nuxt-community/feed-module",{"type":26,"value":71}," was a popular choice for adding an RSS feed to your website. However, there has been an unresolved ",{"type":21,"tag":29,"props":73,"children":76},{"href":74,"rel":75},"https://github.com/nuxt-community/feed-module/issues/106",[33],[77],{"type":26,"value":78},"open issue",{"type":26,"value":80}," since April 1st, 2022 to add support for Nuxt v3. Thankfully, implementing this feature without a module is relatively straight forward.",{"type":21,"tag":52,"props":82,"children":84},{"id":83},"instructions",[85],{"type":26,"value":86},"Instructions",{"type":21,"tag":22,"props":88,"children":89},{},[90,92,99],{"type":26,"value":91},"First, install the ",{"type":21,"tag":29,"props":93,"children":96},{"href":94,"rel":95},"https://www.npmjs.com/package/feed",[33],[97],{"type":26,"value":98},"feed",{"type":26,"value":100}," library into your project:",{"type":21,"tag":102,"props":103,"children":108},"pre",{"className":104,"code":106,"language":107,"meta":7},[105],"language-shell","npm i -D feed\n","shell",[109],{"type":21,"tag":110,"props":111,"children":112},"code",{"__ignoreMap":7},[113],{"type":26,"value":106},{"type":21,"tag":22,"props":115,"children":116},{},[117,119,124,126,131],{"type":26,"value":118},"Then, create a ",{"type":21,"tag":110,"props":120,"children":121},{},[122],{"type":26,"value":123},"server/",{"type":26,"value":125}," folder in your project if it does not already exist, and create a file named ",{"type":21,"tag":110,"props":127,"children":128},{},[129],{"type":26,"value":130},"server/routes/atom.ts",{"type":26,"value":132},".",{"type":21,"tag":22,"props":134,"children":135},{},[136,138,142,144,148,150,155,157,162],{"type":26,"value":137},"Here, we will leverage the ",{"type":21,"tag":110,"props":139,"children":140},{},[141],{"type":26,"value":98},{"type":26,"value":143}," library and construct an XML representation of our Nuxt content. As you can see, we first define our ",{"type":21,"tag":110,"props":145,"children":146},{},[147],{"type":26,"value":98},{"type":26,"value":149}," with metadata associated with our RSS feed. This will be used by RSS readers to provide context to the end user. Then, we query our Nuxt content with ",{"type":21,"tag":110,"props":151,"children":152},{},[153],{"type":26,"value":154},"serverQueryContent",{"type":26,"value":156}," and append a ",{"type":21,"tag":110,"props":158,"children":159},{},[160],{"type":26,"value":161},"feed.addItem",{"type":26,"value":163}," for each article.",{"type":21,"tag":102,"props":165,"children":170},{"className":166,"code":168,"language":169,"meta":7},[167],"language-ts","import { serverQueryContent } from '#content/server';\nimport { Feed } from 'feed';\n\nconst BASE_URL = \"https://mywebsite.com\"\nconst AUTHOR_NAME = \"Firstname Lastname\"\n\nexport default defineEventHandler(async (event) => {\n\n    const feed = new Feed({\n      title: \"My Title\",\n      description: \"My Description\",\n      id: BASE_URL,\n      link: BASE_URL,\n      language: \"en\",\n      image: `${BASE_URL}/images/placeholder.png`,\n      favicon: `${BASE_URL}/favicon.ico`,\n      copyright: `All rights reserved ${new Date().getFullYear()}, ${AUTHOR_NAME}`,\n      updated: new Date(),\n      generator: \"Nuxt static site generation + Feed for Node.js\",\n      feedLinks: {\n        atom: `${BASE_URL}/atom`\n      },\n      author: {\n        name: AUTHOR_NAME,\n      }\n    });\n\n    const articles = await serverQueryContent(event).find();\n\n    articles.forEach((article) => {\n      feed.addItem({\n        title: article.title ? article.title : \"Missing Title\",\n        id: article._path,\n        link: `${BASE_URL}${article._path}`,\n        description: article.description,\n        author: [\n          {\n            name: AUTHOR_NAME,\n          },\n        ],\n        date: new Date(article.date),\n        image: article.cover_image ? `${BASE_URL}/${article.cover_image}` : undefined\n      });\n    });\n\n    return feed.atom1();\n});\n","ts",[171],{"type":21,"tag":110,"props":172,"children":173},{"__ignoreMap":7},[174],{"type":26,"value":168},{"type":21,"tag":22,"props":176,"children":177},{},[178,180,185,187,192,194,199,201,206],{"type":26,"value":179},"And that's just about it! Except, if you are statically generating your website with the ",{"type":21,"tag":110,"props":181,"children":182},{},[183],{"type":26,"value":184},"nuxt generate",{"type":26,"value":186}," command, you will need to configure this server-side route to be pre-rendered on site generation.  This is as simple as adding a ",{"type":21,"tag":110,"props":188,"children":189},{},[190],{"type":26,"value":191},"nitro",{"type":26,"value":193}," ",{"type":21,"tag":110,"props":195,"children":196},{},[197],{"type":26,"value":198},"prerender",{"type":26,"value":200}," definition in your ",{"type":21,"tag":110,"props":202,"children":203},{},[204],{"type":26,"value":205},"nuxt.config.ts",{"type":26,"value":207}," file, like so:",{"type":21,"tag":102,"props":209,"children":212},{"className":210,"code":211,"language":169,"meta":7},[167],"nitro: {\n  prerender: {\n    routes: ['/atom']\n  }\n}\n",[213],{"type":21,"tag":110,"props":214,"children":215},{"__ignoreMap":7},[216],{"type":26,"value":211},{"type":21,"tag":52,"props":218,"children":220},{"id":219},"bonus",[221],{"type":26,"value":222},"Bonus",{"type":21,"tag":22,"props":224,"children":225},{},[226,228,233],{"type":26,"value":227},"You may also be interested in adding a ",{"type":21,"tag":110,"props":229,"children":230},{},[231],{"type":26,"value":232},"sitemap.xml",{"type":26,"value":234}," to your website. This can be done in almost an identical fashion!",{"type":21,"tag":22,"props":236,"children":237},{},[238],{"type":26,"value":239},"Install the dependency:",{"type":21,"tag":102,"props":241,"children":244},{"className":242,"code":243,"language":107,"meta":7},[105],"npm i -D sitemap\n",[245],{"type":21,"tag":110,"props":246,"children":247},{"__ignoreMap":7},[248],{"type":26,"value":243},{"type":21,"tag":22,"props":250,"children":251},{},[252,254,259],{"type":26,"value":253},"Create a route at ",{"type":21,"tag":110,"props":255,"children":256},{},[257],{"type":26,"value":258},"server/routes/sitemap.xml.ts",{"type":26,"value":260},":",{"type":21,"tag":102,"props":262,"children":265},{"className":263,"code":264,"language":169,"meta":7},[167],"import { serverQueryContent } from '#content/server';\nimport { SitemapStream, streamToPromise } from 'sitemap';\n\nexport default defineEventHandler(async (event) => {\n    const articles = await serverQueryContent(event).find();\n\n    const sitemap = new SitemapStream({ hostname: 'https://my-website.com/' });\n\n    // Add non nuxt content endpoints here\n    sitemap.write({ url: '/' });\n    sitemap.write({ url: '/articles' });\n\n    // Dynamically generate routes for Nuxt markdown content\n    articles.forEach((article) => sitemap.write({ url: article._path, changefreq: 'monthly' }));\n    sitemap.end();\n\n    return (await streamToPromise(sitemap));\n});\n",[266],{"type":21,"tag":110,"props":267,"children":268},{"__ignoreMap":7},[269],{"type":26,"value":264},{"type":21,"tag":22,"props":271,"children":272},{},[273,275,279,281,285],{"type":26,"value":274},"And add the ",{"type":21,"tag":110,"props":276,"children":277},{},[278],{"type":26,"value":198},{"type":26,"value":280}," entry in your ",{"type":21,"tag":110,"props":282,"children":283},{},[284],{"type":26,"value":205},{"type":26,"value":260},{"type":21,"tag":102,"props":287,"children":290},{"className":288,"code":289,"language":169,"meta":7},[167],"nitro: {\n  prerender: {\n    routes: ['/sitemap.xml', '/atom']\n  }\n}\n",[291],{"type":21,"tag":110,"props":292,"children":293},{"__ignoreMap":7},[294],{"type":26,"value":289},{"title":7,"searchDepth":296,"depth":296,"links":297},2,[298,299,300],{"id":54,"depth":296,"text":57},{"id":83,"depth":296,"text":86},{"id":219,"depth":296,"text":222},"markdown","content:articles:nuxt-content-rss-feed.md","content","articles/nuxt-content-rss-feed.md","md",1704598275152]