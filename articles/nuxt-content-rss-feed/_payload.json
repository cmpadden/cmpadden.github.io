[{"data":1,"prerenderedAt":305},["Reactive",2],{"page-data":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"draft":6,"date":10,"tags":11,"categories":14,"cover_image":7,"excerpt":16,"body":38,"_type":300,"_id":301,"_source":302,"_file":303,"_extension":304},"/articles/nuxt-content-rss-feed","articles",false,"","How To Add an RSS Feed to a Nuxt Website","If you are a user of Nuxt Content and you wish to configure an RSS feed for your website, it's a surprisingly straight forward process! In this article, we will walk through the code changes required to host an RSS feed for both a statically generated, and Universal Nuxt application.","2024-01-06",[12,13],"nuxt","rss",[15],"programming",{"type":17,"children":18},"root",[19],{"type":20,"tag":21,"props":22,"children":23},"element","p",{},[24,27,36],{"type":25,"value":26},"text","If you are a user of ",{"type":20,"tag":28,"props":29,"children":33},"a",{"href":30,"rel":31},"https://content.nuxt.com/",[32],"nofollow",[34],{"type":25,"value":35},"Nuxt Content",{"type":25,"value":37}," and you wish to configure an RSS feed for your website, it's a surprisingly straight forward process! In this article, we will walk through the code changes required to host an RSS feed for both a statically generated, and Universal Nuxt application.",{"type":17,"children":39,"toc":294},[40,50,57,80,86,100,113,132,163,174,207,216,222,234,239,248,260,269,285],{"type":20,"tag":21,"props":41,"children":42},{},[43,44,49],{"type":25,"value":26},{"type":20,"tag":28,"props":45,"children":47},{"href":30,"rel":46},[32],[48],{"type":25,"value":35},{"type":25,"value":37},{"type":20,"tag":51,"props":52,"children":54},"h2",{"id":53},"preface",[55],{"type":25,"value":56},"Preface",{"type":20,"tag":21,"props":58,"children":59},{},[60,62,69,71,78],{"type":25,"value":61},"In version 2 of Nuxt, the community module, ",{"type":20,"tag":28,"props":63,"children":66},{"href":64,"rel":65},"https://github.com/nuxt-community/feed-module",[32],[67],{"type":25,"value":68},"nuxt-community/feed-module",{"type":25,"value":70}," was a popular choice for adding an RSS feed to your website. However, there has been an unresolved ",{"type":20,"tag":28,"props":72,"children":75},{"href":73,"rel":74},"https://github.com/nuxt-community/feed-module/issues/106",[32],[76],{"type":25,"value":77},"open issue",{"type":25,"value":79}," since April 1st, 2022 to add support for Nuxt v3. Thankfully, implementing this feature without a module is relatively straight forward.",{"type":20,"tag":51,"props":81,"children":83},{"id":82},"instructions",[84],{"type":25,"value":85},"Instructions",{"type":20,"tag":21,"props":87,"children":88},{},[89,91,98],{"type":25,"value":90},"First, install the ",{"type":20,"tag":28,"props":92,"children":95},{"href":93,"rel":94},"https://www.npmjs.com/package/feed",[32],[96],{"type":25,"value":97},"feed",{"type":25,"value":99}," library into your project:",{"type":20,"tag":101,"props":102,"children":107},"pre",{"className":103,"code":105,"language":106,"meta":7},[104],"language-shell","npm i -D feed\n","shell",[108],{"type":20,"tag":109,"props":110,"children":111},"code",{"__ignoreMap":7},[112],{"type":25,"value":105},{"type":20,"tag":21,"props":114,"children":115},{},[116,118,123,125,130],{"type":25,"value":117},"Then, create a ",{"type":20,"tag":109,"props":119,"children":120},{},[121],{"type":25,"value":122},"server/",{"type":25,"value":124}," folder in your project if it does not already exist, and create a file named ",{"type":20,"tag":109,"props":126,"children":127},{},[128],{"type":25,"value":129},"server/routes/atom.ts",{"type":25,"value":131},".",{"type":20,"tag":21,"props":133,"children":134},{},[135,137,141,143,147,149,154,156,161],{"type":25,"value":136},"Here, we will leverage the ",{"type":20,"tag":109,"props":138,"children":139},{},[140],{"type":25,"value":97},{"type":25,"value":142}," library and construct an XML representation of our Nuxt content. As you can see, we first define our ",{"type":20,"tag":109,"props":144,"children":145},{},[146],{"type":25,"value":97},{"type":25,"value":148}," with metadata associated with our RSS feed. This will be used by RSS readers to provide context to the end user. Then, we query our Nuxt content with ",{"type":20,"tag":109,"props":150,"children":151},{},[152],{"type":25,"value":153},"serverQueryContent",{"type":25,"value":155}," and append a ",{"type":20,"tag":109,"props":157,"children":158},{},[159],{"type":25,"value":160},"feed.addItem",{"type":25,"value":162}," for each article.",{"type":20,"tag":101,"props":164,"children":169},{"className":165,"code":167,"language":168,"meta":7},[166],"language-ts","import { serverQueryContent } from '#content/server';\nimport { Feed } from 'feed';\n\nconst BASE_URL = \"https://mywebsite.com\"\nconst AUTHOR_NAME = \"Firstname Lastname\"\n\nexport default defineEventHandler(async (event) => {\n\n    const feed = new Feed({\n      title: \"My Title\",\n      description: \"My Description\",\n      id: BASE_URL,\n      link: BASE_URL,\n      language: \"en\",\n      image: `${BASE_URL}/images/placeholder.png`,\n      favicon: `${BASE_URL}/favicon.ico`,\n      copyright: `All rights reserved ${new Date().getFullYear()}, ${AUTHOR_NAME}`,\n      updated: new Date(),\n      generator: \"Nuxt static site generation + Feed for Node.js\",\n      feedLinks: {\n        atom: `${BASE_URL}/atom`\n      },\n      author: {\n        name: AUTHOR_NAME,\n      }\n    });\n\n    const articles = await serverQueryContent(event).find();\n\n    articles.forEach((article) => {\n      feed.addItem({\n        title: article.title ? article.title : \"Missing Title\",\n        id: article._path,\n        link: `${BASE_URL}${article._path}`,\n        description: article.description,\n        author: [\n          {\n            name: AUTHOR_NAME,\n          },\n        ],\n        date: new Date(article.date),\n        image: article.cover_image ? `${BASE_URL}/${article.cover_image}` : undefined\n      });\n    });\n\n    return feed.atom1();\n});\n","ts",[170],{"type":20,"tag":109,"props":171,"children":172},{"__ignoreMap":7},[173],{"type":25,"value":167},{"type":20,"tag":21,"props":175,"children":176},{},[177,179,184,186,191,193,198,200,205],{"type":25,"value":178},"And that's just about it! Except, if you are statically generating your website with the ",{"type":20,"tag":109,"props":180,"children":181},{},[182],{"type":25,"value":183},"nuxt generate",{"type":25,"value":185}," command, you will need to configure this server-side route to be pre-rendered on site generation.  This is as simple as adding a ",{"type":20,"tag":109,"props":187,"children":188},{},[189],{"type":25,"value":190},"nitro",{"type":25,"value":192}," ",{"type":20,"tag":109,"props":194,"children":195},{},[196],{"type":25,"value":197},"prerender",{"type":25,"value":199}," definition in your ",{"type":20,"tag":109,"props":201,"children":202},{},[203],{"type":25,"value":204},"nuxt.config.ts",{"type":25,"value":206}," file, like so:",{"type":20,"tag":101,"props":208,"children":211},{"className":209,"code":210,"language":168,"meta":7},[166],"nitro: {\n  prerender: {\n    routes: ['/atom']\n  }\n}\n",[212],{"type":20,"tag":109,"props":213,"children":214},{"__ignoreMap":7},[215],{"type":25,"value":210},{"type":20,"tag":51,"props":217,"children":219},{"id":218},"bonus",[220],{"type":25,"value":221},"Bonus",{"type":20,"tag":21,"props":223,"children":224},{},[225,227,232],{"type":25,"value":226},"You may also be interested in adding a ",{"type":20,"tag":109,"props":228,"children":229},{},[230],{"type":25,"value":231},"sitemap.xml",{"type":25,"value":233}," to your website. This can be done in almost an identical fashion!",{"type":20,"tag":21,"props":235,"children":236},{},[237],{"type":25,"value":238},"Install the dependency:",{"type":20,"tag":101,"props":240,"children":243},{"className":241,"code":242,"language":106,"meta":7},[104],"npm i -D sitemap\n",[244],{"type":20,"tag":109,"props":245,"children":246},{"__ignoreMap":7},[247],{"type":25,"value":242},{"type":20,"tag":21,"props":249,"children":250},{},[251,253,258],{"type":25,"value":252},"Create a route at ",{"type":20,"tag":109,"props":254,"children":255},{},[256],{"type":25,"value":257},"server/routes/sitemap.xml.ts",{"type":25,"value":259},":",{"type":20,"tag":101,"props":261,"children":264},{"className":262,"code":263,"language":168,"meta":7},[166],"import { serverQueryContent } from '#content/server';\nimport { SitemapStream, streamToPromise } from 'sitemap';\n\nexport default defineEventHandler(async (event) => {\n    const articles = await serverQueryContent(event).find();\n\n    const sitemap = new SitemapStream({ hostname: 'https://my-website.com/' });\n\n    // Add non nuxt content endpoints here\n    sitemap.write({ url: '/' });\n    sitemap.write({ url: '/articles' });\n\n    // Dynamically generate routes for Nuxt markdown content\n    articles.forEach((article) => sitemap.write({ url: article._path, changefreq: 'monthly' }));\n    sitemap.end();\n\n    return (await streamToPromise(sitemap));\n});\n",[265],{"type":20,"tag":109,"props":266,"children":267},{"__ignoreMap":7},[268],{"type":25,"value":263},{"type":20,"tag":21,"props":270,"children":271},{},[272,274,278,280,284],{"type":25,"value":273},"And add the ",{"type":20,"tag":109,"props":275,"children":276},{},[277],{"type":25,"value":197},{"type":25,"value":279}," entry in your ",{"type":20,"tag":109,"props":281,"children":282},{},[283],{"type":25,"value":204},{"type":25,"value":259},{"type":20,"tag":101,"props":286,"children":289},{"className":287,"code":288,"language":168,"meta":7},[166],"nitro: {\n  prerender: {\n    routes: ['/sitemap.xml', '/atom']\n  }\n}\n",[290],{"type":20,"tag":109,"props":291,"children":292},{"__ignoreMap":7},[293],{"type":25,"value":288},{"title":7,"searchDepth":295,"depth":295,"links":296},2,[297,298,299],{"id":53,"depth":295,"text":56},{"id":82,"depth":295,"text":85},{"id":218,"depth":295,"text":221},"markdown","content:articles:nuxt-content-rss-feed.md","content","articles/nuxt-content-rss-feed.md","md",1704568619983]